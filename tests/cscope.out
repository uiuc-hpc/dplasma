cscope 15 $HOME/icl/dplasma/tests               0000759029
	@butterfly.c

1 
	~"d∂asma.h
"

2 
	~<°döt.h
>

5 
	mù
;

6 
	mjp
;

7 
	mw
;

8 
	mh
;

9 
uöçå_t
 
	moff£t
;

10 }
	tbtûe_öfo_t
;

13 
btûe_öfo_t
 
	$m≠_B_tûe_to_A
(
i
, 
j
, 
Np
, 
mb
, 
nb
){

14 
T1w
, 
T2w
, 
T3w
, 
T4w
, 
T5w
, 
T6w
, 
T7w
, 
T8w
, 
T9w
;

15 
T1h
, 
T2h
, 
T3h
, 
T4h
, 
T5h
, 
T6h
, 
T7h
, 
T8h
, 
T9h
;

16 
fuŒ_tûes_hÆf_A_h
, 
fuŒ_tûes_hÆf_A_w
, 
fuŒ_tûes_hÆf_B_h
, 
fuŒ_tûes_hÆf_B_w
;

17 
off_w
, 
off_h
;

18 
btûe_öfo_t
 
Tc
;

20 
T4w
 = (
Np
/2)%
nb
;

21 
T4h
 = (
Np
/2)%
mb
;

22 
T1w
 = 
nb
 - 
T4w
;

23 
T1h
 = 
mb
 - 
T4h
;

24 
T2w
 = 
T1w
;

25 
T2h
 = 
T4h
;

26 
T3w
 = 
T4w
;

27 
T3h
 = 
T1h
;

29 
T5w
 = 
T1w
;

30 if–
T4h
 < 
T1h
 ){

31 
T5h
 = 
T4h
;

32 }if–
T4h
 =
T1h
 ){

33 
T5h
 = 0;

34 }if–
T4h
 > 
T1h
 ){

35 
T5h
 = 
T4h
-
T1h
;

38 
T6w
 = 
T3w
;

39 
T6h
 = 
T5h
;

41 
T7w
 = 
T5h
;

42 
T7h
 = 
T5w
;

43 
T8w
 = 
T6h
;

44 
T8h
 = 
T6w
;

46 
T9w
 = 
T7w
;

47 
T9h
 = 
T5h
;

54 
fuŒ_tûes_hÆf_A_h
 = (
Np
/2)/
mb
;

55 
fuŒ_tûes_hÆf_A_w
 = (
Np
/2)/
nb
;

56 if–
T4h
 == 0 ){

57 
fuŒ_tûes_hÆf_B_h
 = 
fuŒ_tûes_hÆf_A_h
;

59 
fuŒ_tûes_hÆf_B_h
 = 2*
fuŒ_tûes_hÆf_A_h
;

61 if–
T4h
 >
T1h
 ){

64 
fuŒ_tûes_hÆf_B_h
++;

67 if–
T7w
 == 0 ){

68 
fuŒ_tûes_hÆf_B_w
 = 
fuŒ_tûes_hÆf_A_w
;

70 
fuŒ_tûes_hÆf_B_w
 = 2*
fuŒ_tûes_hÆf_A_w
;

72 if–
T7w
 >
T1w
 ){

75 
fuŒ_tûes_hÆf_B_w
++;

82 if–
i
 < 
fuŒ_tûes_hÆf_B_h
 ){

83 if–
T4h
 > 0 ){

85 
Tc
.
ù
 = 
i
/2;

87 
Tc
.
ù
 = 
i
;

90 if–(
i
%2)==1 && 
T4h
>0 ){

93 
Tc
.
h
 = 
T4h
;

94 
off_h
 = 
T1h
;

97 
Tc
.
h
 = 
T1h
;

98 
off_h
 = 0;

100 }if–(
i
 =
fuŒ_tûes_hÆf_B_h
Ë&& (
T5h
 > 0) ){

101 
Tc
.
ù
 = 
fuŒ_tûes_hÆf_A_h
;

102 
Tc
.
h
 = 
T5h
;

103 if–(
i
%2)==1 ){

104 
off_h
 = 
T1h
;

106 
off_h
 = 0;

108 }if–(
i
 =2*
fuŒ_tûes_hÆf_B_h
+1Ë&& (
T5h
 > 0) ){

109 
Tc
.
ù
 = (
Np
/
mb
);

110 
Tc
.
h
 = 
T5h
;

111 if–(
fuŒ_tûes_hÆf_B_h
%2)==1 ){

114 
off_h
 = 0;

118 
off_h
 = 
T4h
;

121 
i2
, 
i3
;

123 if–
T5h
 > 0 ){

125 
i2
 = 
i
-1;

128 
i2
 = 
i
;

131 if–
T4h
 > 0 ){

133 
Tc
.
ù
 = 
i2
/2;

135 
Tc
.
ù
 = 
i2
;

139 if–
fuŒ_tûes_hÆf_B_h
 > 2*
fuŒ_tûes_hÆf_A_h
 ){

142 if–(
i2
%2)==1 ){

143 
Tc
.
h
 = 
T1h
;

145 
Tc
.
h
 = 
T4h
;

151 if–(
i2
%2)==1 && (
T4h
>0) ){

152 
Tc
.
h
 = 
T4h
;

154 
Tc
.
h
 = 
T1h
;

158 
i3
 = 
i2
-
fuŒ_tûes_hÆf_B_h
;

159 if–(
i3
%2) == 0 ){

160 
off_h
 = (
Np
/2)%
mb
;

162 
off_h
 = 0;

171 if–
j
 < 
fuŒ_tûes_hÆf_B_w
 ){

172 if–
T4w
 > 0 ){

174 
Tc
.
jp
 = 
j
/2;

176 
Tc
.
jp
 = 
j
;

179 if–(
j
%2)==1 && 
T4w
>0 ){

182 
Tc
.
w
 = 
T4w
;

183 
off_w
 = 
T1w
;

186 
Tc
.
w
 = 
T1w
;

187 
off_w
 = 0;

189 }if–(
j
 =
fuŒ_tûes_hÆf_B_w
Ë&& (
T7w
 > 0) ){

190 
Tc
.
jp
 = 
fuŒ_tûes_hÆf_A_w
;

191 
Tc
.
w
 = 
T7w
;

192 if–(
j
%2)==1 ){

193 
off_w
 = 
T1w
;

195 
off_w
 = 0;

197 }if–(
j
 =2*
fuŒ_tûes_hÆf_B_w
+1Ë&& (
T7w
 > 0) ){

198 
Tc
.
jp
 = (
Np
/
nb
);

199 
Tc
.
w
 = 
T7w
;

200 if–(
fuŒ_tûes_hÆf_B_w
%2)==1 ){

203 
off_w
 = 0;

207 
off_w
 = 
T4w
;

210 
j2
, 
j3
;

212 if–
T7w
 > 0 ){

214 
j2
 = 
j
-1;

217 
j2
 = 
j
;

220 if–
T4w
 > 0 ){

222 
Tc
.
jp
 = 
j2
/2;

224 
Tc
.
jp
 = 
j2
;

228 if–
fuŒ_tûes_hÆf_B_w
 > 2*
fuŒ_tûes_hÆf_A_w
 ){

231 if–(
j2
%2)==1 ){

232 
Tc
.
w
 = 
T1w
;

235 
Tc
.
w
 = 
T4w
;

241 if–(
j2
%2)==1 && (
T4w
>0) ){

242 
Tc
.
w
 = 
T4w
;

244 
Tc
.
w
 = 
T1w
;

248 
j3
 = 
j2
-
fuŒ_tûes_hÆf_B_w
;

249 if–(
j3
%2) == 0 ){

250 
off_w
 = (
Np
/2)%
nb
;

252 
off_w
 = 0;

256 
Tc
.
off£t
 = (
uöçå_t
)(
off_h
*
mb
+
off_w
);

258  
Tc
;

259 
	}
}

262 
	$ønk_of
(
i
, 
j
){

263 
btûe_öfo_t
 
Tc
;

265 
Tc
 = 
	`m≠_B_tûe_to_A
(
i
, 
j
, 
Np
, 
mb
, 
nb
);

267  
dcA
.
su≥r
.su≥r.
	`ønk_of
(
Tc
.
ù
, Tc.
jp
);

268 
	}
}

271 
d∂asma_com∂ex64_t
* 
	$d©a_of
(
i
, 
j
){

272 
uöçå_t
 
±r
=0;

273 
btûe_öfo_t
 
Tc
;

275 
Tc
 = 
	`m≠_B_tûe_to_A
(
i
, 
j
, 
Np
, 
mb
, 
nb
);

277 
±r
 = (
uöçå_t
)
dcA
.
su≥r
.su≥r.
	`d©a_of
(
Tc
.
ù
, Tc.
jp
);

278 
±r
 +
Tc
.
off£t
*(
d∂asma_com∂ex64_t
);

279  (
d∂asma_com∂ex64_t
*)
±r
;

280 
	}
}

	@common.c

7 
	~"∑r£c/ru¡ime.h
"

8 
	~"∑r£c/executi⁄_°ªam.h
"

9 
	~"∑r£c/utûs/mˇ_∑øm.h
"

10 
	~"d∂asma.h
"

12 
	~"comm⁄.h
"

14 
	~<°dlib.h
>

15 
	~<°dio.h
>

16 #ifde‡
PARSEC_HAVE_UNISTD_H


17 
	~<uni°d.h
>

19 #ifde‡
PARSEC_HAVE_LIMITS_H


20 
	~<limôs.h
>

22 #i‡
deföed
(
PARSEC_HAVE_GETOPT_H
)

23 
	~<gë›t.h
>

25 #i‡
deföed
(
PARSEC_HAVE_MPI
)

26 
	~<mpi.h
>

27 #ñi‡
deföed
(
PARSEC_HAVE_LCI
)

28 
	~<lc.h
>

29 
lc_ï
 
	gï
;

32 *
	gPARSEC_SCHED_NAME
[] = {

47 #i‡
deföed
(
PARSEC_HAVE_MPI
)

48 
MPI_D©©y≥
 
	gSYNCHRO
 = 
MPI_BYTE
;

51 c⁄° 
	gside
[2] = { 
d∂asmaLe·
, 
d∂asmaRight
 };

52 c⁄° 
	gu∂o
[2] = { 
d∂asmaUµî
, 
d∂asmaLowî
 };

53 c⁄° 
	gdüg
[2] = { 
d∂asmaN⁄Unô
, 
d∂asmaUnô
 };

54 c⁄° 
	gå™s
[3] = { 
d∂asmaNoTøns
, 
d∂asmaTøns
, 
d∂asmaC⁄jTøns
 };

55 c⁄° 
	gn‹ms
[4] = { 
d∂asmaMaxN‹m
, 
d∂asmaO√N‹m
, 
d∂asmaInfN‹m
, 
d∂asmaFrobíiusN‹m
 };

57 c⁄° *
	gside°r
[2] = { "Left ", "Right" };

58 c⁄° *
	gu∂o°r
[2] = { "Upper", "Lower" };

59 c⁄° *
	gdüg°r
[2] = { "NonUnit", "Unit " };

60 c⁄° *
	gå™s°r
[3] = { "N", "T", "H" };

61 c⁄° *
	gn‹ms°r
[4] = { "Max", "One", "Inf", "Fro" };

63 
	gtime_ñ≠£d
 = 0.0;

64 
	gsync_time_ñ≠£d
 = 0.0;

65 
	gÆpha
 = 1.;

70 
	$¥öt_ußge
()

72 
	`Ârötf
(
°dîr
,

118 
	`Ârötf
(
°dîr
,

162 
	`∑r£c_ußge
();

163 
	}
}

165 
	#GETOPT_STRING
 "bc:mo:g::p:P:q:Q:N:M:K:A:B:C:i:t:T:s:S:xXv::hd:ry:V:a:R:G:"

	)

167 #i‡
deföed
(
PARSEC_HAVE_GETOPT_LONG
)

168 
›ti⁄
 
	gl⁄g_›ti⁄s
[] =

171 {"c‹es", 
ªquúed_¨gumít
, 0, 'c'},

172 {"c", 
ªquúed_¨gumít
, 0, 'c'},

173 {"thªad_mu…i",
no_¨gumít
, 0, 'm'},

174 {"m", 
no_¨gumít
, 0, 'm'},

175 {"o", 
ªquúed_¨gumít
, 0, 'o'},

176 {"scheduÀr", 
ªquúed_¨gumít
, 0, 'o'},

177 {"gpus", 
ªquúed_¨gumít
, 0, 'g'},

178 {"g", 
ªquúed_¨gumít
, 0, 'g'},

179 {"V", 
ªquúed_¨gumít
, 0, 'V'},

180 {"vpm≠", 
ªquúed_¨gumít
, 0, 'V'},

181 {"ht", 
ªquúed_¨gumít
, 0, 'H'},

182 {"dŸ", 
ªquúed_¨gumít
, 0, '.'},

185 {"grid-rows", 
ªquúed_¨gumít
, 0, 'p'},

186 {"p", 
ªquúed_¨gumít
, 0, 'p'},

187 {"P", 
ªquúed_¨gumít
, 0, 'p'},

188 {"grid-cﬁs", 
ªquúed_¨gumít
, 0, 'q'},

189 {"q", 
ªquúed_¨gumít
, 0, 'q'},

190 {"Q", 
ªquúed_¨gumít
, 0, 'q'},

192 {"N", 
ªquúed_¨gumít
, 0, 'N'},

193 {"M", 
ªquúed_¨gumít
, 0, 'M'},

194 {"K", 
ªquúed_¨gumít
, 0, 'K'},

195 {"NRHS", 
ªquúed_¨gumít
, 0, 'K'},

196 {"LDA", 
ªquúed_¨gumít
, 0, 'A'},

197 {"A", 
ªquúed_¨gumít
, 0, 'A'},

198 {"LDB", 
ªquúed_¨gumít
, 0, 'B'},

199 {"B", 
ªquúed_¨gumít
, 0, 'B'},

200 {"LDC", 
ªquúed_¨gumít
, 0, 'C'},

201 {"C", 
ªquúed_¨gumít
, 0, 'C'},

202 {"IB", 
ªquúed_¨gumít
, 0, 'i'},

203 {"i", 
ªquúed_¨gumít
, 0, 'i'},

204 {"MB", 
ªquúed_¨gumít
, 0, 't'},

205 {"t", 
ªquúed_¨gumít
, 0, 't'},

206 {"NB", 
ªquúed_¨gumít
, 0, 'T'},

207 {"T", 
ªquúed_¨gumít
, 0, 'T'},

208 {"kp", 
ªquúed_¨gumít
, 0, 's'},

209 {"SMB", 
ªquúed_¨gumít
, 0, 's'},

210 {"s", 
ªquúed_¨gumít
, 0, 's'},

211 {"kq", 
ªquúed_¨gumít
, 0, 'S'},

212 {"SNB", 
ªquúed_¨gumít
, 0, 'S'},

213 {"S", 
ªquúed_¨gumít
, 0, 'S'},

214 {"check", 
no_¨gumít
, 0, 'x'},

215 {"x", 
no_¨gumít
, 0, 'x'},

216 {"check_öv", 
no_¨gumít
, 0, 'X'},

217 {"X", 
no_¨gumít
, 0, 'X'},

219 {"sync", 
no_¨gumít
, 0, 'b'},

220 {"b", 
no_¨gumít
, 0, 'b'},

223 {"qr_a", 
ªquúed_¨gumít
, 0, '0'},

224 {"qr_p", 
ªquúed_¨gumít
, 0, '1'},

225 {"d", 
ªquúed_¨gumít
, 0, 'd'},

226 {"domöo", 
ªquúed_¨gumít
, 0, 'd'},

227 {"r", 
no_¨gumít
, 0, 'r'},

228 {"t§r", 
no_¨gumít
, 0, 'r'},

229 {"åìl", 
ªquúed_¨gumít
, 0, 'l'},

230 {"åìh", 
ªquúed_¨gumít
, 0, 'L'},

233 {"¸ôîü", 
ªquúed_¨gumít
, 0, '1'},

234 {"Æpha", 
ªquúed_¨gumít
, 0, 'a'},

235 {"£ed", 
ªquúed_¨gumít
, 0, 'R'},

236 {"mtx", 
ªquúed_¨gumít
, 0, 'G'},

239 {"z", 
ªquúed_¨gumít
, 0, 'z'},

240 {"HNB", 
ªquúed_¨gumít
, 0, 'z'},

241 {"HMB", 
ªquúed_¨gumít
, 0, 'z'},

244 {"buévl", 
ªquúed_¨gumít
, 0, 'y'},

245 {"y", 
ªquúed_¨gumít
, 0, 'y'},

248 {"vîbo£", 
›ti⁄Æ_¨gumít
, 0, 'v'},

249 {"v", 
›ti⁄Æ_¨gumít
, 0, 'v'},

250 {"hñp", 
no_¨gumít
, 0, 'h'},

251 {"h", 
no_¨gumít
, 0, 'h'},

253 {"ƒuns", 
ªquúed_¨gumít
, 0, '3'},

259 **
ívú⁄
;

261 
	$ªad_¨gumíts
(*
_¨gc
, *** 
_¨gv
, * 
ù¨am
)

263 
›t
 = 0;

264 
rc
, 
c
;

265 
¨gc
 = *
_¨gc
;

266 **
¨gv
 = *
_¨gv
;

267 *
add_dŸ
 = 
NULL
;

268 *
vÆue
;

271 
ù¨am
[
IPARAM_RANDOM_SEED
] = 3872;

272 
ù¨am
[
IPARAM_MATRIX_INIT
] = 
d∂asmaM©rixR™dom
;

273 
ù¨am
[
IPARAM_NRUNS
] = 1;

276 #i‡
	`deföed
(
PARSEC_HAVE_GETOPT_LONG
)

277 
c
 = 
	`gë›t_l⁄g_⁄ly
(
¨gc
, 
¨gv
, "",

278 
l⁄g_›ti⁄s
, &
›t
);

280 
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, 
GETOPT_STRING
);

281 (Ë
›t
;

285 
c
)

287 'c': 
ù¨am
[
IPARAM_NCORES
] = 
	`©oi
(
›èrg
); ;

288 '3': 
ù¨am
[
IPARAM_NRUNS
] = 
	`©oi
(
›èrg
); ;

289 'm': 
ù¨am
[
IPARAM_THREAD_MT
] = 1; ;

291 if–!
	`°rcmp
(
›èrg
, "LFQ") )

292 
ù¨am
[
IPARAM_SCHEDULER
] = 
PARSEC_SCHEDULER_LFQ
;

293 if–!
	`°rcmp
(
›èrg
, "LTQ") )

294 
ù¨am
[
IPARAM_SCHEDULER
] = 
PARSEC_SCHEDULER_LTQ
;

295 if–!
	`°rcmp
(
›èrg
, "AP") )

296 
ù¨am
[
IPARAM_SCHEDULER
] = 
PARSEC_SCHEDULER_AP
;

297 if–!
	`°rcmp
(
›èrg
, "LHQ") )

298 
ù¨am
[
IPARAM_SCHEDULER
] = 
PARSEC_SCHEDULER_LHQ
;

299 if–!
	`°rcmp
(
›èrg
, "GD") )

300 
ù¨am
[
IPARAM_SCHEDULER
] = 
PARSEC_SCHEDULER_GD
;

301 if–!
	`°rcmp
(
›èrg
, "PBQ") )

302 
ù¨am
[
IPARAM_SCHEDULER
] = 
PARSEC_SCHEDULER_PBQ
;

303 if–!
	`°rcmp
(
›èrg
, "IP") )

304 
ù¨am
[
IPARAM_SCHEDULER
] = 
PARSEC_SCHEDULER_IP
;

305 if–!
	`°rcmp
(
›èrg
, "RND") )

306 
ù¨am
[
IPARAM_SCHEDULER
] = 
PARSEC_SCHEDULER_RND
;

308 
	`Ârötf
(
°dîr
, "#!!!!! malformed scheduler value %s (accepted: LFQ LTQ PBQ AP GD RND LHQ IP). RevertingÅo default LFQ\n",

309 
›èrg
);

310 
ù¨am
[
IPARAM_SCHEDULER
] = 
PARSEC_SCHEDULER_LFQ
;

312 
	`∑r£c_£ãnv_mˇ_∑øm
–"mˇ_sched", 
PARSEC_SCHED_NAME
[
ù¨am
[
IPARAM_SCHEDULER
]], &
ívú⁄
 );

316 #i‡!
	`deföed
(
DPLASMA_HAVE_CUDA
)

317 
ù¨am
[
IPARAM_NGPUS
] = 
DPLASMA_ERR_NOT_SUPPORTED
;

319 if(
ù¨am
[
IPARAM_NGPUS
] =
DPLASMA_ERR_NOT_SUPPORTED
) {

320 
	`Ârötf
(
°dîr
, "#!!!!! ThisÅest doesÇot have GPU support. GPU disabled.\n");

323 if(
›èrg
Ë
ù¨am
[
IPARAM_NGPUS
] = 
	`©oi
(optarg);

324 
ù¨am
[
IPARAM_NGPUS
] = 
INT_MAX
;

326 
rc
 = 
	`a•rötf
(&
vÆue
, "%d", 
ù¨am
[
IPARAM_NGPUS
]);

327 
	`∑r£c_£ãnv_mˇ_∑øm
–"devi˚_cuda_íabÀd", 
vÆue
, &
ívú⁄
 );

328 
	`‰ì
(
vÆue
);

331 'p': 'P': 
ù¨am
[
IPARAM_P
] = 
	`©oi
(
›èrg
); ;

332 'q': 'Q': 
ù¨am
[
IPARAM_Q
] = 
	`©oi
(
›èrg
); ;

333 'N': 
ù¨am
[
IPARAM_N
] = 
	`©oi
(
›èrg
); ;

334 'M': 
ù¨am
[
IPARAM_M
] = 
	`©oi
(
›èrg
); ;

335 'K': 
ù¨am
[
IPARAM_K
] = 
	`©oi
(
›èrg
); ;

336 'A': 
ù¨am
[
IPARAM_LDA
] = 
	`©oi
(
›èrg
); ;

337 'B': 
ù¨am
[
IPARAM_LDB
] = 
	`©oi
(
›èrg
); ;

338 'C': 
ù¨am
[
IPARAM_LDC
] = 
	`©oi
(
›èrg
); ;

340 'i': 
ù¨am
[
IPARAM_IB
] = 
	`©oi
(
›èrg
); ;

341 't': 
ù¨am
[
IPARAM_MB
] = 
	`©oi
(
›èrg
); ;

342 'T': 
ù¨am
[
IPARAM_NB
] = 
	`©oi
(
›èrg
); ;

343 's': 
ù¨am
[
IPARAM_KP
] = 
	`©oi
(
›èrg
); ;

344 'S': 
ù¨am
[
IPARAM_KQ
] = 
	`©oi
(
›èrg
); ;

346 'X': 
ù¨am
[
IPARAM_CHECKINV
] = 1;

348 'x': 
ù¨am
[
IPARAM_CHECK
] = 1; i∑øm[
IPARAM_VERBOSE
] = 
	`max
(2, iparam[IPARAM_VERBOSE]); ;

350 'b': 
ù¨am
[
IPARAM_ASYNC
] = 0; ;

353 '0': 
ù¨am
[
IPARAM_QR_TS_SZE
] = 
	`©oi
(
›èrg
); ;

354 '1': 
ù¨am
[
IPARAM_QR_HLVL_SZE
] = 
	`©oi
(
›èrg
); ;

356 'R': 
ù¨am
[
IPARAM_RANDOM_SEED
] = 
	`©oi
(
›èrg
); ;

357 'G': 
ù¨am
[
IPARAM_MATRIX_INIT
] = 
	`©oi
(
›èrg
); ;

359 'd': 
ù¨am
[
IPARAM_QR_DOMINO
] = 
	`©oi
(
›èrg
) ? 1 : 0; ;

360 'r': 
ù¨am
[
IPARAM_QR_TSRR
] = 1; ;

362 'l': 
ù¨am
[
IPARAM_LOWLVL_TREE
] = 
	`©oi
(
›èrg
); ;

363 'L': 
ù¨am
[
IPARAM_HIGHLVL_TREE
] = 
	`©oi
(
›èrg
); ;

366 'a': 
Æpha
 = 
	`©of
(
›èrg
); ;

369 'y': 
ù¨am
[
IPARAM_BUT_LEVEL
] = 
	`©oi
(
›èrg
); ;

372 'z': 
ù¨am
[
IPARAM_HNB
] = i∑øm[
IPARAM_HMB
] = 
	`©oi
(
›èrg
); ;

375 if(
›èrg
Ë
ù¨am
[
IPARAM_VERBOSE
] = 
	`©oi
(optarg);

376 
ù¨am
[
IPARAM_VERBOSE
] = 2;

380 if–0 =
ù¨am
[
IPARAM_RANK
] ) 
	`Ârötf
(
°dîr
, "#!!!!! o±i⁄ '%s' dïªˇãd i¿ã°ögÖrogøms, iàshould bê∑s£dÅÿPaRSEC in°ód i¿thêexa˘ samêf‹m©á·î --\n", 
l⁄g_›ti⁄s
[
›t
].
«me
);

381 
	`exô
(-10);

385 if–0 =
ù¨am
[
IPARAM_RANK
] ) 
	`Ârötf
(
°dîr
, "#!!!!! o±i⁄ '%s' dïªˇãd i¿ã°ögÖrogøms, iàshould bê∑s£dÅÿPaRSEC in°ód i¿thêexa˘ samêf‹m©á·î --\n", 
l⁄g_›ti⁄s
[
›t
].
«me
);

386 
	`exô
(-10);

390 
add_dŸ
 = 
›èrg
;

393 'h': 
	`¥öt_ußge
(); 
	`exô
(0);

397 
	`exô
(1);

403 } -1 !
c
);

405 if–
NULL
 !
add_dŸ
 ) {

406 
i
, 
has_dashdash
 = 0, 
has_∑r£cdŸ
 = 0;

407 
i
 = 1; i < 
¨gc
; i++) {

408 if–!
	`°rcmp
–
¨gv
[
i
], "--") ) {

409 
has_dashdash
 = 1;

411 if–
has_dashdash
 && !
	`°∫cmp
–
¨gv
[
i
], "--parsec_dot", 11 ) ) {

412 
has_∑r£cdŸ
 = 1;

416 if–!
has_∑r£cdŸ
 ) {

417 **
tmp
;

418 
tmpc
;

419 if–!
has_dashdash
 ) {

420 
tmpc
 = *(
_¨gc
) + 2;

421 
tmp
 = (**)
	`mÆloc
((
tmpc
+1) * (*));

422 
tmp
[ 
tmpc
 - 2 ] = 
	`°rdup
("--");

424 
tmpc
 = *(
_¨gc
) + 1;

425 
tmp
 = (**)
	`mÆloc
((
tmpc
+1) * (*));

427 
i
 = 0; i < (*
_¨gc
);i++)

428 
tmp
[
i
] = (*
_¨gv
)[i];

430 
rc
 = 
	`a•rötf
–&
tmp
[ 
tmpc
 - 1 ], "--∑r£c_dŸ=%s", 
add_dŸ
 );

431 
tmp
[ 
tmpc
 ] = 
NULL
;

433 *
_¨gc
 = 
tmpc
;

434 *
_¨gv
 = 
tmp
;

440 if(0 =
ù¨am
[
IPARAM_N
] && 
›töd
 < 
¨gc
) {

441 
ù¨am
[
IPARAM_N
] = 
	`©oi
(
¨gv
[
›töd
++]);

443 ()
rc
;

444 
	}
}

446 
	$∑r£_¨gumíts
(*
ù¨am
) {

447 
vîbo£
 = 
ù¨am
[
IPARAM_RANK
] ? 0 : i∑øm[
IPARAM_VERBOSE
];

450 if(
ù¨am
[
IPARAM_NRUNS
] < 1) iparam[IPARAM_NRUNS] = 1;

452 if(
ù¨am
[
IPARAM_NGPUS
] < 0) iparam[IPARAM_NGPUS] = 0;

453 if(
ù¨am
[
IPARAM_NGPUS
] > 0) {

454 i‡(
ù¨am
[
IPARAM_VERBOSE
] > 3) {

455 
	`∑r£c_£ãnv_mˇ_∑øm
–"devi˚_show_ˇ∑bûôõs", "1", &
ívú⁄
 );

457 i‡(
ù¨am
[
IPARAM_VERBOSE
] > 2) {

458 
	`∑r£c_£ãnv_mˇ_∑øm
–"devi˚_show_°©i°ics", "1", &
ívú⁄
 );

462 
	`∑r£c_£ãnv_mˇ_∑øm
( "runtime_comm_thread_multiple",

463 
ù¨am
[
IPARAM_THREAD_MT
] ? "1" : "0", &
ívú⁄
 );

466 if(0 =
ù¨am
[
IPARAM_P
])

467 
ù¨am
[
IPARAM_P
] = i∑øm[
IPARAM_NNODES
];

468 if(
ù¨am
[
IPARAM_P
] > i∑øm[
IPARAM_NNODES
])

470 
	`Ârötf
(
°dîr
, "#XXXXX Thereáre only %dÇodes inÅhe world,ánd youÑequested P=%d\n",

471 
ù¨am
[
IPARAM_NNODES
], i∑øm[
IPARAM_P
]);

472 
	`exô
(2);

474 if(0 =
ù¨am
[
IPARAM_Q
])

475 
ù¨am
[
IPARAM_Q
] = i∑øm[
IPARAM_NNODES
] / i∑øm[
IPARAM_P
];

476 
pq≈
 = 
ù¨am
[
IPARAM_Q
] * i∑øm[
IPARAM_P
];

477 if(
pq≈
 > 
ù¨am
[
IPARAM_NNODES
])

479 
	`Ârötf
(
°dîr
, "#XXXXXÅhê¥o˚s†grid PxQ (%dx%dËi†œrgîÅh™Åhênumbî o‡node†(%d)!\n", 
ù¨am
[
IPARAM_P
], i∑øm[
IPARAM_Q
], i∑øm[
IPARAM_NNODES
]);

480 
	`exô
(2);

482 if(
vîbo£
 && (
pq≈
 < 
ù¨am
[
IPARAM_NNODES
]))

484 
	`Ârötf
(
°dîr
, "#!!!!!Åhê¥o˚s†grid PxQ (%dx%dËi†smÆÀ∏th™Åhênumbî o‡node†(%d). Somênode†¨êidlög!\n", 
ù¨am
[
IPARAM_P
], i∑øm[
IPARAM_Q
], i∑øm[
IPARAM_NNODES
]);

487 if(0 =
ù¨am
[
IPARAM_N
])

489 
	`Ârötf
(
°dîr
, "#XXXXXÅhe matrix size (N) isÇot set!\n");

490 
	`exô
(2);

492 if(0 =
ù¨am
[
IPARAM_M
]Ëù¨am[IPARAM_M] = i∑øm[
IPARAM_N
];

493 if(0 =
ù¨am
[
IPARAM_K
]Ëù¨am[IPARAM_K] = i∑øm[
IPARAM_N
];

496 if(-'m' =
ù¨am
[
IPARAM_LDA
]Ëù¨am[IPARAM_LDA] = i∑øm[
IPARAM_M
];

497 if(-'n' =
ù¨am
[
IPARAM_LDA
]Ëù¨am[IPARAM_LDA] = i∑øm[
IPARAM_N
];

498 if(-'k' =
ù¨am
[
IPARAM_LDA
]Ëù¨am[IPARAM_LDA] = i∑øm[
IPARAM_K
];

499 if(-'m' =
ù¨am
[
IPARAM_LDB
]Ëù¨am[IPARAM_LDB] = i∑øm[
IPARAM_M
];

500 if(-'n' =
ù¨am
[
IPARAM_LDB
]Ëù¨am[IPARAM_LDB] = i∑øm[
IPARAM_N
];

501 if(-'k' =
ù¨am
[
IPARAM_LDB
]Ëù¨am[IPARAM_LDB] = i∑øm[
IPARAM_K
];

502 if(-'m' =
ù¨am
[
IPARAM_LDC
]Ëù¨am[IPARAM_LDC] = i∑øm[
IPARAM_M
];

503 if(-'n' =
ù¨am
[
IPARAM_LDC
]Ëù¨am[IPARAM_LDC] = i∑øm[
IPARAM_N
];

504 if(-'k' =
ù¨am
[
IPARAM_LDC
]Ëù¨am[IPARAM_LDC] = i∑øm[
IPARAM_K
];

507 
	`as£π
(
ù¨am
[
IPARAM_IB
]);

508 if(
ù¨am
[
IPARAM_NB
] <0 && i∑øm[
IPARAM_MB
] > 0) iparam[IPARAM_NB] = iparam[IPARAM_MB];

509 if(
ù¨am
[
IPARAM_MB
] <0 && i∑øm[
IPARAM_NB
] > 0) iparam[IPARAM_MB] = iparam[IPARAM_NB];

510 if(
ù¨am
[
IPARAM_NGPUS
] && i∑øm[
IPARAM_MB
] < 0) iparam[IPARAM_MB] = -384;

511 if(
ù¨am
[
IPARAM_NGPUS
] && i∑øm[
IPARAM_NB
] < 0) iparam[IPARAM_NB] = -384;

512 if(
ù¨am
[
IPARAM_MB
] < 0) iparam[IPARAM_MB] = -iparam[IPARAM_MB];

513 if(
ù¨am
[
IPARAM_NB
] < 0) iparam[IPARAM_NB] = -iparam[IPARAM_NB];

516 if(-'p' =
ù¨am
[
IPARAM_KP
]Ëù¨am[IPARAM_KP] = (ù¨am[
IPARAM_M
]/ù¨am[
IPARAM_MB
])/ù¨am[
IPARAM_P
];

517 if(-'q' =
ù¨am
[
IPARAM_KQ
]Ëù¨am[IPARAM_KQ] = (ù¨am[
IPARAM_N
]/ù¨am[
IPARAM_NB
])/ù¨am[
IPARAM_Q
];

518 if(0 =
ù¨am
[
IPARAM_KP
]) iparam[IPARAM_KP] = 1;

519 if(0 =
ù¨am
[
IPARAM_KQ
]) iparam[IPARAM_KQ] = 1;

520 if(0 =
ù¨am
[
IPARAM_HMB
]Ëù¨am[IPARAM_HMB] = i∑øm[
IPARAM_MB
];

521 if(0 =
ù¨am
[
IPARAM_HNB
]Ëù¨am[IPARAM_HNB] = i∑øm[
IPARAM_NB
];

524 if(-'P' =
ù¨am
[
IPARAM_QR_HLVL_SZE
]Ëù¨am[IPARAM_QR_HLVL_SZE] = i∑øm[
IPARAM_P
];

525 if(-'Q' =
ù¨am
[
IPARAM_QR_HLVL_SZE
]Ëù¨am[IPARAM_QR_HLVL_SZE] = i∑øm[
IPARAM_Q
];

526 
	}
}

528 
	$¥öt_¨gumíts
(* 
ù¨am
)

530 
vîbo£
 = 
ù¨am
[
IPARAM_RANK
] ? 0 : i∑øm[
IPARAM_VERBOSE
];

532 if(
vîbo£
)

533 
	`Ârötf
(
°dîr
, "#+++++ c‹e†dëe˘ed : %d\n", 
ù¨am
[
IPARAM_NCORES
]);

535 if(
vîbo£
 > 1Ë
	`Ârötf
(
°dîr
, "#+++++Çodes x cores + gpu : %d x %d + %d (%d+%d)\n"

538 
ù¨am
[
IPARAM_NNODES
],

539 
ù¨am
[
IPARAM_NCORES
],

540 
ù¨am
[
IPARAM_NGPUS
],

541 
ù¨am
[
IPARAM_NNODES
] * i∑øm[
IPARAM_NCORES
],

542 
ù¨am
[
IPARAM_NNODES
] * i∑øm[
IPARAM_NGPUS
],

543 
ù¨am
[
IPARAM_THREAD_MT
]? "THREAD_MULTIPLE": "THREAD_SERIALIZED",

544 
ù¨am
[
IPARAM_P
], i∑øm[
IPARAM_Q
],

545 
ù¨am
[
IPARAM_Q
] * i∑øm[
IPARAM_P
], i∑øm[
IPARAM_NNODES
]);

547 if(
vîbo£
)

549 
	`Ârötf
(
°dîr
, "#+++++ M x N x K|NRHS : %d x %d x %d\n",

550 
ù¨am
[
IPARAM_M
], i∑øm[
IPARAM_N
], i∑øm[
IPARAM_K
]);

553 if(
vîbo£
 > 2)

555 if(
ù¨am
[
IPARAM_LDB
] && i∑øm[
IPARAM_LDC
])

556 
	`Ârötf
(
°dîr
, "#+++++ LDA , LDB , LDC : %d , %d , %d\n", 
ù¨am
[
IPARAM_LDA
], i∑øm[
IPARAM_LDB
], i∑øm[
IPARAM_LDC
]);

557 if(
ù¨am
[
IPARAM_LDB
])

558 
	`Ârötf
(
°dîr
, "#+++++ LDA , LDB : %d , %d\n", 
ù¨am
[
IPARAM_LDA
], i∑øm[
IPARAM_LDB
]);

560 
	`Ârötf
(
°dîr
, "#+++++ LDA : %d\n", 
ù¨am
[
IPARAM_LDA
]);

563 if(
vîbo£
)

565 if(
ù¨am
[
IPARAM_IB
] > 0)

566 
	`Ârötf
(
°dîr
, "#+++++ MB x NB , IB : %d x %d , %d\n",

567 
ù¨am
[
IPARAM_MB
], i∑øm[
IPARAM_NB
], i∑øm[
IPARAM_IB
]);

569 
	`Ârötf
(
°dîr
, "#+++++ MB x NB : %d x %d\n",

570 
ù¨am
[
IPARAM_MB
], i∑øm[
IPARAM_NB
]);

571 if(
ù¨am
[
IPARAM_KQ
] * i∑øm[
IPARAM_KP
] != 1)

572 
	`Ârötf
(
°dîr
, "#+++++ KP x KQ : %d x %d\n", 
ù¨am
[
IPARAM_KP
], i∑øm[
IPARAM_KQ
]);

573 if((
ù¨am
[
IPARAM_HNB
] !ù¨am[
IPARAM_NB
]Ë|| (ù¨am[
IPARAM_HMB
] !ù¨am[
IPARAM_MB
]))

574 
	`Ârötf
(
°dîr
, "#+++++ HMB x HNB : %d x %d\n", 
ù¨am
[
IPARAM_HMB
], i∑øm[
IPARAM_HNB
]);

576 
	}
}

581 
	$ù¨am_deÁu…
(* 
ù¨am
)

584 
	`mem£t
(
ù¨am
, 0, 
IPARAM_SIZEOF
 * ());

585 
ù¨am
[
IPARAM_NNODES
] = 1;

586 
ù¨am
[
IPARAM_ASYNC
] = 1;

587 
ù¨am
[
IPARAM_QR_DOMINO
] = -1;

588 
ù¨am
[
IPARAM_LOWLVL_TREE
] = 
DPLASMA_GREEDY_TREE
;

589 
ù¨am
[
IPARAM_HIGHLVL_TREE
] = -1;

590 
ù¨am
[
IPARAM_QR_TS_SZE
] = -1;

591 
ù¨am
[
IPARAM_QR_HLVL_SZE
] = -'P';

592 
	}
}

594 
	$ù¨am_deÁu…_ibnbmb
(* 
ù¨am
, 
ib
, 
nb
, 
mb
)

596 
ù¨am
[
IPARAM_IB
] = 
ib
 ? ib : -1;

597 
ù¨am
[
IPARAM_NB
] = -
nb
;

598 
ù¨am
[
IPARAM_MB
] = -
mb
;

599 
	}
}

602 
	$ù¨am_deÁu…_Á˘o
(* 
ù¨am
)

604 
	`ù¨am_deÁu…
(
ù¨am
);

605 
ù¨am
[
IPARAM_K
] = 1;

606 
ù¨am
[
IPARAM_LDA
] = -'m';

607 
ù¨am
[
IPARAM_LDB
] = 0;

608 
ù¨am
[
IPARAM_LDC
] = 0;

609 
	}
}

611 
	$ù¨am_deÁu…_sﬁve
(* 
ù¨am
)

613 
	`ù¨am_deÁu…
(
ù¨am
);

614 
ù¨am
[
IPARAM_K
] = 1;

615 
ù¨am
[
IPARAM_LDA
] = -'m';

616 
ù¨am
[
IPARAM_LDB
] = -'n';

617 
ù¨am
[
IPARAM_LDC
] = 0;

618 
ù¨am
[
IPARAM_M
] = -'n';

619 
	}
}

621 
	$ù¨am_deÁu…_gemm
(* 
ù¨am
)

623 
	`ù¨am_deÁu…
(
ù¨am
);

624 
ù¨am
[
IPARAM_K
] = 0;

626 
ù¨am
[
IPARAM_LDA
] = -'m';

627 
ù¨am
[
IPARAM_LDB
] = -'k';

628 
ù¨am
[
IPARAM_LDC
] = -'m';

629 
	}
}

631 #ifde‡
PARSEC_PROF_TRACE


632 * 
	g¨gvzîo
;

633 
	gcwd
[1024];

634 
	gunix_time°amp
;

637 
∑r£c_c⁄ãxt_t
* 
	$£tup_∑r£c
(
¨gc
, **
¨gv
, *
ù¨am
)

639 #ifde‡
PARSEC_PROF_TRACE


640 
¨gvzîo
 = 
¨gv
[0];

641 
unix_time°amp
 = 
	`time
(
NULL
);

642 
	`gëcwd
(
cwd
, (cwd));

644 
	`ªad_¨gumíts
(&
¨gc
, &
¨gv
, 
ù¨am
);

645 #i‡
	`deföed
(
PARSEC_HAVE_MPI
)

647 
ªque°ed
 = 
ù¨am
[
IPARAM_THREAD_MT
]? 
MPI_THREAD_MULTIPLE
: 
MPI_THREAD_SERIALIZED
;

648 
¥ovided
;

649 
	`MPI_Inô_thªad
(&
¨gc
, &
¨gv
, 
ªque°ed
, &
¥ovided
);

650 if–
ªque°ed
 > 
¥ovided
 ) {

651 
	`Ârötf
(
°dîr
, "#XXXXX U£∏ªque°ed %†buàthêim∂emíèti⁄Ñëu∫edáÜowîÅhªad\n", 
ªque°ed
==
MPI_THREAD_MULTIPLE
? "MPI_THREAD_MULTIPLE": "MPI_THREAD_SERIALIZED");

652 
	`exô
(2);

655 
	`MPI_Comm_size
(
MPI_COMM_WORLD
, &
ù¨am
[
IPARAM_NNODES
]);

656 
	`MPI_Comm_ønk
(
MPI_COMM_WORLD
, &
ù¨am
[
IPARAM_RANK
]);

657 #ñi‡
	`deföed
(
PARSEC_HAVE_LCI
)

658 
	`lc_öô
(1, &
ï
);

659 
lci_globÆ_ï
 = &
ï
;

660 
	`lc_gë_num_¥oc
(&
ù¨am
[
IPARAM_NNODES
]);

661 
	`lc_gë_¥oc_num
(&
ù¨am
[
IPARAM_RANK
]);

663 
ù¨am
[
IPARAM_NNODES
] = 1;

664 
ù¨am
[
IPARAM_RANK
] = 0;

666 
	`∑r£_¨gumíts
(
ù¨am
);

667 
vîbo£
 = 
ù¨am
[
IPARAM_VERBOSE
];

668 if(
ù¨am
[
IPARAM_RANK
] > 0 && 
vîbo£
 < 4) verbose = 0;

670 
	`TIME_START
();

673 
∑r£c_¨gc
, 
idx
;

674 ** 
∑r£c_¨gv
 = (**)
	`ˇŒoc
(
¨gc
, (*));

675 
∑r£c_¨gv
[0] = 
¨gv
[0];

676  
idx
 = 
∑r£c_¨gc
 = 1;

677 (
idx
 < 
¨gc
Ë&& (0 !
	`°rcmp
(
¨gv
[idx], "--")); idx++);

678 if–
idx
 !
¨gc
 ) {

679  
∑r£c_¨gc
 = 1, 
idx
++; idx < 
¨gc
;

680 
∑r£c_¨gv
[
∑r£c_¨gc
] = 
¨gv
[
idx
],Öarsec_argc++, idx++);

682 
∑r£c_c⁄ãxt_t
* 
˘x
 = 
	`∑r£c_öô
(
ù¨am
[
IPARAM_NCORES
],

683 &
∑r£c_¨gc
, &
∑r£c_¨gv
);

684 
	`‰ì
(
∑r£c_¨gv
);

685 if–
NULL
 =
˘x
 ) {

689 
	`exô
(-1);

694 if(
ù¨am
[
IPARAM_NCORES
] <= 0)

696 
p
, 
nb_tŸÆ_comp_thªads
 = 0;

697 
p
 = 0;Ö < 
˘x
->
nb_vp
;Ö++) {

698 
nb_tŸÆ_comp_thªads
 +
˘x
->
vútuÆ_¥o˚s£s
[
p
]->
nb_c‹es
;

700 
ù¨am
[
IPARAM_NCORES
] = 
nb_tŸÆ_comp_thªads
;

702 
	`¥öt_¨gumíts
(
ù¨am
);

704 if(
vîbo£
 > 2Ë
	`TIME_PRINT
(
ù¨am
[
IPARAM_RANK
], ("PaRSEC initialized\n"));

705  
˘x
;

706 
	}
}

708 
	$˛ónup_∑r£c
(
∑r£c_c⁄ãxt_t
* 
∑r£c
, *
ù¨am
)

710 
	`∑r£c_föi
(&
∑r£c
);

712 #i‡
	`deföed
(
PARSEC_HAVE_MPI
)

713 
	`MPI_FöÆize
();

714 #ñi‡
	`deföed
(
PARSEC_HAVE_LCI
)

715 
	`lc_föÆize
();

717 ()
ù¨am
;

718 
	}
}

	@common.h

7 #i‚de‡
_TESTSCOMMON_H


8 
	#_TESTSCOMMON_H


	)

11 
	~"∑r£c.h
"

14 
	~<°dlib.h
>

15 
	~<°dio.h
>

16 
	~<°rög.h
>

18 
	~<m©h.h
>

19 
	~<cbœs.h
>

20 
	~<œ∑cke.h
>

22 
	~"∑r£c/¥ofûög.h
"

23 
	~"∑r£c/∑r£c_öã∫Æ.h
"

24 
	~"∑r£c/utûs/debug.h
"

25 
	~"d∂asma.h
"

26 
	~"d∂asma/ty≥s.h
"

28 
	~"c‹es/c‹e_bœs.h
"

31 
	~"comm⁄_timög.h
"

32 
	~"Ê›s.h
"

35 *
PARSEC_SCHED_NAME
[];

36 
unix_time°amp
;

37 
cwd
[];

40 
	eù¨am_t
 {

41 
	mIPARAM_RANK
,

42 
	mIPARAM_NNODES
,

43 
	mIPARAM_NCORES
,

44 
	mIPARAM_THREAD_MT
,

45 
	mIPARAM_NGPUS
,

46 
	mIPARAM_P
,

47 
	mIPARAM_Q
,

48 
	mIPARAM_M
,

49 
	mIPARAM_N
,

50 
	mIPARAM_K
,

51 
	mIPARAM_LDA
,

52 
	mIPARAM_LDB
,

53 
	mIPARAM_LDC
,

54 
	mIPARAM_IB
,

55 
	mIPARAM_NB
,

56 
	mIPARAM_MB
,

57 
	mIPARAM_KQ
,

58 
	mIPARAM_KP
,

59 
	mIPARAM_HMB
,

60 
	mIPARAM_HNB
,

61 
	mIPARAM_CHECK
,

62 
	mIPARAM_CHECKINV
,

63 
	mIPARAM_ASYNC
,

64 
	mIPARAM_VERBOSE
,

65 
	mIPARAM_LOWLVL_TREE
,

66 
	mIPARAM_HIGHLVL_TREE
,

67 
	mIPARAM_QR_TS_SZE
,

68 
	mIPARAM_QR_HLVL_SZE
,

69 
	mIPARAM_RANDOM_SEED
,

70 
	mIPARAM_MATRIX_INIT
,

71 
	mIPARAM_QR_DOMINO
,

72 
	mIPARAM_QR_TSRR
,

73 
	mIPARAM_BUT_LEVEL
,

74 
	mIPARAM_SCHEDULER
,

75 
	mIPARAM_NRUNS
,

76 
	mIPARAM_SIZEOF


79 
	#PARSEC_SCHEDULER_DEFAULT
 0

	)

80 
	#PARSEC_SCHEDULER_LFQ
 1

	)

81 
	#PARSEC_SCHEDULER_LTQ
 2

	)

82 
	#PARSEC_SCHEDULER_AP
 3

	)

83 
	#PARSEC_SCHEDULER_LHQ
 4

	)

84 
	#PARSEC_SCHEDULER_GD
 5

	)

85 
	#PARSEC_SCHEDULER_PBQ
 6

	)

86 
	#PARSEC_SCHEDULER_IP
 7

	)

87 
	#PARSEC_SCHEDULER_RND
 8

	)

89 
ù¨am_deÁu…_Á˘o
(* 
ù¨am
);

90 
ù¨am_deÁu…_sﬁve
(* 
ù¨am
);

91 
ù¨am_deÁu…_gemm
(* 
ù¨am
);

92 
ù¨am_deÁu…_ibnbmb
(* 
ù¨am
, 
ib
, 
nb
, 
mb
);

94 
	#PASTE_CODE_IPARAM_LOCALS
(
ù¨am
) \

95 
ønk
 = 
ù¨am
[
IPARAM_RANK
]; \

96 
nodes
 = 
ù¨am
[
IPARAM_NNODES
]; \

97 
c‹es
 = 
ù¨am
[
IPARAM_NCORES
]; \

98 
gpus
 = 
ù¨am
[
IPARAM_NGPUS
]; \

99 
P
 = 
ù¨am
[
IPARAM_P
]; \

100 
Q
 = 
ù¨am
[
IPARAM_Q
]; \

101 
M
 = 
ù¨am
[
IPARAM_M
]; \

102 
N
 = 
ù¨am
[
IPARAM_N
]; \

103 
K
 = 
ù¨am
[
IPARAM_K
]; \

104 
NRHS
 = 
K
; \

105 
LDA
 = 
	`max
(
M
, 
ù¨am
[
IPARAM_LDA
]); \

106 
LDB
 = 
	`max
(
N
, 
ù¨am
[
IPARAM_LDB
]); \

107 
LDC
 = 
	`max
(
K
, 
ù¨am
[
IPARAM_LDC
]); \

108 
IB
 = 
ù¨am
[
IPARAM_IB
]; \

109 
MB
 = 
ù¨am
[
IPARAM_MB
]; \

110 
NB
 = 
ù¨am
[
IPARAM_NB
]; \

111 
KP
 = 
ù¨am
[
IPARAM_KP
]; \

112 
KQ
 = 
ù¨am
[
IPARAM_KQ
]; \

113 
HMB
 = 
ù¨am
[
IPARAM_HMB
]; \

114 
HNB
 = 
ù¨am
[
IPARAM_HNB
]; \

115 
ƒuns
 = 
ù¨am
[
IPARAM_NRUNS
]; \

116 
MT
 = (
M
%
MB
==0) ? (M/MB) : (M/MB+1); \

117 
NT
 = (
N
%
NB
==0) ? (N/NB) : (N/NB+1); \

118 
KT
 = (
K
%
MB
==0) ? (K/MB) : (K/MB+1); \

119 
check
 = 
ù¨am
[
IPARAM_CHECK
]; \

120 
check_öv
 = 
ù¨am
[
IPARAM_CHECKINV
]; \

121 
loud
 = 
ù¨am
[
IPARAM_VERBOSE
]; \

122 
scheduÀr
 = 
ù¨am
[
IPARAM_SCHEDULER
]; \

123 
øndom_£ed
 = 
ù¨am
[
IPARAM_RANDOM_SEED
]; \

124 
m©rix_öô
 = 
ù¨am
[
IPARAM_MATRIX_INIT
]; \

125 
buâîÊy_Àvñ
 = 
ù¨am
[
IPARAM_BUT_LEVEL
]; \

126 
async
 = 
ù¨am
[
IPARAM_ASYNC
]; \

127 ()
ønk
;()
nodes
;()
c‹es
;()
gpus
;()
P
;()
Q
;()
M
;()
N
;()
K
;()
NRHS
; \

128 ()
LDA
;()
LDB
;()
LDC
;()
IB
;()
MB
;()
NB
;()
MT
;()
NT
;()
KT
; \

129 ()
KP
;()
KQ
;()
HMB
;()
HNB
;()
check
;()
loud
;()
async
; \

130 ()
scheduÀr
;()
buâîÊy_Àvñ
;()
check_öv
;()
øndom_£ed
;()
m©rix_öô
;()
ƒuns
;

	)

133 
	tDagDoubÀ_t
;

134 
	#PASTE_CODE_FLOPS
–
FORMULA
, 
PARAMS
 ) \

135 
gÊ›s
 = -1.0, 
Ê›s
 = 
FORMULA
 
PARAMS
;

	)

137 #i‡
deföed
(
PRECISION_z
Ë|| deföed(
PRECISION_c
)

138 
	#PASTE_CODE_FLOPS_COUNT
(
FADD
,
FMUL
,
PARAMS
) \

139 
gÊ›s
 = -1.0, 
Ê›s
 = (2. * 
FADD
 
PARAMS
 + 6. * 
FMUL
 PARAMS);

	)

141 
	#PASTE_CODE_FLOPS_COUNT
(
FADD
,
FMUL
,
PARAMS
) \

142 
gÊ›s
 = -1.0, 
Ê›s
 = (
FADD
 
PARAMS
 + 
FMUL
 PARAMS);

	)

149 #i‡
deföed
(
PARSEC_HAVE_MPI
)

150 
MPI_D©©y≥
 
SYNCHRO
;

153 c⁄° 
side
[2];

154 c⁄° 
u∂o
[2];

155 c⁄° 
düg
[2];

156 c⁄° 
å™s
[3];

157 c⁄° 
n‹ms
[4];

158 c⁄° *
side°r
[2];

159 c⁄° *
u∂o°r
[2];

160 c⁄° *
düg°r
[2];

161 c⁄° *
å™s°r
[3];

162 c⁄° *
n‹ms°r
[4];

164 
¥öt_ußge
();

166 
∑r£c_c⁄ãxt_t
 *
£tup_∑r£c
(
¨gc
, * 
¨gv
[], *
ù¨am
);

167 
˛ónup_∑r£c
(
∑r£c_c⁄ãxt_t
* 
∑r£c
, *
ù¨am
);

173 #unde‡
max


174 #unde‡
mö


175 
ölöe
 
	$max
(
a
, 
b
Ë{ á > b ?á : b; 
	}
}

176 
ölöe
 
	$mö
(
a
, 
b
Ë{ á < b ?á : b; 
	}
}

180 
	#PASTE_CODE_ALLOCATE_MATRIX
(
DC
, 
COND
, 
TYPE
, 
INIT_PARAMS
) \

181 
TYPE
##
_t
 
DC
; \

182 if(
COND
) { \

183 
TYPE
##
_öô
 
INIT_PARAMS
; \

184 
DC
.
m©
 = 
	`∑r£c_d©a_Æloˇã
((
size_t
)DC.
su≥r
.
nb_loˇl_tûes
 * \

185 (
size_t
)
DC
.
su≥r
.
bsiz
 * \

186 (
size_t
)
	`∑r£c_d©adi°_gësizeo·y≥
(
DC
.
su≥r
.
mty≥
)); \

187 
	`∑r£c_d©a_cﬁÀ˘i⁄_£t_key
((
∑r£c_d©a_cﬁÀ˘i⁄_t
*)&
DC
, #DC); \

188 }

	)

190 
	#PASTE_CODE_ENQUEUE_KERNEL
(
PARSEC
, 
KERNEL
, 
PARAMS
) \

191 
	`SYNC_TIME_START
(); \

192 
∑r£c_èskpoﬁ_t
* 
PARSEC_
##
KERNEL
 = 
d∂asma_
##KERNEL##
_New
 
PARAMS
; \

193 
	`PARSEC_CHECK_ERROR
(
	`∑r£c_c⁄ãxt_add_èskpoﬁ
(
PARSEC
, 
PARSEC_
##
KERNEL
), "parsec_context_add_taskpool"); \

194 if–
loud
 > 2 ) 
	`SYNC_TIME_PRINT
(
ønk
, ( #KERNEL "\tDAG cª©ed\n"));

	)

196 
	#PASTE_PROF_INFO
\

197 
	`PROFILING_SAVE_dINFO
("TIME_ELAPSED", 
time_ñ≠£d
); \

198 
	`PROFILING_SAVE_dINFO
("SYNC_TIME_ELAPSED", 
sync_time_ñ≠£d
); \

199 
	`PROFILING_SAVE_dINFO
("GFLOPS", 
gÊ›s
); \

200 
	`PROFILING_SAVE_iINFO
("PARAM_RANK", 
ù¨am
[
IPARAM_RANK
]); \

201 
	`PROFILING_SAVE_iINFO
("PARAM_NNODES", 
ù¨am
[
IPARAM_NNODES
]); \

202 
	`PROFILING_SAVE_iINFO
("PARAM_NCORES", 
ù¨am
[
IPARAM_NCORES
]); \

203 
	`PROFILING_SAVE_iINFO
("PARAM_THREAD_MT", 
ù¨am
[
IPARAM_THREAD_MT
]); \

204 
	`PROFILING_SAVE_iINFO
("PARAM_NGPUS", 
ù¨am
[
IPARAM_NGPUS
]); \

205 
	`PROFILING_SAVE_iINFO
("PARAM_P", 
ù¨am
[
IPARAM_P
]); \

206 
	`PROFILING_SAVE_iINFO
("PARAM_Q", 
ù¨am
[
IPARAM_Q
]); \

207 
	`PROFILING_SAVE_iINFO
("PARAM_M", 
ù¨am
[
IPARAM_M
]); \

208 
	`PROFILING_SAVE_iINFO
("PARAM_N", 
ù¨am
[
IPARAM_N
]); \

209 
	`PROFILING_SAVE_iINFO
("PARAM_K", 
ù¨am
[
IPARAM_K
]); \

210 
	`PROFILING_SAVE_iINFO
("PARAM_LDA", 
ù¨am
[
IPARAM_LDA
]); \

211 
	`PROFILING_SAVE_iINFO
("PARAM_LDB", 
ù¨am
[
IPARAM_LDB
]); \

212 
	`PROFILING_SAVE_iINFO
("PARAM_LDC", 
ù¨am
[
IPARAM_LDC
]); \

213 
	`PROFILING_SAVE_iINFO
("PARAM_IB", 
ù¨am
[
IPARAM_IB
]); \

214 
	`PROFILING_SAVE_iINFO
("PARAM_NB", 
ù¨am
[
IPARAM_NB
]); \

215 
	`PROFILING_SAVE_iINFO
("PARAM_MB", 
ù¨am
[
IPARAM_MB
]); \

216 
	`PROFILING_SAVE_iINFO
("PARAM_KP", 
ù¨am
[
IPARAM_KQ
]); \

217 
	`PROFILING_SAVE_iINFO
("PARAM_KQ", 
ù¨am
[
IPARAM_KP
]); \

218 
	`PROFILING_SAVE_iINFO
("PARAM_HNB", 
ù¨am
[
IPARAM_HNB
]); \

219 
	`PROFILING_SAVE_iINFO
("PARAM_CHECK", 
ù¨am
[
IPARAM_CHECK
]); \

220 
	`PROFILING_SAVE_iINFO
("PARAM_CHECKINV", 
ù¨am
[
IPARAM_CHECKINV
]); \

221 
	`PROFILING_SAVE_iINFO
("PARAM_VERBOSE", 
ù¨am
[
IPARAM_VERBOSE
]); \

222 
	`PROFILING_SAVE_iINFO
("PARAM_LOWLVL_TREE", 
ù¨am
[
IPARAM_LOWLVL_TREE
]); \

223 
	`PROFILING_SAVE_iINFO
("PARAM_HIGHLVL_TREE", 
ù¨am
[
IPARAM_HIGHLVL_TREE
]); \

224 
	`PROFILING_SAVE_iINFO
("PARAM_QR_TS_SZE", 
ù¨am
[
IPARAM_QR_TS_SZE
]); \

225 
	`PROFILING_SAVE_iINFO
("PARAM_QR_HLVL_SZE", 
ù¨am
[
IPARAM_QR_HLVL_SZE
]); \

226 
	`PROFILING_SAVE_iINFO
("PARAM_QR_DOMINO", 
ù¨am
[
IPARAM_QR_DOMINO
]); \

227 
	`PROFILING_SAVE_iINFO
("PARAM_QR_TSRR", 
ù¨am
[
IPARAM_QR_TSRR
]); \

228 
	`PROFILING_SAVE_iINFO
("PARAM_BUT_LEVEL", 
ù¨am
[
IPARAM_BUT_LEVEL
]); \

229 
	`PROFILING_SAVE_iINFO
("PARAM_SCHEDULER", 
ù¨am
[
IPARAM_SCHEDULER
]);

	)

231 
	#PASTE_CODE_PROGRESS_KERNEL
(
PARSEC
, 
KERNEL
) \

232 
	`SYNC_TIME_START
(); \

233 
	`PARSEC_CHECK_ERROR
(
	`∑r£c_c⁄ãxt_°¨t
(
PARSEC
), "parsec_context_start"); \

234 
	`TIME_START
(); \

235 
	`PARSEC_CHECK_ERROR
(
	`∑r£c_c⁄ãxt_waô
(
PARSEC
), "parsec_context_wait"); \

236 
	`SYNC_TIME_PRINT
(
ønk
, (#KERNEL "\tPxQ= %3d %-3d NB= %4d N= %7d : %14f gflops\n", \

237 
P
, 
Q
, 
NB
, 
N
, \

238 
gÊ›s
=(
Ê›s
/1e9)/
sync_time_ñ≠£d
)); \

239 
PASTE_PROF_INFO
; \

240 if(
loud
 >5 && 
ønk
 == 0) { \

241 
	`¥ötf
("<DartMeasurementÇame=\"performance\"Åype=\"numeric/double\"\n" \

245 
gÊ›s
); \

247 ()
gÊ›s
;

	)

250 
	#PASTE_CODE_ENQUEUE_PROGRESS_DESTRUCT_KERNEL
(
PARSEC
, 
KERNEL
, 
PARAMS
, 
DESTRUCT
)\

251 
	`SYNC_TIME_START
(); \

252 
∑r£c_èskpoﬁ_t
* 
PARSEC_
##
KERNEL
 = 
d∂asma_
##KERNEL##
_New
 
PARAMS
; \

253 
	`PARSEC_CHECK_ERROR
(
	`∑r£c_c⁄ãxt_add_èskpoﬁ
(
PARSEC
, 
PARSEC_
##
KERNEL
), "parsec_context_add_taskpool");\

254 
	`SYNC_TIME_STOP
(); \

255 
°ime_A
 = 
sync_time_ñ≠£d
; \

256 
	`SYNC_TIME_START
(); \

257 
	`PARSEC_CHECK_ERROR
(
	`∑r£c_c⁄ãxt_°¨t
(
PARSEC
), "parsec_context_start");\

258 
	`TIME_START
(); \

259 
	`PARSEC_CHECK_ERROR
(
	`∑r£c_c⁄ãxt_waô
(
PARSEC
), "parsec_context_wait");\

260 
	`SYNC_TIME_STOP
(); \

261 
°ime_B
 = 
sync_time_ñ≠£d
; \

262 
	`SYNC_TIME_START
(); \

263 
DESTRUCT
; \

264 
	`SYNC_TIME_STOP
(); \

265 
°ime_C
 = 
sync_time_ñ≠£d
; \

266 if(
ønk
==0){ \

267 
	`¥ötf
("[****] TIME(s) %12.5f : " #KERNEL "\tPxQ= %3d %-3d NB= %4d N= %7d : %14f gflops"\

270 
°ime_B
, 
P
, 
Q
, 
NB
, 
N
, \

271 
gÊ›s
=(
Ê›s
/1e9)/
°ime_B
, \

272 (
°ime_A
+
°ime_B
+
°ime_C
), \

273 (
Ê›s
/1e9)/(
°ime_A
+
°ime_B
+
°ime_C
), \

274 
°ime_A
,
°ime_C
); \

276 
PASTE_PROF_INFO
; \

277 if(
loud
 >5 && 
ønk
 == 0) { \

278 
	`¥ötf
("<DartMeasurementÇame=\"performance\"Åype=\"numeric/double\"\n" \

282 
gÊ›s
); \

284 ()
gÊ›s
;

	)

	@common_timing.h

1 #i‚de‡
TIMING_H


2 
	#TIMING_H


	)

4 
	~"∑r£c/ru¡ime.h
"

5 
	~<°dio.h
>

6 
	~<sys/time.h
>

8 
time_ñ≠£d
;

9 
sync_time_ñ≠£d
;

11 #i‡
deföed
–
PARSEC_HAVE_MPI
)

12 
	#gë_cur_time
(Ë
	`MPI_Wtime
()

	)

14 
ölöe
 
	$gë_cur_time
()

16 
timevÆ
 
tv
;

17 
t
;

19 
	`gëtimeofday
(&
tv
,
NULL
);

20 
t
 = 
tv
.
tv_£c
 +Åv.
tv_u£c
 / 1e6;

21  
t
;

22 
	}
}

25 #i‡
deföed
(
PARSEC_PROF_TRACE
)

26 
	#PARSEC_PROFILING_START
(Ë
	`∑r£c_¥ofûög_°¨t
()

	)

28 
	#PARSEC_PROFILING_START
()

	)

31 
	#TIME_START
(Ëdÿ{ 
time_ñ≠£d
 = 
	`gë_cur_time
(); } 0)

	)

32 
	#TIME_STOP
(Ëdÿ{ 
time_ñ≠£d
 = 
	`gë_cur_time
(Ë-Åime_ñ≠£d; } 0)

	)

33 
	#TIME_PRINT
(
ønk
, 
¥öt
) do { \

34 
	`TIME_STOP
(); \

35 
	`¥ötf
("[%4d] TIME(sË%12.5‡: ", 
ønk
, 
time_ñ≠£d
); \

36 
¥ötf
 
¥öt
; \

37 } 0)

	)

39 #i‡
deföed
(
PARSEC_HAVE_MPI
)

40 
	#SYNC_TIME_START
() do { \

41 
	`MPI_B¨rõr
(
MPI_COMM_WORLD
); \

42 
	`PARSEC_PROFILING_START
(); \

43 
sync_time_ñ≠£d
 = 
	`gë_cur_time
(); \

44 } 0)

	)

45 
	#SYNC_TIME_STOP
() do { \

46 
	`MPI_B¨rõr
(
MPI_COMM_WORLD
); \

47 
sync_time_ñ≠£d
 = 
	`gë_cur_time
() - sync_time_elapsed; \

48 } 0)

	)

49 
	#SYNC_TIME_PRINT
(
ønk
, 
¥öt
) do { \

50 
	`SYNC_TIME_STOP
(); \

51 if(0 =
ønk
) { \

52 
	`¥ötf
("[****] TIME(sË%12.5‡: ", 
sync_time_ñ≠£d
); \

53 
¥ötf
 
¥öt
; \

55 } 0)

	)

58 
	#exô
(
ªt
Ë
	`MPI_Ab‹t
(
MPI_COMM_WORLD
,Ñë)

	)

60 #ñi‡
deföed
(
PARSEC_HAVE_LCI
)

61 
_N‹ëu∫
 
lci_ab‹t
(
exô_code
);

62 
	#SYNC_TIME_START
() do { \

63 
	`lc_b¨rõr
(*
lci_globÆ_ï
); \

64 
	`PARSEC_PROFILING_START
(); \

65 
sync_time_ñ≠£d
 = 
	`gë_cur_time
(); \

66 } 0)

	)

67 
	#SYNC_TIME_STOP
() do { \

68 
	`lc_b¨rõr
(*
lci_globÆ_ï
); \

69 
sync_time_ñ≠£d
 = 
	`gë_cur_time
() - sync_time_elapsed; \

70 } 0)

	)

71 
	#SYNC_TIME_PRINT
(
ønk
, 
¥öt
) do { \

72 
	`SYNC_TIME_STOP
(); \

73 if(0 =
ønk
) { \

74 
	`¥ötf
("[****] TIME(sË%12.5‡: ", 
sync_time_ñ≠£d
); \

75 
¥ötf
 
¥öt
; \

77 } 0)

	)

80 
	#exô
(
ªt
Ë
	`lci_ab‹t
‘ë)

	)

83 
	#SYNC_TIME_START
(Ëdÿ{ 
sync_time_ñ≠£d
 = 
	`gë_cur_time
(); } 0)

	)

84 
	#SYNC_TIME_STOP
(Ëdÿ{ 
sync_time_ñ≠£d
 = 
	`gë_cur_time
(Ë- sync_time_ñ≠£d; } 0)

	)

85 
	#SYNC_TIME_PRINT
(
ønk
, 
¥öt
) do { \

86 
	`SYNC_TIME_STOP
(); \

87 if(0 =
ønk
) { \

88 
	`¥ötf
("[****] TIME(sË%12.5‡: ", 
sync_time_ñ≠£d
); \

89 
¥ötf
 
¥öt
; \

91 } 0)

	)

	@testing_zgeadd.c

10 
	~"comm⁄.h
"

11 
	~"Ê›s.h
"

12 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

13 
	~"c‹es/c‹e_bœs.h
"

15 
check_å_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

16 
d∂asma_íum_t
 
u∂o
, d∂asma_íum_à
å™s
,

17 
d∂asma_com∂ex64_t
 
Æpha
,

18 
Am
, 
An
, 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

19 
d∂asma_com∂ex64_t
 
bëa
,

20 
M
, 
N
, 
∑r£c_tûed_m©rix_dc_t
 *
dcC
,

21 
∑r£c_tûed_m©rix_dc_t
 *
dcC2
 );

23 
check_ge_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

24 
d∂asma_íum_t
 
å™s
,

25 
d∂asma_com∂ex64_t
 
Æpha
,

26 
Am
, 
An
, 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

27 
d∂asma_com∂ex64_t
 
bëa
,

28 
M
, 
N
, 
∑r£c_tûed_m©rix_dc_t
 *
dcC
,

29 
∑r£c_tûed_m©rix_dc_t
 *
dcC2
 );

31 
	$maö
(
¨gc
, ** 
¨gv
)

33 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

34 
ù¨am
[
IPARAM_SIZEOF
];

35 
öfo_sﬁuti⁄
 = 0;

36 
A£ed
 = 3872;

37 
C£ed
 = 2873;

38 
tA
, 
u
, 
Am
, 
An
;

40 
d∂asma_com∂ex64_t
 
Æpha
 = 0.43;

41 
d∂asma_com∂ex64_t
 
bëa
 = 0.78;

43 #i‡
	`deföed
(
PRECISION_z
Ë|| deföed(
PRECISION_c
)

44 
Æpha
 -
I
 * 0.32;

45 
bëa
 +
I
 * 0.21;

49 
	`ù¨am_deÁu…_gemm
(
ù¨am
);

50 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 0, 200, 200);

51 
ù¨am
[
IPARAM_NGPUS
] = 
DPLASMA_ERR_NOT_SUPPORTED
;

54 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

55 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

57 
LDA
 = 
	`max
(LDA, max(
M
, 
K
));

58 
LDB
 = 
	`max
(LDB, max(
K
, 
N
));

59 
LDC
 = 
	`max
(LDC, 
M
);

61 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC
, 1,

62 
two_dim_block_cy˛ic
, (&
dcC
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

63 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

64 
M
, 
N
, 
KP
, 
KQ
, 
P
));

67 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC0
, 
check
,

68 
two_dim_block_cy˛ic
, (&
dcC0
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

69 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

70 
M
, 
N
, 
KP
, 
KQ
, 
P
));

72 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC0
, 
C£ed
);

74 #i‡
	`deföed
(
PRECISION_z
Ë|| deföed(
PRECISION_c
)

75 
tA
=0;ÅA<3;ÅA++) {

77 
tA
=0;ÅA<2;ÅA++) {

79 i‡–
å™s
[
tA
] =
d∂asmaNoTøns
 ) {

80 
Am
 = 
M
; 
An
 = 
N
;

82 
Am
 = 
N
; 
An
 = 
M
;

85 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

86 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

87 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, LDA, 0, 0,

88 
Am
, 
An
, 
KP
, 
KQ
, 
P
));

90 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
A£ed
);

92 
u
=0; u<2; u++) {

93 i‡–
ønk
 == 0 ) {

94 
	`¥ötf
("***************************************************\n");

95 
	`¥ötf
(" ----- TESTING ZTRADD (%s, %s) -------- \n",

96 
u∂o°r
[
u
], 
å™s°r
[
tA
]);

100 if(
loud
Ë
	`¥ötf
("Generate matrices ... ");

101 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

102 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC0
, (∑r£c_tûed_m©rix_dc_à*)&
dcC
 );

103 if(
loud
Ë
	`¥ötf
("Done\n");

106 if(
loud
Ë
	`¥ötf
("Compute ... ... ");

107 
	`d∂asma_zåadd
(
∑r£c
, 
u∂o
[
u
], 
å™s
[
tA
],

108 (
d∂asma_com∂ex64_t
)
Æpha
,

109 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

110 (
d∂asma_com∂ex64_t
)
bëa
,

111 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

112 if(
loud
Ë
	`¥ötf
("Done\n");

115 
öfo_sﬁuti⁄
 = 
	`check_å_sﬁuti⁄
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

116 
u∂o
[
u
], 
å™s
[
tA
],

117 
Æpha
, 
Am
, 
An
,

118 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

119 
bëa
, 
M
, 
N
,

120 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC0
,

121 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
 );

122 i‡–
ønk
 == 0 ) {

123 i‡(
öfo_sﬁuti⁄
 == 0) {

124 
	`¥ötf
(" ---- TESTING ZTRADD (%s, %s) ...... PASSED !\n",

125 
u∂o°r
[
u
], 
å™s°r
[
tA
]);

128 
	`¥ötf
(" ---- TESTING ZTRADD (%s, %s) ... FAILED !\n",

129 
u∂o°r
[
u
], 
å™s°r
[
tA
]);

131 
	`¥ötf
("***************************************************\n");

135 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

136 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

139 #i‡
	`deföed
(
PRECISION_z
Ë|| deföed(
PRECISION_c
)

140 
tA
=0;ÅA<3;ÅA++) {

142 
tA
=0;ÅA<2;ÅA++) {

144 i‡–
å™s
[
tA
] =
d∂asmaNoTøns
 ) {

145 
Am
 = 
M
; 
An
 = 
N
;

147 
Am
 = 
N
; 
An
 = 
M
;

150 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

151 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

152 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, LDA, 0, 0,

153 
Am
, 
An
, 
KP
, 
KQ
, 
P
));

155 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
A£ed
);

157 i‡–
ønk
 == 0 ) {

158 
	`¥ötf
("***************************************************\n");

159 
	`¥ötf
(" ----- TESTING ZGEADD (%s) -------- \n",

160 
å™s°r
[
tA
]);

164 if(
loud
Ë
	`¥ötf
("Generate matrices ... ");

165 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

166 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC0
, (∑r£c_tûed_m©rix_dc_à*)&
dcC
 );

167 if(
loud
Ë
	`¥ötf
("Done\n");

170 if(
loud
Ë
	`¥ötf
("Compute ... ... ");

171 
	`d∂asma_zgódd
(
∑r£c
, 
å™s
[
tA
],

172 (
d∂asma_com∂ex64_t
)
Æpha
,

173 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

174 (
d∂asma_com∂ex64_t
)
bëa
,

175 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

176 if(
loud
Ë
	`¥ötf
("Done\n");

179 
öfo_sﬁuti⁄
 = 
	`check_ge_sﬁuti⁄
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

180 
å™s
[
tA
],

181 
Æpha
, 
Am
, 
An
,

182 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

183 
bëa
, 
M
, 
N
,

184 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC0
,

185 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
 );

186 i‡–
ønk
 == 0 ) {

187 i‡(
öfo_sﬁuti⁄
 == 0) {

188 
	`¥ötf
(" ---- TESTING ZGEADD (%s) ...... PASSED !\n",

189 
å™s°r
[
tA
]);

192 
	`¥ötf
(" ---- TESTING ZGEADD (%s) ... FAILED !\n",

193 
å™s°r
[
tA
]);

195 
	`¥ötf
("***************************************************\n");

198 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

199 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

202 
	`∑r£c_d©a_‰ì
(
dcC
.
m©
);

203 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcC
);

204 
	`∑r£c_d©a_‰ì
(
dcC0
.
m©
);

205 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcC0
);

207 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

209  
öfo_sﬁuti⁄
;

210 
	}
}

216 
	$check_å_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

217 
d∂asma_íum_t
 
u∂o
, d∂asma_íum_à
å™s
,

218 
d∂asma_com∂ex64_t
 
Æpha
,

219 
Am
, 
An
, 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

220 
d∂asma_com∂ex64_t
 
bëa
,

221 
M
, 
N
, 
∑r£c_tûed_m©rix_dc_t
 *
dcC
,

222 
∑r£c_tûed_m©rix_dc_t
 *
dcC2
 )

224 
öfo_sﬁuti⁄
 = 1;

225 
An‹m
, 
Cöôn‹m
, 
Cd∂asm™‹m
, 
Rn‹m
;

226 
ïs
, 
ªsu…
;

227 
d∂asma_com∂ex64_t
 
mz⁄e
 = (dplasma_complex64_t)-1.;

228 
MB
 = 
dcC2
->
mb
;

229 
NB
 = 
dcC2
->
nb
;

230 
LDA
 = 
Am
;

231 
LDC
 = 
M
;

232 
ønk
 = 
dcC2
->
su≥r
.
myønk
;

234 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

236 i‡–((
å™s
 =
d∂asmaNoTøns
Ë&& (
u∂o
 =
d∂asmaLowî
)) ||

237 ((
å™s
 !
d∂asmaNoTøns
Ë&& (
u∂o
 =
d∂asmaUµî
)) )

239 
An‹m
 = 
	`d∂asma_zœ¡r
–
∑r£c
, 
d∂asmaFrobíiusN‹m
, 
d∂asmaLowî
,

240 
d∂asmaN⁄Unô
, 
dcA
 );

244 
An‹m
 = 
	`d∂asma_zœ¡r
–
∑r£c
, 
d∂asmaFrobíiusN‹m
, 
d∂asmaUµî
,

245 
d∂asmaN⁄Unô
, 
dcA
 );

247 
Cöôn‹m
 = 
	`d∂asma_zœ¡r
–
∑r£c
, 
d∂asmaFrobíiusN‹m
, 
u∂o
, 
d∂asmaN⁄Unô
, 
dcC
 );

248 
Cd∂asm™‹m
 = 
	`d∂asma_zœ¡r
–
∑r£c
, 
d∂asmaFrobíiusN‹m
, 
u∂o
, 
d∂asmaN⁄Unô
, 
dcC2
 );

250 
	`PASTE_CODE_ALLOCATE_MATRIX
(
loˇlA
, 1,

251 
two_dim_block_cy˛ic
, (&
loˇlA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_L≠ack
,

252 1, 
ønk
, 
MB
, 
NB
, 
LDA
, 
An
, 0, 0,

253 
Am
, 
An
, 1, 1, 1));

254 
	`PASTE_CODE_ALLOCATE_MATRIX
(
loˇlC
, 1,

255 
two_dim_block_cy˛ic
, (&
loˇlC
, 
m©rix_Com∂exDoubÀ
, 
m©rix_L≠ack
,

256 1, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

257 
M
, 
N
, 1, 1, 1));

258 
	`PASTE_CODE_ALLOCATE_MATRIX
(
loˇlC2
, 1,

259 
two_dim_block_cy˛ic
, (&
loˇlC2
, 
m©rix_Com∂exDoubÀ
, 
m©rix_L≠ack
,

260 1, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

261 
M
, 
N
, 1, 1, 1));

263 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
, 
dcA
, (
∑r£c_tûed_m©rix_dc_t
 *)&
loˇlA
 );

264 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
, 
dcC
, (
∑r£c_tûed_m©rix_dc_t
 *)&
loˇlC
 );

265 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
, 
dcC2
, (
∑r£c_tûed_m©rix_dc_t
 *)&
loˇlC2
 );

267 i‡–
ønk
 == 0 ) {

268 
d∂asma_com∂ex64_t
 *
A
 = 
loˇlA
.
m©
;

269 
d∂asma_com∂ex64_t
 *
C
 = 
loˇlC
.
m©
;

270 
d∂asma_com∂ex64_t
 *
C2
 = 
loˇlC2
.
m©
;

272 
	`CORE_zåadd
–
u∂o
, 
å™s
, 
M
, 
N
, 
Æpha
, 
A
, 
LDA
, 
bëa
, 
C
, 
LDC
 );

273 
	`cbœs_zaxpy
–
LDC
 * 
N
, 
	`CBLAS_SADDR
(
mz⁄e
), 
C
, 1, 
C2
, 1);

276 
Rn‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaMaxN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
loˇlC2
 );

278 
ªsu…
 = 
Rn‹m
 / (
Cöôn‹m
 * 
ïs
);

280 i‡–
ønk
 == 0 ) {

281 i‡–
loud
 > 2 ) {

282 
	`¥ötf
(" ||A||_inf = %e, ||C||_inf = %e\n"

284 
An‹m
, 
Cöôn‹m
, 
Cd∂asm™‹m
, 
Rn‹m
, 
ªsu…
);

287 i‡–
	`isöf
(
Cd∂asm™‹m
Ë|| 
	`i¢™
(
ªsu…
) || isinf(result) || (result > 10.0) ) {

288 
öfo_sﬁuti⁄
 = 1;

291 
öfo_sﬁuti⁄
 = 0;

295 #i‡
	`deföed
(
PARSEC_HAVE_MPI
)

296 
	`MPI_Bˇ°
(&
öfo_sﬁuti⁄
, 1, 
MPI_INT
, 0, 
MPI_COMM_WORLD
);

297 #ñi‡
	`deföed
(
PARSEC_HAVE_LCI
)

298 
	`lc_bˇ°
(&
öfo_sﬁuti⁄
, (), 0, *
lci_globÆ_ï
);

301 
	`∑r£c_d©a_‰ì
(
loˇlA
.
m©
);

302 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
loˇlA
);

303 
	`∑r£c_d©a_‰ì
(
loˇlC
.
m©
);

304 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
loˇlC
);

305 
	`∑r£c_d©a_‰ì
(
loˇlC2
.
m©
);

306 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
loˇlC2
);

308  
öfo_sﬁuti⁄
;

309 
	}
}

314 
	$check_ge_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

315 
d∂asma_íum_t
 
å™s
,

316 
d∂asma_com∂ex64_t
 
Æpha
,

317 
Am
, 
An
, 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

318 
d∂asma_com∂ex64_t
 
bëa
,

319 
M
, 
N
, 
∑r£c_tûed_m©rix_dc_t
 *
dcC
,

320 
∑r£c_tûed_m©rix_dc_t
 *
dcC2
 )

322 
öfo_sﬁuti⁄
 = 1;

323 
An‹m
, 
Cöôn‹m
, 
Cd∂asm™‹m
, 
Rn‹m
;

324 
ïs
, 
ªsu…
;

325 
d∂asma_com∂ex64_t
 
mz⁄e
 = (dplasma_complex64_t)-1.;

326 
MB
 = 
dcC2
->
mb
;

327 
NB
 = 
dcC2
->
nb
;

328 
LDA
 = 
Am
;

329 
LDC
 = 
M
;

330 
ønk
 = 
dcC2
->
su≥r
.
myønk
;

332 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

334 
An‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaFrobíiusN‹m
, 
dcA
 );

335 
Cöôn‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaFrobíiusN‹m
, 
dcC
 );

336 
Cd∂asm™‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaFrobíiusN‹m
, 
dcC2
 );

338 
	`PASTE_CODE_ALLOCATE_MATRIX
(
loˇlA
, 1,

339 
two_dim_block_cy˛ic
, (&
loˇlA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_L≠ack
,

340 1, 
ønk
, 
MB
, 
NB
, 
LDA
, 
An
, 0, 0,

341 
Am
, 
An
, 1, 1, 1));

342 
	`PASTE_CODE_ALLOCATE_MATRIX
(
loˇlC
, 1,

343 
two_dim_block_cy˛ic
, (&
loˇlC
, 
m©rix_Com∂exDoubÀ
, 
m©rix_L≠ack
,

344 1, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

345 
M
, 
N
, 1, 1, 1));

346 
	`PASTE_CODE_ALLOCATE_MATRIX
(
loˇlC2
, 1,

347 
two_dim_block_cy˛ic
, (&
loˇlC2
, 
m©rix_Com∂exDoubÀ
, 
m©rix_L≠ack
,

348 1, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

349 
M
, 
N
, 1, 1, 1));

351 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
, 
dcA
, (
∑r£c_tûed_m©rix_dc_t
 *)&
loˇlA
 );

352 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
, 
dcC
, (
∑r£c_tûed_m©rix_dc_t
 *)&
loˇlC
 );

353 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
, 
dcC2
, (
∑r£c_tûed_m©rix_dc_t
 *)&
loˇlC2
 );

355 i‡–
ønk
 == 0 ) {

356 
d∂asma_com∂ex64_t
 *
A
 = 
loˇlA
.
m©
;

357 
d∂asma_com∂ex64_t
 *
C
 = 
loˇlC
.
m©
;

358 
d∂asma_com∂ex64_t
 *
C2
 = 
loˇlC2
.
m©
;

360 
	`CORE_zgódd
–
å™s
, 
M
, 
N
, 
Æpha
, 
A
, 
LDA
, 
bëa
, 
C
, 
LDC
 );

361 
	`cbœs_zaxpy
–
LDC
 * 
N
, 
	`CBLAS_SADDR
(
mz⁄e
), 
C
, 1, 
C2
, 1);

364 
Rn‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaMaxN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
loˇlC2
 );

366 
ªsu…
 = 
Rn‹m
 / (
Cöôn‹m
 * 
ïs
);

368 i‡–
ønk
 == 0 ) {

369 i‡–
loud
 > 2 ) {

370 
	`¥ötf
(" ||A||_inf = %e, ||C||_inf = %e\n"

372 
An‹m
, 
Cöôn‹m
, 
Cd∂asm™‹m
, 
Rn‹m
, 
ªsu…
);

375 i‡–
	`isöf
(
Cd∂asm™‹m
Ë|| 
	`i¢™
(
ªsu…
) || isinf(result) || (result > 10.0) ) {

376 
öfo_sﬁuti⁄
 = 1;

379 
öfo_sﬁuti⁄
 = 0;

383 #i‡
	`deföed
(
PARSEC_HAVE_MPI
)

384 
	`MPI_Bˇ°
(&
öfo_sﬁuti⁄
, 1, 
MPI_INT
, 0, 
MPI_COMM_WORLD
);

385 #ñi‡
	`deföed
(
PARSEC_HAVE_LCI
)

386 
	`lc_bˇ°
(&
öfo_sﬁuti⁄
, (), 0, *
lci_globÆ_ï
);

389 
	`∑r£c_d©a_‰ì
(
loˇlA
.
m©
);

390 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
loˇlA
);

391 
	`∑r£c_d©a_‰ì
(
loˇlC
.
m©
);

392 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
loˇlC
);

393 
	`∑r£c_d©a_‰ì
(
loˇlC2
.
m©
);

394 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
loˇlC2
);

396  
öfo_sﬁuti⁄
;

397 
	}
}

	@testing_zgebrd_ge2gb.c

12 
	~"comm⁄.h
"

13 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

15 
	$TS_˝1QR
–
p
 ) {

16 i‡–
p
 > 0 )

17  4 + 6 + 12 * (
p
-1);

20 
	}
}

22 
	$TT_˝1QR
–
p
 ) {

23 i‡–
p
 > 0 )

24  4 + 6 + 6 * (
p
-1);

27 
	}
}

29 
	$GD_˝1QR
–
p
 ) {

30 i‡–
p
 > 0 )

31  4 + 6 + 6 * 
	`˚û
–
	`log2
–
p
 ) );

34 
	}
}

36 
	$TS_˝Bidüg
–
p
, 
q
 ) {

37 i‡–(
p
 > 0Ë&& (
q
 > 0) )

38  12 * 
p
 * 
q
 - 6 *Ö + 2 * q - 4;

41 
	}
}

43 
	$TT_˝Bidüg
–
p
, 
q
 ) {

44 i‡–(
p
 > 0Ë&& (
q
 > 0) )

45  6 * 
p
 * 
q
 - 4 *Ö + 12 * q - 10;

48 
	}
}

50 
	$GD_˝Bidüg
–
p
, 
q
 ) {

51 
k
, 
˝
;

52 ()
p
; ()
q
;

53 
˝
 = 4 + 2 * 
	`˚û
–
	`log2
–
p
+1-
q
 ) );

54 
k
=1; k<
q
; k++) {

55 
˝
 +
	`GD_˝1QR
–
p
 + 1 - 
k
 );

57 
k
=2; k<
q
+1; k++) {

58 
˝
 +
	`GD_˝1QR
–
q
 + 1 - 
k
 );

61  
˝
;

62 
	}
}

64 
	$TS_˝QR
–
p
, 
q
 ) {

65 i‡(
q
 == 1) {

66  4 + (
p
-
q
) * 6;

69 i‡(
p
 =
q
) {

70  30 * (
q
-1) - 4;

72  30 * (
q
-1Ë- 2 + (
p
-q) * 12;

75 
	}
}

77 
	$TT_˝QR
–
p
, 
q
 ) {

78 i‡(
q
 == 1) {

79  2 * 
p
 + 2;

82 i‡(
p
 =
q
) {

83  22 * 
q
 - 24;

85  6 * 
p
 + 16 * 
q
 - 22;

88 
	}
}

90 
	$GD_˝QR
–
p
, 
q
 ) {

91 i‡(
q
 == 1) {

92  4 + 2 * 
	`˚û
–
	`log2
(
p
) );

94  22 * 
q
 + 6 * 
	`˚û
–
	`log2
(
p
) );

96 
	}
}

98 
	$RunO√Te°
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
nodes
, 
c‹es
, 
ønk
, 
loud
,

99 
M
, 
N
, 
LDA
, 
MB
, 
NB
, 
IB
, 
P
, 
Q
, 
hmb
,

100 
…ª0
, 
håe0
, 
…ªe
, 
håì
, 
ts
, 
domöo
, 
rbidüg
 )

102 
ªt
 = 0;

103 
d∂asma_qπªe_t
 
qπª0
, 
qπªe
, 
lqåì
;

104 
∑r£c_tûed_m©rix_dc_t
 *
subA
 = 
NULL
;

105 
möMN
;

106 
MT
 = (
M
%
MB
==0) ? (M/MB) : (M/MB+1);

107 
NT
 = (
N
%
NB
==0) ? (N/NB) : (N/NB+1);

108 
˝
 = -1;

109 
i
, 
nbrun
 = 3;

110 
rc
;

113 
DagDoubÀ_t
 
Ê›s
, 
gÊ›s
 = -1.;

114 
DagDoubÀ_t
 
gÊ›s_mö
 = 9999999999999.;

115 
DagDoubÀ_t
 
gÊ›s_max
 = 0.;

116 
DagDoubÀ_t
 
gÊ›s_avg
 = 0.;

117 
DagDoubÀ_t
 
gÊ›s_sum
 = 0.;

118 
DagDoubÀ_t
 
time_avg
 = 0.;

119 
Ê›s
 = 
	`FLOPS_ZGEQRF
–(
DagDoubÀ_t
)
M
, (DagDoubÀ_t)
N
 )

120 + 
	`FLOPS_ZGELQF
–(
DagDoubÀ_t
)
M
, (DagDoubÀ_t)(
N
-
NB
) );

121 
LDA
 = 
	`max
(
M
, LDA);

123 i‡–
M
 < 
N
 ) {

124 
	`Ârötf
(
°dîr
, "ThisÅesting can onlyÖerform SVD on matrices with M >= N\n");

127 
möMN
 = 
	`d∂asma_imö
(
M
, 
N
);

130 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

131 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

132 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

133 
M
, 
N
, 1, 1, 
P
));

134 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcTS0
, 
rbidüg
,

135 
two_dim_block_cy˛ic
, (&
dcTS0
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

136 
nodes
, 
ønk
, 
IB
, 
NB
, 
MT
*IB, 
N
, 0, 0,

137 
MT
*
IB
, 
N
, 1, 1, 
P
));

138 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcTT0
, 
rbidüg
,

139 
two_dim_block_cy˛ic
, (&
dcTT0
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

140 
nodes
, 
ønk
, 
IB
, 
NB
, 
MT
*IB, 
N
, 0, 0,

141 
MT
*
IB
, 
N
, 1, 1, 
P
));

142 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcTS
, 1,

143 
two_dim_block_cy˛ic
, (&
dcTS
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

144 
nodes
, 
ønk
, 
IB
, 
NB
, 
MT
*IB, 
N
, 0, 0,

145 
MT
*
IB
, 
N
, 1, 1, 
P
));

146 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcTT
, 1,

147 
two_dim_block_cy˛ic
, (&
dcTT
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

148 
nodes
, 
ønk
, 
IB
, 
NB
, 
MT
*IB, 
N
, 0, 0,

149 
MT
*
IB
, 
N
, 1, 1, 
P
));

150 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB™d
, 1,

151 
two_dim_block_cy˛ic
, (&
dcB™d
, 
m©rix_Com∂exDoubÀ
, 
m©rix_L≠ack
,

152 1, 
ønk
, 
MB
+1, 
NB
, MB+1, 
möMN
, 0, 0,

153 
MB
+1, 
möMN
, 1, 1, 1));

156 if(
loud
 > 3Ë
	`¥ötf
("+++ Generate matrices ... ");

158 i‡–
rbidüg
 ) {

159 
subA
 = 
	`tûed_m©rix_subm©rix
–(
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

160 0, 0, 
dcA
.
su≥r
.
n
, dcA.super.n );

162 
	`d∂asma_hqr_öô
–&
qπª0
,

163 
d∂asmaNoTøns
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

164 
…ª0
, 
håe0
, 
ts
, 
P
, 
domöo
, 0 );

169 i‡(
…ªe
 == 9) {

170 
	`d∂asma_svd_öô
–&
qπªe
,

171 
d∂asmaNoTøns
, 
subA
,

172 
håì
, 
P
, 
c‹es
, 
hmb
 );

174 
	`d∂asma_svd_öô
–&
lqåì
,

175 
d∂asmaTøns
, 
subA
,

176 
håì
, 
Q
, 
c‹es
, 
hmb
 );

178 #i‡
	`deföed
(
PARSEC_SIM
)

179 i‡(
…ªe
 =
DPLASMA_FLAT_TREE
) {

180 i‡(
ts
 == 1) {

181 
˝
 = 
	`TT_˝QR
–
MT
, 
NT
 );

182 i‡(
NT
 == 1) {

184 i‡(
NT
 == 2) {

185 
˝
 += 6

188 i‡(
NT
 == 3) {

189 
˝
 += 12

190 + 
	`TT_˝Bidüg
–
NT
-1, NT-1 );

193 
˝
 = 6 * 
NT
 * NT + 6 * NT + 6 * 
MT
 - 16;

197 
˝
 = 
	`TS_˝QR
–
MT
, 
NT
 );

198 i‡(
NT
 == 1) {

200 i‡(
NT
 == 2) {

201 
˝
 += 6

205 i‡–
NT
 =3 && NT =
MT
 ) {

206 
˝
 = 12 * 
NT
 * NT - 16 * NT + 12 * 
MT
 + 4;

209 
˝
 = 12 * 
NT
 * NT - 16 * NT + 12 * 
MT
 + 6;

214 i‡(
…ªe
 =
DPLASMA_GREEDY1P_TREE
) {

215 i‡(
ts
 == 1) {

216 
˝
 = 
	`GD_˝QR
–
MT
, 
NT
 );

217 i‡(
NT
 == 1) {

219 i‡(
NT
 == 2) {

220 
˝
 += 6

223 i‡(
NT
 == 3) {

224 
˝
 += 12

225 + 
	`GD_˝Bidüg
–
NT
-1, NT-1 );

228 
˝
 += 12

229 + 
NT
 * 6 + ((NT =
MT
) ? 2 : 0)

230 + 
	`GD_˝Bidüg
–
NT
-1, NT-1 ) - 
	`GD_˝1QR
( NT-1 );

235 
	`d∂asma_hqr_öô
–&
qπªe
,

236 
d∂asmaNoTøns
, 
subA
,

237 
…ªe
, 
håì
, 
ts
, 
P
, 0, 0 );

239 
	`d∂asma_hqr_öô
–&
lqåì
,

240 
d∂asmaTøns
, 
subA
,

241 
…ªe
, 
håì
, 
ts
, 
Q
, 0, 0 );

248 i‡(
…ªe
 == 9) {

249 
	`d∂asma_svd_öô
–&
qπªe
,

250 
d∂asmaNoTøns
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

251 
håì
, 
P
, 
c‹es
, 
hmb
 );

253 
	`d∂asma_svd_öô
–&
lqåì
,

254 
d∂asmaTøns
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

255 
håì
, 
Q
, 
c‹es
, 
hmb
 );

257 #i‡
	`deföed
(
PARSEC_SIM
)

258 i‡(
…ªe
 == 0) {

259 i‡(
ts
 == 1) {

260 
˝
 = 
	`TT_˝Bidüg
–
MT
, 
NT
 );

263 
˝
 = 
	`TS_˝Bidüg
–
MT
, 
NT
 );

266 i‡(
…ªe
 == 4) {

267 i‡(
ts
 == 1) {

268 
˝
 = 
	`GD_˝Bidüg
–
MT
, 
NT
 );

272 
	`d∂asma_hqr_öô
–&
qπªe
,

273 
d∂asmaNoTøns
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

274 
…ªe
, 
håì
, 
ts
, 
P
, 0, 0 );

276 
	`d∂asma_hqr_öô
–&
lqåì
,

277 
d∂asmaTøns
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

278 
…ªe
, 
håì
, 
ts
, 
Q
, 0, 0 );

282 #i‡
	`deföed
(
PARSEC_SIM
)

283 
nbrun
 = 1;

286 
i
=0; i<
nbrun
; i++) {

289 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 3872);

292 
	`PASTE_CODE_ENQUEUE_KERNEL
(
∑r£c
, 
zgebrd_ge2gbx
,

293 (
IB
, 
rbidüg
 ? &
qπª0
 : &
qπªe
,

294 &
qπªe
, &
lqåì
,

295 (
∑r£c_tûed_m©rix_dc_t
*)&
dcA
,

296 
rbidüg
 ? (
∑r£c_tûed_m©rix_dc_t
*)&
dcTS0
 : (∑r£c_tûed_m©rix_dc_t*)&
dcTS
,

297 
rbidüg
 ? (
∑r£c_tûed_m©rix_dc_t
*)&
dcTT0
 : (∑r£c_tûed_m©rix_dc_t*)&
dcTT
,

298 (
∑r£c_tûed_m©rix_dc_t
*)&
dcTS
,

299 (
∑r£c_tûed_m©rix_dc_t
*)&
dcTT
,

300 (
∑r£c_tûed_m©rix_dc_t
*)&
dcB™d
));

303 
	`SYNC_TIME_START
();

304 
rc
 = 
	`∑r£c_c⁄ãxt_°¨t
(
∑r£c
);

305 
	`PARSEC_CHECK_ERROR
(
rc
, "parsec_context_start");

306 
	`TIME_START
();

307 
rc
 = 
	`∑r£c_c⁄ãxt_waô
(
∑r£c
);

308 
	`PARSEC_CHECK_ERROR
(
rc
, "parsec_context_wait");

309 
	`SYNC_TIME_STOP
();

311 
	`d∂asma_zgebrd_ge2gbx_De°ru˘
–
PARSEC_zgebrd_ge2gbx
 );

313 
time_avg
 +
sync_time_ñ≠£d
;

314 
gÊ›s
 = (
Ê›s
/1.e9)/(
sync_time_ñ≠£d
);

316 i‡(
ønk
 == 0){

317 
	`Ârötf
(
°dout
,

319 
M
, 
N
, 
nodes
, 
c‹es
, 
P
, 
Q
, 
NB
, 
IB
,

320 
rbidüg
, 
håì
, 
…ªe
, 
ts
, 
domöo
, 
…ª0
,

321 
sync_time_ñ≠£d
, 
gÊ›s
);

323 
gÊ›s_mö
 = (gÊ›s_mö > 
gÊ›s
) ? gflops : gflops_min;

324 
gÊ›s_max
 = (gÊ›s_max < 
gÊ›s
) ? gflops : gflops_max;

325 
gÊ›s_avg
 +
gÊ›s
;

326 
gÊ›s_sum
 +(
gÊ›s
 * gflops);

328 
time_avg
 =Åime_avg / ()
nbrun
;

329 
gÊ›s_avg
 = gÊ›s_avg / ()
nbrun
;

330 
gÊ›s_sum
 = 
	`sqπ
–(gÊ›s_sum/()
nbrun
Ë- (
gÊ›s_avg
 * gflops_avg) );

332 #i‡
	`deföed
(
PARSEC_SIM
)

334 ()
Ê›s
; ()
gÊ›s
;

335 i‡–
ønk
 == 0 ) {

336 
	`¥ötf
("zgebrd_ge2gb simulation M= %2d N= %2d NP= %2d NC= %2d P= %2d Q= %2d NB= %2d IB= %2d R-bidiag= %2dÅreeh= %2dÅreel_rb= %2d qr_a= %2d QR(domino= %2dÅreel_qr= %2d) : %3d - %3d (Érror= %4d )\n",

337 
M
, 
N
, 
nodes
, 
c‹es
, 
P
, 
Q
, 
NB
, 
IB
,

338 
rbidüg
, 
håì
, 
…ªe
, 
ts
, 
domöo
, 
…ª0
,

339 
	`∑r£c_gësimuœti⁄d©e
–
∑r£c
 ), 
˝
,

340 
	`∑r£c_gësimuœti⁄d©e
–
∑r£c
 ) - 
˝
 );

344 
	`SYNC_TIME_PRINT
(
ønk
,

346 
M
, 
N
, 
nodes
, 
c‹es
, 
P
, 
Q
, 
NB
, 
IB
,

347 
rbidüg
, 
håì
, 
…ªe
, 
ts
, 
domöo
, 
…ª0
,

348 
time_avg
, 
gÊ›s_avg
, 
gÊ›s_mö
, 
gÊ›s_max
, 
gÊ›s_sum
));

350 
	`fÊush
(
°dout
);

352 
	`d∂asma_hqr_föÆize
–&
qπªe
 );

353 
	`d∂asma_hqr_föÆize
–&
lqåì
 );

355 i‡(
rbidüg
) {

356 
	`d∂asma_hqr_föÆize
–&
qπª0
 );

357 
	`‰ì
(
subA
);

358 
	`∑r£c_d©a_‰ì
(
dcTS0
.
m©
);

359 
	`∑r£c_d©a_‰ì
(
dcTT0
.
m©
);

360 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcTS0
);

361 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcTT0
);

364 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

365 
	`∑r£c_d©a_‰ì
(
dcTS
.
m©
);

366 
	`∑r£c_d©a_‰ì
(
dcTT
.
m©
);

367 
	`∑r£c_d©a_‰ì
(
dcB™d
.
m©
);

369 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

370 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcTS
);

371 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcTT
);

372 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcB™d
);

374 ()
˝
; ()
NT
;

376  
ªt
;

377 
	}
}

380 
	$maö
(
¨gc
, ** 
¨gv
)

382 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

383 
ù¨am
[
IPARAM_SIZEOF
];

384 
m
, 
ªt
 = 0;

387 
	`ù¨am_deÁu…_Á˘o
(
ù¨am
);

388 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 32, 200, 200);

389 
ù¨am
[
IPARAM_KP
] = 1;

390 
ù¨am
[
IPARAM_KQ
] = 1;

391 
ù¨am
[
IPARAM_HMB
] = 2;

392 
ù¨am
[
IPARAM_HNB
] = 1;

393 
ù¨am
[
IPARAM_LDA
] = -'m';

394 
ù¨am
[
IPARAM_LDB
] = -'m';

397 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

399 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

401 
…ªe
 = 
ù¨am
[
IPARAM_LOWLVL_TREE
] =
DPLASMA_GREEDY_TREE
 ? 
DPLASMA_GREEDY1P_TREE
 : iparam[IPARAM_LOWLVL_TREE];

402 
…ªe
 = 
ù¨am
[
IPARAM_ASYNC
] ?Ütree : 9;

419 
m
=
M
; m<=
N
; m+=
K
 ) {

420 
	`RunO√Te°
–
∑r£c
, 
nodes
, 
ù¨am
[
IPARAM_NCORES
], 
ønk
, 
loud
,

421 
m
, m, 
LDA
, 
MB
, 
NB
, 
IB
, 
P
, 
Q
, 
ù¨am
[
IPARAM_HMB
],

422 
ù¨am
[
IPARAM_LOWLVL_TREE
], i∑øm[
IPARAM_HIGHLVL_TREE
],

423 
…ªe
, 
ù¨am
[
IPARAM_HIGHLVL_TREE
],

424 
ù¨am
[
IPARAM_QR_TS_SZE
], i∑øm[
IPARAM_QR_DOMINO
], i∑øm[
IPARAM_QR_TSRR
] );

427 
m
=
N
; m<=
M
; m+=
K
 ) {

428 
	`RunO√Te°
–
∑r£c
, 
nodes
, 
ù¨am
[
IPARAM_NCORES
], 
ønk
, 
loud
,

429 
m
, 
N
, 
LDA
, 
MB
, 
NB
, 
IB
, 
P
, 
Q
, 
ù¨am
[
IPARAM_HMB
],

430 
ù¨am
[
IPARAM_LOWLVL_TREE
], i∑øm[
IPARAM_HIGHLVL_TREE
],

431 
…ªe
, 
ù¨am
[
IPARAM_HIGHLVL_TREE
],

432 
ù¨am
[
IPARAM_QR_TS_SZE
], i∑øm[
IPARAM_QR_DOMINO
], i∑øm[
IPARAM_QR_TSRR
] );

435 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

437  
ªt
;

438 
	}
}

	@testing_zgelqf.c

10 
	~"comm⁄.h
"

11 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

13 
check_‹thog⁄Æôy
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

14 
∑r£c_tûed_m©rix_dc_t
 *
Q
);

15 
check_Á˘‹iz©i⁄
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

16 
∑r£c_tûed_m©rix_dc_t
 *
A‹ig
,

17 
∑r£c_tûed_m©rix_dc_t
 *
A
,

18 
∑r£c_tûed_m©rix_dc_t
 *
Q
);

19 
check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

20 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

21 
∑r£c_tûed_m©rix_dc_t
 *
dcB
,

22 
∑r£c_tûed_m©rix_dc_t
 *
dcX
 );

24 
	$maö
(
¨gc
, ** 
¨gv
)

26 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

27 
ù¨am
[
IPARAM_SIZEOF
];

28 
ªt
 = 0;

31 
	`ù¨am_deÁu…_Á˘o
(
ù¨am
);

32 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 32, 200, 200);

33 
ù¨am
[
IPARAM_KP
] = 1;

34 
ù¨am
[
IPARAM_KQ
] = 4;

35 
ù¨am
[
IPARAM_LDA
] = -'m';

36 
ù¨am
[
IPARAM_LDB
] = -'n';

39 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

40 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

41 
	`PASTE_CODE_FLOPS
(
FLOPS_ZGELQF
, ((
DagDoubÀ_t
)
M
, (DagDoubÀ_t)
N
));

43 
LDA
 = 
	`max
(
M
, LDA);

45 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

46 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

47 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

48 
M
, 
N
, 
KP
, 
KQ
, 
P
));

49 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcT
, 1,

50 
two_dim_block_cy˛ic
, (&
dcT
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

51 
nodes
, 
ønk
, 
IB
, 
NB
, 
MT
*IB, 
N
, 0, 0,

52 
MT
*
IB
, 
N
, 
KP
, 
KQ
, 
P
));

53 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA0
, 
check
,

54 
two_dim_block_cy˛ic
, (&
dcA0
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

55 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

56 
M
, 
N
, 
KP
, 
KQ
, 
P
));

57 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcQ
, 
check
,

58 
two_dim_block_cy˛ic
, (&
dcQ
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

59 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

60 
M
, 
N
, 
KP
, 
KQ
, 
P
));

63 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB
, 
check
,

64 
two_dim_block_cy˛ic
, (&
dcB
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

65 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

66 
N
, 
NRHS
, 
KP
, 
KQ
, 
P
));

68 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcX
, 
check
,

69 
two_dim_block_cy˛ic
, (&
dcX
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

70 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

71 
N
, 
NRHS
, 
KP
, 
KQ
, 
P
));

74 if(
loud
 > 3Ë
	`¥ötf
("+++ Generate matrices ... ");

75 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 3872);

76 if–
check
 )

77 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

78 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, (∑r£c_tûed_m©rix_dc_à*)&
dcA0
 );

79 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 0., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcT
);

80 if(
loud
 > 3Ë
	`¥ötf
("Done\n");

83 
	`PASTE_CODE_ENQUEUE_KERNEL
(
∑r£c
, 
zgñqf
,

84 ((
∑r£c_tûed_m©rix_dc_t
*)&
dcA
,

85 (
∑r£c_tûed_m©rix_dc_t
*)&
dcT
));

88 
	`PASTE_CODE_PROGRESS_KERNEL
(
∑r£c
, 
zgñqf
);

89 
	`d∂asma_zgñqf_De°ru˘
–
PARSEC_zgñqf
 );

91 if–
check
 ) {

92 i‡(
N
 >
M
) {

93 if(
loud
 > 2Ë
	`¥ötf
("+++ GenerateÅhe Q ...");

94 
	`d∂asma_zunglq
–
∑r£c
,

95 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

96 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcT
,

97 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
);

98 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

100 if(
loud
 > 2Ë
	`¥ötf
("+++ SolveÅhe system ...");

101 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
, 2354);

102 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

103 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
,

104 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
 );

105 
	`d∂asma_zgñqs
–
∑r£c
,

106 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

107 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcT
,

108 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
 );

109 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

112 
ªt
 |
	`check_‹thog⁄Æôy
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

113 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
);

114 
ªt
 |
	`check_Á˘‹iz©i⁄
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

115 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

116 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

117 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
 );

118 
ªt
 |
	`check_sﬁuti⁄
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

119 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

120 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

121 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
 );

124 
	`¥ötf
("Check cannot beÖerformed when M > N\n");

127 
	`∑r£c_d©a_‰ì
(
dcA0
.
m©
);

128 
	`∑r£c_d©a_‰ì
(
dcQ
.
m©
);

129 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA0
);

130 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcQ
);

133 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

134 
	`∑r£c_d©a_‰ì
(
dcT
.
m©
);

135 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
 );

136 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcT
 );

138 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

140  
ªt
;

141 
	}
}

146 
	$check_‹thog⁄Æôy
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
, 
∑r£c_tûed_m©rix_dc_t
 *
Q
)

148 
two_dim_block_cy˛ic_t
 *
twodQ
 = (two_dim_block_cy˛ic_à*)
Q
;

149 
n‹mQ
 = 999999.0;

150 
ªsu…
;

151 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

152 
öfo_‹tho
;

153 
M
 = 
Q
->
m
;

154 
N
 = 
Q
->
n
;

155 
möMN
 = 
	`mö
(
M
, 
N
);

157 
	`PASTE_CODE_ALLOCATE_MATRIX
(
Id
, 1,

158 
two_dim_block_cy˛ic
, (&
Id
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

159 
Q
->
su≥r
.
nodes
, 
twodQ
->
grid
.
ønk
,

160 
Q
->
mb
, Q->
nb
, 
möMN
, minMN, 0, 0,

161 
möMN
, möMN, 
twodQ
->
grid
.
krows
,ÅwodQ->grid.
kcﬁs
,ÅwodQ->grid.
rows
));

163 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
Id
);

166 i‡–
M
 >
N
 ) {

167 
	`d∂asma_zhîk
–
∑r£c
, 
d∂asmaUµî
, 
d∂asmaC⁄jTøns
,

168 1.0, 
Q
, -1.0, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
 );

170 
	`d∂asma_zhîk
–
∑r£c
, 
d∂asmaUµî
, 
d∂asmaNoTøns
,

171 1.0, 
Q
, -1.0, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
 );

174 
n‹mQ
 = 
	`d∂asma_zœnhe
(
∑r£c
, 
d∂asmaInfN‹m
, 
d∂asmaUµî
, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
);

176 
ªsu…
 = 
n‹mQ
 / (
möMN
 * 
ïs
);

177 i‡–
loud
 ) {

178 
	`¥ötf
("============\n");

179 
	`¥ötf
("CheckingÅhe orthogonality of Q \n");

180 
	`¥ötf
("||Id-Q'*Q||_oÿ/ (N*ïsË%ê\n", 
ªsu…
);

183 i‡–
	`i¢™
(
ªsu…
Ë|| 
	`isöf
(result) || (result > 60.0) ) {

184 i‡–
loud
 ) 
	`¥ötf
("-- Orthogonality is suspicious ! \n");

185 
öfo_‹tho
=1;

188 i‡–
loud
 ) 
	`¥ötf
("-- Orthogonality is CORRECT ! \n");

189 
öfo_‹tho
=0;

192 
	`∑r£c_d©a_‰ì
(
Id
.
m©
);

193 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
Id
);

194  
öfo_‹tho
;

195 
	}
}

201 
	$check_Á˘‹iz©i⁄
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

202 
∑r£c_tûed_m©rix_dc_t
 *
A‹ig
,

203 
∑r£c_tûed_m©rix_dc_t
 *
A
,

204 
∑r£c_tûed_m©rix_dc_t
 *
Q
)

206 
∑r£c_tûed_m©rix_dc_t
 *
subA
;

207 
two_dim_block_cy˛ic_t
 *
twodA
 = (two_dim_block_cy˛ic_à*)
A
;

208 
An‹m
, 
Rn‹m
;

209 
ªsu…
;

210 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

211 
öfo_Á˘‹iz©i⁄
;

212 
M
 = 
A
->
m
;

213 
N
 = 
A
->
n
;

214 
möMN
 = 
	`mö
(
M
, 
N
);

216 
	`PASTE_CODE_ALLOCATE_MATRIX
(
ResiduÆ
, 1,

217 
two_dim_block_cy˛ic
, (&
ResiduÆ
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

218 
A
->
su≥r
.
nodes
, 
twodA
->
grid
.
ønk
,

219 
A
->
mb
, A->
nb
, 
M
, 
N
, 0, 0,

220 
M
, 
N
, 
twodA
->
grid
.
krows
,ÅwodA->grid.
kcﬁs
,ÅwodA->grid.
rows
));

222 
	`PASTE_CODE_ALLOCATE_MATRIX
(
L
, 1,

223 
two_dim_block_cy˛ic
, (&
L
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

224 
A
->
su≥r
.
nodes
, 
twodA
->
grid
.
ønk
,

225 
A
->
mb
, A->
nb
, 
M
, M, 0, 0,

226 
M
, M, 
twodA
->
grid
.
krows
,ÅwodA->grid.
kcﬁs
,ÅwodA->grid.
rows
));

229 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
, 
A‹ig
, (
∑r£c_tûed_m©rix_dc_t
 *)&
ResiduÆ
 );

232 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 0., (
∑r£c_tûed_m©rix_dc_t
 *)&
L
);

234 
subA
 = 
	`tûed_m©rix_subm©rix
–
A
, 0, 0, 
M
, M );

235 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaLowî
, 
subA
, (
∑r£c_tûed_m©rix_dc_t
 *)&
L
 );

236 
	`‰ì
(
subA
);

239 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaNoTøns
, dplasmaNoTrans,

240 -1.0, (
∑r£c_tûed_m©rix_dc_t
 *)&
L
, 
Q
,

241 1.0, (
∑r£c_tûed_m©rix_dc_t
 *)&
ResiduÆ
);

244 
	`∑r£c_d©a_‰ì
(
L
.
m©
);

245 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
L
);

247 
Rn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
ResiduÆ
);

248 
An‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
A‹ig
);

250 
ªsu…
 = 
Rn‹m
 / ( 
An‹m
 * 
möMN
 * 
ïs
);

252 i‡–
loud
 ) {

253 
	`¥ötf
("============\n");

254 
	`¥ötf
("CheckingÅhe LQ Factorization \n");

255 
	`¥ötf
("-- ||A-LQ||_oo/(||A||_oo.N.ïsË%ê\n", 
ªsu…
 );

258 i‡–
	`i¢™
(
ªsu…
Ë|| 
	`isöf
(result) || (result > 60.0) ) {

259 i‡–
loud
 ) 
	`¥ötf
("-- Factorization is suspicious ! \n");

260 
öfo_Á˘‹iz©i⁄
 = 1;

263 i‡–
loud
 ) 
	`¥ötf
("-- Factorization is CORRECT ! \n");

264 
öfo_Á˘‹iz©i⁄
 = 0;

267 
	`∑r£c_d©a_‰ì
(
ResiduÆ
.
m©
);

268 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
ResiduÆ
);

269  
öfo_Á˘‹iz©i⁄
;

270 
	}
}

272 
	$check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

273 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

274 
∑r£c_tûed_m©rix_dc_t
 *
dcB
,

275 
∑r£c_tûed_m©rix_dc_t
 *
dcX
 )

277 
∑r£c_tûed_m©rix_dc_t
 *
subB
;

278 
öfo_sﬁuti⁄
;

279 
Rn‹m
 = 0.0;

280 
An‹m
 = 0.0;

281 
Bn‹m
 = 0.0;

282 
Xn‹m
, 
ªsu…
;

283 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

285 
subB
 = 
	`tûed_m©rix_subm©rix
–
dcB
, 0, 0, 
dcA
->
m
, dcB->
n
 );

287 
An‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcA
);

288 
Bn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
subB
);

289 
Xn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcX
);

292 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaNoTøns
, d∂asmaNoTøns, 1.0, 
dcA
, 
dcX
, -1.0, 
subB
);

295 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaC⁄jTøns
, 
d∂asmaNoTøns
,

296 1.0, 
dcA
, 
subB
, 0., 
dcX
 );

298 
Rn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcX
 );

299 
	`‰ì
(
subB
);

301 
ªsu…
 = 
Rn‹m
 / ( ( 
An‹m
 * 
Xn‹m
 + 
Bn‹m
 ) * 
dcA
->
m
 * 
ïs
 ) ;

303 i‡–
loud
 > 2 ) {

304 
	`¥ötf
("============\n");

305 
	`¥ötf
("CheckingÅhe Residual ofÅhe solution \n");

306 i‡–
loud
 > 3 )

307 
	`¥ötf
( "-- ||A||_oo = %e, ||X||_oo = %e, ||B||_oo= %e, ||A X - B||_oo = %e\n",

308 
An‹m
, 
Xn‹m
, 
Bn‹m
, 
Rn‹m
 );

310 
	`¥ötf
("-- ||Ax-B||_oo/((||A||_oo||x||_oo+||B||_oo).N.ïsË%ê\n", 
ªsu…
);

313 i‡–
	`i¢™
(
Xn‹m
Ë|| 
	`isöf
(Xn‹mË|| i¢™(
ªsu…
) || isinf(result) || (result > 60.0) ) {

314 if–
loud
 ) 
	`¥ötf
("-- Solution is suspicious ! \n");

315 
öfo_sﬁuti⁄
 = 1;

318 if–
loud
 ) 
	`¥ötf
("-- Solution is CORRECT ! \n");

319 
öfo_sﬁuti⁄
 = 0;

322  
öfo_sﬁuti⁄
;

323 
	}
}

	@testing_zgelqf_hqr.c

10 
	~"comm⁄.h
"

11 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

13 
check_‹thog⁄Æôy
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

14 
∑r£c_tûed_m©rix_dc_t
 *
Q
);

15 
check_Á˘‹iz©i⁄
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

16 
∑r£c_tûed_m©rix_dc_t
 *
A‹ig
,

17 
∑r£c_tûed_m©rix_dc_t
 *
A
,

18 
∑r£c_tûed_m©rix_dc_t
 *
Q
);

19 
check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

20 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

21 
∑r£c_tûed_m©rix_dc_t
 *
dcB
,

22 
∑r£c_tûed_m©rix_dc_t
 *
dcX
 );

24 
	$maö
(
¨gc
, ** 
¨gv
)

26 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

27 
ù¨am
[
IPARAM_SIZEOF
];

28 
ªt
 = 0;

29 
d∂asma_qπªe_t
 
qπªe
;

32 
	`ù¨am_deÁu…_Á˘o
(
ù¨am
);

33 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 32, 200, 200);

34 
ù¨am
[
IPARAM_KP
] = 1;

35 
ù¨am
[
IPARAM_KQ
] = 1;

36 
ù¨am
[
IPARAM_LDA
] = -'m';

37 
ù¨am
[
IPARAM_LDB
] = -'n';

38 
ù¨am
[
IPARAM_QR_HLVL_SZE
] = -'Q';

41 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

44 
ù¨am
[
IPARAM_KP
] = 1;

45 
ù¨am
[
IPARAM_KQ
] = 1;

47 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

48 
	`PASTE_CODE_FLOPS
(
FLOPS_ZGELQF
, ((
DagDoubÀ_t
)
M
, (DagDoubÀ_t)
N
));

50 
LDA
 = 
	`max
(
M
, LDA);

52 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

53 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

54 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

55 
M
, 
N
, 
KP
, 
KQ
, 
P
));

56 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcTS
, 1,

57 
two_dim_block_cy˛ic
, (&
dcTS
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

58 
nodes
, 
ønk
, 
IB
, 
NB
, 
MT
*IB, 
N
, 0, 0,

59 
MT
*
IB
, 
N
, 
KP
, 
KQ
, 
P
));

60 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcTT
, 1,

61 
two_dim_block_cy˛ic
, (&
dcTT
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

62 
nodes
, 
ønk
, 
IB
, 
NB
, 
MT
*IB, 
N
, 0, 0,

63 
MT
*
IB
, 
N
, 
KP
, 
KQ
, 
P
));

64 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA0
, 
check
,

65 
two_dim_block_cy˛ic
, (&
dcA0
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

66 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

67 
M
, 
N
, 
KP
, 
KQ
, 
P
));

68 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcQ
, 
check
,

69 
two_dim_block_cy˛ic
, (&
dcQ
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

70 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

71 
M
, 
N
, 
KP
, 
KQ
, 
P
));

74 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB
, 
check
,

75 
two_dim_block_cy˛ic
, (&
dcB
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

76 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

77 
N
, 
NRHS
, 
KP
, 
KQ
, 
P
));

79 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcX
, 
check
,

80 
two_dim_block_cy˛ic
, (&
dcX
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

81 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

82 
N
, 
NRHS
, 
KP
, 
KQ
, 
P
));

85 if(
loud
 > 3Ë
	`¥ötf
("+++ Generate matrices ... ");

86 
	`d∂asma_z∂tmg
–
∑r£c
, 
m©rix_öô
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
øndom_£ed
 );

87 if–
check
 )

88 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

89 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, (∑r£c_tûed_m©rix_dc_à*)&
dcA0
 );

90 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 0., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTS
);

91 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 0., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTT
);

92 if(
loud
 > 3Ë
	`¥ötf
("Done\n");

94 
	`d∂asma_hqr_öô
–&
qπªe
,

95 
d∂asmaC⁄jTøns
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

96 
ù¨am
[
IPARAM_LOWLVL_TREE
], i∑øm[
IPARAM_HIGHLVL_TREE
],

97 
ù¨am
[
IPARAM_QR_TS_SZE
], i∑øm[
IPARAM_QR_HLVL_SZE
],

98 
ù¨am
[
IPARAM_QR_DOMINO
], i∑øm[
IPARAM_QR_TSRR
] );

101 
	`PASTE_CODE_ENQUEUE_KERNEL
(
∑r£c
, 
zgñqf_∑øm
,

102 (&
qπªe
,

103 (
∑r£c_tûed_m©rix_dc_t
*)&
dcA
,

104 (
∑r£c_tûed_m©rix_dc_t
*)&
dcTS
,

105 (
∑r£c_tûed_m©rix_dc_t
*)&
dcTT
));

108 
	`SYNC_TIME_START
();

109 
	`∑r£c_c⁄ãxt_°¨t
(
∑r£c
);

110 
	`TIME_START
();

111 
	`∑r£c_c⁄ãxt_waô
(
∑r£c
);

113 
	`SYNC_TIME_PRINT
(
ønk
,

115 
ù¨am
[
IPARAM_NNODES
],

116 
ù¨am
[
IPARAM_NCORES
],

117 
ù¨am
[
IPARAM_P
],

118 
ù¨am
[
IPARAM_IB
],

119 
ù¨am
[
IPARAM_MB
],

120 
ù¨am
[
IPARAM_NB
],

121 
ù¨am
[
IPARAM_QR_TS_SZE
],

122 
ù¨am
[
IPARAM_QR_HLVL_SZE
],

123 
ù¨am
[
IPARAM_LOWLVL_TREE
],

124 
ù¨am
[
IPARAM_HIGHLVL_TREE
],

125 
ù¨am
[
IPARAM_QR_DOMINO
],

126 
ù¨am
[
IPARAM_QR_TSRR
],

127 
ù¨am
[
IPARAM_M
],

128 
ù¨am
[
IPARAM_N
],

129 
gÊ›s
 = (
Ê›s
/1e9)/(
sync_time_ñ≠£d
)));

130 if(
loud
 >5 && 
ønk
 == 0) {

131 
	`¥ötf
("<DartMeasurementÇame=\"performance\"Åype=\"numeric/double\"\n"

135 
gÊ›s
);

138 #i‡
	`deföed
(
PARSEC_SIM
)

139 i‡–
ønk
 == 0 ) {

140 
	`¥ötf
("zgelqf HQR simulation NP= %d NC= %d P= %d qr_a= %d qr_p = %dÅreel= %dÅreeh= %d domino= %d RR= %d MT= %d NT= %d : %d \n",

141 
ù¨am
[
IPARAM_NNODES
],

142 
ù¨am
[
IPARAM_NCORES
],

143 
ù¨am
[
IPARAM_P
],

144 
ù¨am
[
IPARAM_QR_TS_SZE
],

145 
ù¨am
[
IPARAM_QR_HLVL_SZE
],

146 
ù¨am
[
IPARAM_LOWLVL_TREE
],

147 
ù¨am
[
IPARAM_HIGHLVL_TREE
],

148 
ù¨am
[
IPARAM_QR_DOMINO
],

149 
ù¨am
[
IPARAM_QR_TSRR
],

150 
MT
, 
NT
,

151 
	`∑r£c_gësimuœti⁄d©e
–
∑r£c
 ));

155 
	`d∂asma_zgñqf_∑øm_De°ru˘
–
PARSEC_zgñqf_∑øm
 );

157 if–
check
 ) {

158 i‡(
N
 >
M
) {

159 if(
loud
 > 2Ë
	`¥ötf
("+++ GenerateÅhe Q ...");

160 
	`d∂asma_zunglq_∑øm
–
∑r£c
, &
qπªe
,

161 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

162 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTS
,

163 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTT
,

164 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
);

165 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

167 if(
loud
 > 2Ë
	`¥ötf
("+++ SolveÅhe system ...");

168 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
, 
øndom_£ed
+1);

169 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

170 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
,

171 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
 );

172 
	`d∂asma_zgñqs_∑øm
–
∑r£c
, &
qπªe
,

173 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

174 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTS
,

175 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTT
,

176 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
 );

177 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

180 
ªt
 |
	`check_‹thog⁄Æôy
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

181 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
);

182 
ªt
 |
	`check_Á˘‹iz©i⁄
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

183 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

184 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

185 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
 );

186 
ªt
 |
	`check_sﬁuti⁄
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

187 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

188 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

189 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
 );

192 
	`¥ötf
("Check cannot beÖerformed when M > N\n");

195 
	`∑r£c_d©a_‰ì
(
dcA0
.
m©
);

196 
	`∑r£c_d©a_‰ì
(
dcQ
.
m©
);

197 
	`∑r£c_d©a_‰ì
(
dcB
.
m©
);

198 
	`∑r£c_d©a_‰ì
(
dcX
.
m©
);

199 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcA0
);

200 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcQ
);

201 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcB
);

202 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcX
);

205 
	`d∂asma_hqr_föÆize
–&
qπªe
 );

207 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

208 
	`∑r£c_d©a_‰ì
(
dcTS
.
m©
);

209 
	`∑r£c_d©a_‰ì
(
dcTT
.
m©
);

210 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

211 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcTS
);

212 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcTT
);

214 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

216  
ªt
;

217 
	}
}

222 
	$check_‹thog⁄Æôy
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
, 
∑r£c_tûed_m©rix_dc_t
 *
Q
)

224 
two_dim_block_cy˛ic_t
 *
twodQ
 = (two_dim_block_cy˛ic_à*)
Q
;

225 
n‹mQ
 = 999999.0;

226 
ªsu…
;

227 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

228 
öfo_‹tho
;

229 
M
 = 
Q
->
m
;

230 
N
 = 
Q
->
n
;

231 
möMN
 = 
	`mö
(
M
, 
N
);

233 
	`PASTE_CODE_ALLOCATE_MATRIX
(
Id
, 1,

234 
two_dim_block_cy˛ic
, (&
Id
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

235 
Q
->
su≥r
.
nodes
, 
twodQ
->
grid
.
ønk
,

236 
Q
->
mb
, Q->
nb
, 
möMN
, minMN, 0, 0,

237 
möMN
, möMN, 
twodQ
->
grid
.
krows
,ÅwodQ->grid.
kcﬁs
,ÅwodQ->grid.
rows
));

239 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
Id
);

242 i‡–
M
 >
N
 ) {

243 
	`d∂asma_zhîk
–
∑r£c
, 
d∂asmaUµî
, 
d∂asmaC⁄jTøns
,

244 1.0, 
Q
, -1.0, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
 );

246 
	`d∂asma_zhîk
–
∑r£c
, 
d∂asmaUµî
, 
d∂asmaNoTøns
,

247 1.0, 
Q
, -1.0, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
 );

250 
n‹mQ
 = 
	`d∂asma_zœnhe
(
∑r£c
, 
d∂asmaInfN‹m
, 
d∂asmaUµî
, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
);

252 
ªsu…
 = 
n‹mQ
 / (
möMN
 * 
ïs
);

253 i‡–
loud
 ) {

254 
	`¥ötf
("============\n");

255 
	`¥ötf
("CheckingÅhe orthogonality of Q \n");

256 
	`¥ötf
("||Id-Q'*Q||_oÿ/ (M*ïsË%ê\n", 
ªsu…
);

259 i‡–
	`i¢™
(
ªsu…
Ë|| 
	`isöf
(result) || (result > 60.0) ) {

260 i‡–
loud
 ) 
	`¥ötf
("-- Orthogonality is suspicious ! \n");

261 
öfo_‹tho
=1;

264 i‡–
loud
 ) 
	`¥ötf
("-- Orthogonality is CORRECT ! \n");

265 
öfo_‹tho
=0;

268 
	`∑r£c_d©a_‰ì
(
Id
.
m©
);

269 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
Id
);

270  
öfo_‹tho
;

271 
	}
}

277 
	$check_Á˘‹iz©i⁄
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

278 
∑r£c_tûed_m©rix_dc_t
 *
A‹ig
,

279 
∑r£c_tûed_m©rix_dc_t
 *
A
,

280 
∑r£c_tûed_m©rix_dc_t
 *
Q
)

282 
∑r£c_tûed_m©rix_dc_t
 *
subA
;

283 
two_dim_block_cy˛ic_t
 *
twodA
 = (two_dim_block_cy˛ic_à*)
A
;

284 
An‹m
, 
Rn‹m
;

285 
ªsu…
;

286 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

287 
öfo_Á˘‹iz©i⁄
;

288 
M
 = 
A
->
m
;

289 
N
 = 
A
->
n
;

290 
möMN
 = 
	`mö
(
M
, 
N
);

292 
	`PASTE_CODE_ALLOCATE_MATRIX
(
ResiduÆ
, 1,

293 
two_dim_block_cy˛ic
, (&
ResiduÆ
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

294 
A
->
su≥r
.
nodes
, 
twodA
->
grid
.
ønk
,

295 
A
->
mb
, A->
nb
, 
M
, 
N
, 0, 0,

296 
M
, 
N
, 
twodA
->
grid
.
krows
,ÅwodA->grid.
kcﬁs
,ÅwodA->grid.
rows
));

298 
	`PASTE_CODE_ALLOCATE_MATRIX
(
L
, 1,

299 
two_dim_block_cy˛ic
, (&
L
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

300 
A
->
su≥r
.
nodes
, 
twodA
->
grid
.
ønk
,

301 
A
->
mb
, A->
nb
, 
M
, M, 0, 0,

302 
M
, M, 
twodA
->
grid
.
krows
,ÅwodA->grid.
kcﬁs
,ÅwodA->grid.
rows
));

305 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
, 
A‹ig
, (
∑r£c_tûed_m©rix_dc_t
 *)&
ResiduÆ
 );

308 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 0., (
∑r£c_tûed_m©rix_dc_t
 *)&
L
);

310 
subA
 = 
	`tûed_m©rix_subm©rix
–
A
, 0, 0, 
M
, M );

311 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaLowî
, 
subA
, (
∑r£c_tûed_m©rix_dc_t
 *)&
L
 );

312 
	`‰ì
(
subA
);

315 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaNoTøns
, dplasmaNoTrans,

316 -1.0, (
∑r£c_tûed_m©rix_dc_t
 *)&
L
, 
Q
,

317 1.0, (
∑r£c_tûed_m©rix_dc_t
 *)&
ResiduÆ
);

320 
	`∑r£c_d©a_‰ì
(
L
.
m©
);

321 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
L
);

323 
Rn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
ResiduÆ
);

324 
An‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
A‹ig
);

326 
ªsu…
 = 
Rn‹m
 / ( 
An‹m
 * 
möMN
 * 
ïs
);

328 i‡–
loud
 ) {

329 
	`¥ötf
("============\n");

330 
	`¥ötf
("CheckingÅhe LQ Factorization \n");

331 
	`¥ötf
("-- ||A-LQ||_oo/(||A||_oo.M.ïsË%ê\n", 
ªsu…
 );

334 i‡–
	`i¢™
(
ªsu…
Ë|| 
	`isöf
(result) || (result > 60.0) ) {

335 i‡–
loud
 ) 
	`¥ötf
("-- Factorization is suspicious ! \n");

336 
öfo_Á˘‹iz©i⁄
 = 1;

339 i‡–
loud
 ) 
	`¥ötf
("-- Factorization is CORRECT ! \n");

340 
öfo_Á˘‹iz©i⁄
 = 0;

343 
	`∑r£c_d©a_‰ì
(
ResiduÆ
.
m©
);

344 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
ResiduÆ
);

345  
öfo_Á˘‹iz©i⁄
;

346 
	}
}

348 
	$check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

349 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

350 
∑r£c_tûed_m©rix_dc_t
 *
dcB
,

351 
∑r£c_tûed_m©rix_dc_t
 *
dcX
 )

353 
∑r£c_tûed_m©rix_dc_t
 *
subB
;

354 
öfo_sﬁuti⁄
;

355 
Rn‹m
 = 0.0;

356 
An‹m
 = 0.0;

357 
Bn‹m
 = 0.0;

358 
Xn‹m
, 
ªsu…
;

359 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

361 
subB
 = 
	`tûed_m©rix_subm©rix
–
dcB
, 0, 0, 
dcA
->
m
, dcB->
n
 );

363 
An‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcA
);

364 
Bn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
subB
);

365 
Xn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcX
);

368 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaNoTøns
, d∂asmaNoTøns, 1.0, 
dcA
, 
dcX
, -1.0, 
subB
);

371 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaC⁄jTøns
, 
d∂asmaNoTøns
,

372 1.0, 
dcA
, 
subB
, 0., 
dcX
 );

374 
Rn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcX
 );

375 
	`‰ì
(
subB
);

377 
ªsu…
 = 
Rn‹m
 / ( ( 
An‹m
 * 
Xn‹m
 + 
Bn‹m
 ) * 
dcA
->
m
 * 
ïs
 ) ;

379 i‡–
loud
 > 2 ) {

380 
	`¥ötf
("============\n");

381 
	`¥ötf
("CheckingÅhe Residual ofÅhe solution \n");

382 i‡–
loud
 > 3 )

383 
	`¥ötf
( "-- ||A||_oo = %e, ||X||_oo = %e, ||B||_oo= %e, ||A X - B||_oo = %e\n",

384 
An‹m
, 
Xn‹m
, 
Bn‹m
, 
Rn‹m
 );

386 
	`¥ötf
("-- ||Ax-B||_oo/((||A||_oo||x||_oo+||B||_oo).M.ïsË%ê\n", 
ªsu…
);

389 i‡–
	`i¢™
(
Xn‹m
Ë|| 
	`isöf
(Xn‹mË|| i¢™(
ªsu…
) || isinf(result) || (result > 60.0) ) {

390 if–
loud
 ) 
	`¥ötf
("-- Solution is suspicious ! \n");

391 
öfo_sﬁuti⁄
 = 1;

394 if–
loud
 ) 
	`¥ötf
("-- Solution is CORRECT ! \n");

395 
öfo_sﬁuti⁄
 = 0;

398  
öfo_sﬁuti⁄
;

399 
	}
}

	@testing_zgelqf_systolic.c

10 
	~"comm⁄.h
"

11 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

13 
check_‹thog⁄Æôy
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

14 
∑r£c_tûed_m©rix_dc_t
 *
Q
);

15 
check_Á˘‹iz©i⁄
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

16 
∑r£c_tûed_m©rix_dc_t
 *
A‹ig
,

17 
∑r£c_tûed_m©rix_dc_t
 *
A
,

18 
∑r£c_tûed_m©rix_dc_t
 *
Q
);

19 
check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

20 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

21 
∑r£c_tûed_m©rix_dc_t
 *
dcB
,

22 
∑r£c_tûed_m©rix_dc_t
 *
dcX
 );

24 
	$maö
(
¨gc
, ** 
¨gv
)

26 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

27 
ù¨am
[
IPARAM_SIZEOF
];

28 
ªt
 = 0;

29 
d∂asma_qπªe_t
 
qπªe
;

32 
	`ù¨am_deÁu…_Á˘o
(
ù¨am
);

33 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 32, 200, 200);

34 
ù¨am
[
IPARAM_KP
] = 1;

35 
ù¨am
[
IPARAM_KQ
] = 1;

36 
ù¨am
[
IPARAM_LDA
] = -'m';

37 
ù¨am
[
IPARAM_LDB
] = -'n';

40 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

43 
ù¨am
[
IPARAM_KP
] = 1;

44 
ù¨am
[
IPARAM_KQ
] = 1;

46 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

47 
	`PASTE_CODE_FLOPS
(
FLOPS_ZGELQF
, ((
DagDoubÀ_t
)
M
, (DagDoubÀ_t)
N
));

49 
LDA
 = 
	`max
(
M
, LDA);

51 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

52 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

53 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

54 
M
, 
N
, 
KP
, 
KQ
, 
P
));

55 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcTS
, 1,

56 
two_dim_block_cy˛ic
, (&
dcTS
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

57 
nodes
, 
ønk
, 
IB
, 
NB
, 
MT
*IB, 
N
, 0, 0,

58 
MT
*
IB
, 
N
, 
KP
, 
KQ
, 
P
));

59 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcTT
, 1,

60 
two_dim_block_cy˛ic
, (&
dcTT
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

61 
nodes
, 
ønk
, 
IB
, 
NB
, 
MT
*IB, 
N
, 0, 0,

62 
MT
*
IB
, 
N
, 
KP
, 
KQ
, 
P
));

63 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA0
, 
check
,

64 
two_dim_block_cy˛ic
, (&
dcA0
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

65 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

66 
M
, 
N
, 
KP
, 
KQ
, 
P
));

67 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcQ
, 
check
,

68 
two_dim_block_cy˛ic
, (&
dcQ
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

69 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

70 
M
, 
N
, 
KP
, 
KQ
, 
P
));

73 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB
, 
check
,

74 
two_dim_block_cy˛ic
, (&
dcB
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

75 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

76 
N
, 
NRHS
, 
KP
, 
KQ
, 
P
));

78 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcX
, 
check
,

79 
two_dim_block_cy˛ic
, (&
dcX
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

80 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

81 
N
, 
NRHS
, 
KP
, 
KQ
, 
P
));

84 if(
loud
 > 3Ë
	`¥ötf
("+++ Generate matrices ... ");

85 
	`d∂asma_z∂tmg
–
∑r£c
, 
m©rix_öô
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
øndom_£ed
 );

86 if–
check
 )

87 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

88 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, (∑r£c_tûed_m©rix_dc_à*)&
dcA0
 );

89 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 0., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTS
);

90 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 0., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTT
);

91 if(
loud
 > 3Ë
	`¥ötf
("Done\n");

93 
	`d∂asma_sy°ﬁic_öô
–&
qπªe
,

94 
d∂asmaC⁄jTøns
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

95 
ù¨am
[
IPARAM_P
],

96 
ù¨am
[
IPARAM_Q
] );

99 
	`PASTE_CODE_ENQUEUE_KERNEL
(
∑r£c
, 
zgñqf_∑øm
,

100 (&
qπªe
,

101 (
∑r£c_tûed_m©rix_dc_t
*)&
dcA
,

102 (
∑r£c_tûed_m©rix_dc_t
*)&
dcTS
,

103 (
∑r£c_tûed_m©rix_dc_t
*)&
dcTT
));

106 
	`SYNC_TIME_START
();

107 
	`∑r£c_c⁄ãxt_°¨t
(
∑r£c
);

108 
	`TIME_START
();

109 
	`∑r£c_c⁄ãxt_waô
(
∑r£c
);

111 
	`SYNC_TIME_PRINT
(
ønk
,

113 
ù¨am
[
IPARAM_NNODES
],

114 
ù¨am
[
IPARAM_NCORES
],

115 
ù¨am
[
IPARAM_P
],

116 
ù¨am
[
IPARAM_IB
],

117 
ù¨am
[
IPARAM_MB
],

118 
ù¨am
[
IPARAM_NB
],

119 
ù¨am
[
IPARAM_Q
],

120 
ù¨am
[
IPARAM_P
],

121 
ù¨am
[
IPARAM_LOWLVL_TREE
],

122 
ù¨am
[
IPARAM_HIGHLVL_TREE
],

123 
ù¨am
[
IPARAM_QR_DOMINO
],

124 
ù¨am
[
IPARAM_QR_TSRR
],

125 
ù¨am
[
IPARAM_M
],

126 
ù¨am
[
IPARAM_N
],

127 
gÊ›s
 = (
Ê›s
/1e9)/(
sync_time_ñ≠£d
)));

128 if(
loud
 >5 && 
ønk
 == 0) {

129 
	`¥ötf
("<DartMeasurementÇame=\"performance\"Åype=\"numeric/double\"\n"

133 
gÊ›s
);

136 #i‡
	`deföed
(
PARSEC_SIM
)

137 i‡–
ønk
 == 0 ) {

138 
	`¥ötf
("zgelqf systolic simulation NP= %d NC= %d P= %d qr_a= %d qr_p = %dÅreel= %dÅreeh= %d domino= %d RR= %d MT= %d NT= %d : %d \n",

139 
ù¨am
[
IPARAM_NNODES
],

140 
ù¨am
[
IPARAM_NCORES
],

141 
ù¨am
[
IPARAM_P
],

142 
ù¨am
[
IPARAM_Q
],

143 
ù¨am
[
IPARAM_P
],

144 
ù¨am
[
IPARAM_LOWLVL_TREE
],

145 
ù¨am
[
IPARAM_HIGHLVL_TREE
],

146 
ù¨am
[
IPARAM_QR_DOMINO
],

147 
ù¨am
[
IPARAM_QR_TSRR
],

148 
MT
, 
NT
,

149 
	`∑r£c_gësimuœti⁄d©e
–
∑r£c
 ));

153 
	`d∂asma_zgñqf_∑øm_De°ru˘
–
PARSEC_zgñqf_∑øm
 );

155 if–
check
 ) {

156 i‡(
N
 >
M
) {

157 if(
loud
 > 2Ë
	`¥ötf
("+++ GenerateÅhe Q ...");

158 
	`d∂asma_zunglq_∑øm
–
∑r£c
, &
qπªe
,

159 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

160 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTS
,

161 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTT
,

162 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
);

163 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

165 if(
loud
 > 2Ë
	`¥ötf
("+++ SolveÅhe system ...");

166 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
, 
øndom_£ed
+1);

167 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

168 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
,

169 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
 );

170 
	`d∂asma_zgñqs_∑øm
–
∑r£c
, &
qπªe
,

171 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

172 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTS
,

173 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTT
,

174 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
 );

175 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

178 
ªt
 |
	`check_‹thog⁄Æôy
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

179 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
);

180 
ªt
 |
	`check_Á˘‹iz©i⁄
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

181 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

182 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

183 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
 );

184 
ªt
 |
	`check_sﬁuti⁄
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

185 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

186 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

187 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
 );

190 
	`¥ötf
("Check cannot beÖerformed when M > N\n");

193 
	`∑r£c_d©a_‰ì
(
dcA0
.
m©
);

194 
	`∑r£c_d©a_‰ì
(
dcQ
.
m©
);

195 
	`∑r£c_d©a_‰ì
(
dcB
.
m©
);

196 
	`∑r£c_d©a_‰ì
(
dcX
.
m©
);

197 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcA0
);

198 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcQ
);

199 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcB
);

200 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcX
);

203 
	`d∂asma_sy°ﬁic_föÆize
–&
qπªe
 );

205 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

206 
	`∑r£c_d©a_‰ì
(
dcTS
.
m©
);

207 
	`∑r£c_d©a_‰ì
(
dcTT
.
m©
);

208 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

209 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcTS
);

210 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcTT
);

212 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

214  
ªt
;

215 
	}
}

220 
	$check_‹thog⁄Æôy
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
, 
∑r£c_tûed_m©rix_dc_t
 *
Q
)

222 
two_dim_block_cy˛ic_t
 *
twodQ
 = (two_dim_block_cy˛ic_à*)
Q
;

223 
n‹mQ
 = 999999.0;

224 
ªsu…
;

225 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

226 
öfo_‹tho
;

227 
M
 = 
Q
->
m
;

228 
N
 = 
Q
->
n
;

229 
möMN
 = 
	`mö
(
M
, 
N
);

231 
	`PASTE_CODE_ALLOCATE_MATRIX
(
Id
, 1,

232 
two_dim_block_cy˛ic
, (&
Id
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

233 
Q
->
su≥r
.
nodes
, 
twodQ
->
grid
.
ønk
,

234 
Q
->
mb
, Q->
nb
, 
möMN
, minMN, 0, 0,

235 
möMN
, möMN, 
twodQ
->
grid
.
krows
,ÅwodQ->grid.
kcﬁs
,ÅwodQ->grid.
rows
));

237 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
Id
);

240 i‡–
M
 >
N
 ) {

241 
	`d∂asma_zhîk
–
∑r£c
, 
d∂asmaUµî
, 
d∂asmaC⁄jTøns
,

242 1.0, 
Q
, -1.0, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
 );

244 
	`d∂asma_zhîk
–
∑r£c
, 
d∂asmaUµî
, 
d∂asmaNoTøns
,

245 1.0, 
Q
, -1.0, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
 );

248 
n‹mQ
 = 
	`d∂asma_zœnhe
(
∑r£c
, 
d∂asmaInfN‹m
, 
d∂asmaUµî
, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
);

250 
ªsu…
 = 
n‹mQ
 / (
möMN
 * 
ïs
);

251 i‡–
loud
 ) {

252 
	`¥ötf
("============\n");

253 
	`¥ötf
("CheckingÅhe orthogonality of Q \n");

254 
	`¥ötf
("||Id-Q'*Q||_oÿ/ (M*ïsË%ê\n", 
ªsu…
);

257 i‡–
	`i¢™
(
ªsu…
Ë|| 
	`isöf
(result) || (result > 60.0) ) {

258 i‡–
loud
 ) 
	`¥ötf
("-- Orthogonality is suspicious ! \n");

259 
öfo_‹tho
=1;

262 i‡–
loud
 ) 
	`¥ötf
("-- Orthogonality is CORRECT ! \n");

263 
öfo_‹tho
=0;

266 
	`∑r£c_d©a_‰ì
(
Id
.
m©
);

267 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
Id
);

268  
öfo_‹tho
;

269 
	}
}

275 
	$check_Á˘‹iz©i⁄
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

276 
∑r£c_tûed_m©rix_dc_t
 *
A‹ig
,

277 
∑r£c_tûed_m©rix_dc_t
 *
A
,

278 
∑r£c_tûed_m©rix_dc_t
 *
Q
)

280 
∑r£c_tûed_m©rix_dc_t
 *
subA
;

281 
two_dim_block_cy˛ic_t
 *
twodA
 = (two_dim_block_cy˛ic_à*)
A
;

282 
An‹m
, 
Rn‹m
;

283 
ªsu…
;

284 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

285 
öfo_Á˘‹iz©i⁄
;

286 
M
 = 
A
->
m
;

287 
N
 = 
A
->
n
;

288 
möMN
 = 
	`mö
(
M
, 
N
);

290 
	`PASTE_CODE_ALLOCATE_MATRIX
(
ResiduÆ
, 1,

291 
two_dim_block_cy˛ic
, (&
ResiduÆ
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

292 
A
->
su≥r
.
nodes
, 
twodA
->
grid
.
ønk
,

293 
A
->
mb
, A->
nb
, 
M
, 
N
, 0, 0,

294 
M
, 
N
, 
twodA
->
grid
.
krows
,ÅwodA->grid.
kcﬁs
,ÅwodA->grid.
rows
));

296 
	`PASTE_CODE_ALLOCATE_MATRIX
(
L
, 1,

297 
two_dim_block_cy˛ic
, (&
L
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

298 
A
->
su≥r
.
nodes
, 
twodA
->
grid
.
ønk
,

299 
A
->
mb
, A->
nb
, 
M
, M, 0, 0,

300 
M
, M, 
twodA
->
grid
.
krows
,ÅwodA->grid.
kcﬁs
,ÅwodA->grid.
rows
));

303 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
, 
A‹ig
, (
∑r£c_tûed_m©rix_dc_t
 *)&
ResiduÆ
 );

306 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 0., (
∑r£c_tûed_m©rix_dc_t
 *)&
L
);

308 
subA
 = 
	`tûed_m©rix_subm©rix
–
A
, 0, 0, 
M
, M );

309 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaLowî
, 
subA
, (
∑r£c_tûed_m©rix_dc_t
 *)&
L
 );

310 
	`‰ì
(
subA
);

313 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaNoTøns
, dplasmaNoTrans,

314 -1.0, (
∑r£c_tûed_m©rix_dc_t
 *)&
L
, 
Q
,

315 1.0, (
∑r£c_tûed_m©rix_dc_t
 *)&
ResiduÆ
);

318 
	`∑r£c_d©a_‰ì
(
L
.
m©
);

319 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
L
);

321 
Rn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
ResiduÆ
);

322 
An‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
A‹ig
);

324 
ªsu…
 = 
Rn‹m
 / ( 
An‹m
 * 
möMN
 * 
ïs
);

326 i‡–
loud
 ) {

327 
	`¥ötf
("============\n");

328 
	`¥ötf
("CheckingÅhe LQ Factorization \n");

329 
	`¥ötf
("-- ||A-LQ||_oo/(||A||_oo.M.ïsË%ê\n", 
ªsu…
 );

332 i‡–
	`i¢™
(
ªsu…
Ë|| 
	`isöf
(result) || (result > 60.0) ) {

333 i‡–
loud
 ) 
	`¥ötf
("-- Factorization is suspicious ! \n");

334 
öfo_Á˘‹iz©i⁄
 = 1;

337 i‡–
loud
 ) 
	`¥ötf
("-- Factorization is CORRECT ! \n");

338 
öfo_Á˘‹iz©i⁄
 = 0;

341 
	`∑r£c_d©a_‰ì
(
ResiduÆ
.
m©
);

342 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
ResiduÆ
);

343  
öfo_Á˘‹iz©i⁄
;

344 
	}
}

346 
	$check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

347 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

348 
∑r£c_tûed_m©rix_dc_t
 *
dcB
,

349 
∑r£c_tûed_m©rix_dc_t
 *
dcX
 )

351 
∑r£c_tûed_m©rix_dc_t
 *
subB
;

352 
öfo_sﬁuti⁄
;

353 
Rn‹m
 = 0.0;

354 
An‹m
 = 0.0;

355 
Bn‹m
 = 0.0;

356 
Xn‹m
, 
ªsu…
;

357 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

359 
subB
 = 
	`tûed_m©rix_subm©rix
–
dcB
, 0, 0, 
dcA
->
m
, dcB->
n
 );

361 
An‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcA
);

362 
Bn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
subB
);

363 
Xn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcX
);

366 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaNoTøns
, d∂asmaNoTøns, 1.0, 
dcA
, 
dcX
, -1.0, 
subB
);

369 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaC⁄jTøns
, 
d∂asmaNoTøns
,

370 1.0, 
dcA
, 
subB
, 0., 
dcX
 );

372 
Rn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcX
 );

373 
	`‰ì
(
subB
);

375 
ªsu…
 = 
Rn‹m
 / ( ( 
An‹m
 * 
Xn‹m
 + 
Bn‹m
 ) * 
dcA
->
m
 * 
ïs
 ) ;

377 i‡–
loud
 > 2 ) {

378 
	`¥ötf
("============\n");

379 
	`¥ötf
("CheckingÅhe Residual ofÅhe solution \n");

380 i‡–
loud
 > 3 )

381 
	`¥ötf
( "-- ||A||_oo = %e, ||X||_oo = %e, ||B||_oo= %e, ||A X - B||_oo = %e\n",

382 
An‹m
, 
Xn‹m
, 
Bn‹m
, 
Rn‹m
 );

384 
	`¥ötf
("-- ||Ax-B||_oo/((||A||_oo||x||_oo+||B||_oo).M.ïsË%ê\n", 
ªsu…
);

387 i‡–
	`i¢™
(
Xn‹m
Ë|| 
	`isöf
(Xn‹mË|| i¢™(
ªsu…
) || isinf(result) || (result > 60.0) ) {

388 if–
loud
 ) 
	`¥ötf
("-- Solution is suspicious ! \n");

389 
öfo_sﬁuti⁄
 = 1;

392 if–
loud
 ) 
	`¥ötf
("-- Solution is CORRECT ! \n");

393 
öfo_sﬁuti⁄
 = 0;

396  
öfo_sﬁuti⁄
;

397 
	}
}

	@testing_zgemm.c

10 
	~"comm⁄.h
"

11 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

13 
check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

14 
d∂asma_íum_t
 
å™sA
, d∂asma_íum_à
å™sB
,

15 
d∂asma_com∂ex64_t
 
Æpha
, 
Am
, 
An
, 
A£ed
,

16 
Bm
, 
Bn
, 
B£ed
,

17 
d∂asma_com∂ex64_t
 
bëa
, 
M
, 
N
, 
C£ed
,

18 
two_dim_block_cy˛ic_t
 *
dcCföÆ
 );

20 
	$maö
(
¨gc
, ** 
¨gv
)

22 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

23 
ù¨am
[
IPARAM_SIZEOF
];

24 
öfo_sﬁuti⁄
 = 0;

25 
A£ed
 = 3872;

26 
B£ed
 = 4674;

27 
C£ed
 = 2873;

28 
tA
 = 
d∂asmaNoTøns
;

29 
tB
 = 
d∂asmaNoTøns
;

30 
d∂asma_com∂ex64_t
 
Æpha
 = 0.51;

31 
d∂asma_com∂ex64_t
 
bëa
 = -0.42;

33 #i‡
	`deföed
(
PRECISION_z
Ë|| deföed(
PRECISION_c
)

34 
Æpha
 -
I
 * 0.32;

35 
bëa
 +
I
 * 0.21;

39 
	`ù¨am_deÁu…_gemm
(
ù¨am
);

40 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 0, 200, 200);

43 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

44 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

46 
	`PASTE_CODE_FLOPS
(
FLOPS_ZGEMM
, ((
DagDoubÀ_t
)
M
,(DagDoubÀ_t)
N
,(DagDoubÀ_t)
K
));

48 
LDA
 = 
	`max
(LDA, max(
M
, 
K
));

49 
LDB
 = 
	`max
(LDB, max(
K
, 
N
));

50 
LDC
 = 
	`max
(LDC, 
M
);

52 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC
, 1,

53 
two_dim_block_cy˛ic
, (&
dcC
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

54 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

55 
M
, 
N
, 
KP
, 
KQ
, 
P
));

58 if(!
check
)

60 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

61 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

62 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
K
, 0, 0,

63 
M
, 
K
, 
KP
, 
KQ
, 
P
));

64 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB
, 1,

65 
two_dim_block_cy˛ic
, (&
dcB
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

66 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
N
, 0, 0,

67 
K
, 
N
, 
KP
, 
KQ
, 
P
));

70 if(
loud
 > 2Ë
	`¥ötf
("+++ Generate matrices ... ");

71 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
A£ed
);

72 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, 
B£ed
);

73 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
, 
C£ed
);

74 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

76 
t
;

77 
t
 = 0;Å < 
ƒuns
;Å++) {

78 
	`∑r£c_devi˚s_ªÀa£_mem‹y
();

80 
	`PASTE_CODE_ENQUEUE_PROGRESS_DESTRUCT_KERNEL
(
∑r£c
, 
zgemm
,

81 (
tA
, 
tB
, 
Æpha
,

82 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

83 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

84 
bëa
,

85 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
),

86 
	`d∂asma_zgemm_De°ru˘
–
PARSEC_zgemm
 ));

88 
	`∑r£c_devi˚s_ª£t_lﬂd
(
∑r£c
);

91 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

92 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

93 
	`∑r£c_d©a_‰ì
(
dcB
.
m©
);

94 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcB
);

97 
Am
, 
An
, 
Bm
, 
Bn
;

98 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC2
, 
check
,

99 
two_dim_block_cy˛ic
, (&
dcC2
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

100 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

101 
M
, 
N
, 
KP
, 
KQ
, 
P
));

103 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC2
, 
C£ed
);

105 #i‡
	`deföed
(
PRECISION_z
Ë|| deföed(
PRECISION_c
)

106 
tA
=0;ÅA<3;ÅA++) {

107 
tB
=0;ÅB<3;ÅB++) {

109 
tA
=0;ÅA<2;ÅA++) {

110 
tB
=0;ÅB<2;ÅB++) {

112 i‡–
å™s
[
tA
] =
d∂asmaNoTøns
 ) {

113 
Am
 = 
M
; 
An
 = 
K
;

115 
Am
 = 
K
; 
An
 = 
M
;

117 i‡–
å™s
[
tB
] =
d∂asmaNoTøns
 ) {

118 
Bm
 = 
K
; 
Bn
 = 
N
;

120 
Bm
 = 
N
; 
Bn
 = 
K
;

122 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

123 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

124 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, LDA, 0, 0,

125 
Am
, 
An
, 
KP
, 
KQ
, 
P
));

126 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB
, 1,

127 
two_dim_block_cy˛ic
, (&
dcB
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

128 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, LDB, 0, 0,

129 
Bm
, 
Bn
, 
KP
, 
KQ
, 
P
));

131 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
A£ed
);

132 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, 
B£ed
);

134 i‡–
ønk
 == 0 ) {

135 
	`¥ötf
("***************************************************\n");

136 
	`¥ötf
(" ----- TESTING ZGEMM (%s, %s) -------- \n",

137 
å™s°r
[
tA
],Åøns°r[
tB
]);

141 if(
loud
Ë
	`¥ötf
("Generate matrices ... ");

142 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

143 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC2
, (∑r£c_tûed_m©rix_dc_à*)&
dcC
 );

144 if(
loud
Ë
	`¥ötf
("Done\n");

147 if(
loud
Ë
	`¥ötf
("Compute ... ... ");

148 
	`PASTE_CODE_ENQUEUE_PROGRESS_DESTRUCT_KERNEL
(
∑r£c
, 
zgemm
,

149 (
å™s
[
tA
],Åøns[
tB
],

150 (
d∂asma_com∂ex64_t
)
Æpha
,

151 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

152 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

153 (
d∂asma_com∂ex64_t
)
bëa
,

154 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
),

155 
	`d∂asma_zgemm_De°ru˘
–
PARSEC_zgemm
 ));

157 if(
loud
Ë
	`¥ötf
("Done\n");

159 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

160 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

161 
	`∑r£c_d©a_‰ì
(
dcB
.
m©
);

162 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcB
);

165 
öfo_sﬁuti⁄
 = 
	`check_sﬁuti⁄
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

166 
å™s
[
tA
],Åøns[
tB
],

167 
Æpha
, 
Am
, 
An
, 
A£ed
,

168 
Bm
, 
Bn
, 
B£ed
,

169 
bëa
, 
M
, 
N
, 
C£ed
,

170 &
dcC
);

171 i‡–
ønk
 == 0 ) {

172 i‡(
öfo_sﬁuti⁄
 == 0) {

173 
	`¥ötf
(" ---- TESTING ZGEMM (%s, %s) ...... PASSED !\n",

174 
å™s°r
[
tA
],Åøns°r[
tB
]);

177 
	`¥ötf
(" ---- TESTING ZGEMM (%s, %s) ... FAILED !\n",

178 
å™s°r
[
tA
],Åøns°r[
tB
]);

180 
	`¥ötf
("***************************************************\n");

184 
	`∑r£c_d©a_‰ì
(
dcC2
.
m©
);

185 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcC2
);

188 
	`∑r£c_d©a_‰ì
(
dcC
.
m©
);

189 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcC
);

191 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

193  
öfo_sﬁuti⁄
;

194 
	}
}

203 
	$check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

204 
d∂asma_íum_t
 
å™sA
, d∂asma_íum_à
å™sB
,

205 
d∂asma_com∂ex64_t
 
Æpha
, 
Am
, 
An
, 
A£ed
,

206 
Bm
, 
Bn
, 
B£ed
,

207 
d∂asma_com∂ex64_t
 
bëa
, 
M
, 
N
, 
C£ed
,

208 
two_dim_block_cy˛ic_t
 *
dcCföÆ
 )

210 
öfo_sﬁuti⁄
 = 1;

211 
An‹m
, 
Bn‹m
, 
Cöôn‹m
, 
Cd∂asm™‹m
, 
Cœ∑ckn‹m
, 
Rn‹m
;

212 
ïs
, 
ªsu…
;

213 
K
 = ( 
å™sA
 =
d∂asmaNoTøns
 ) ? 
An
 : 
Am
 ;

214 
MB
 = 
dcCföÆ
->
su≥r
.
mb
;

215 
NB
 = 
dcCföÆ
->
su≥r
.
nb
;

216 
LDA
 = 
Am
;

217 
LDB
 = 
Bm
;

218 
LDC
 = 
M
;

219 
ønk
 = 
dcCföÆ
->
su≥r
.su≥r.
myønk
;

221 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

223 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

224 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_L≠ack
,

225 1, 
ønk
, 
MB
, 
NB
, 
LDA
, 
An
, 0, 0,

226 
Am
, 
An
, 1, 1, 1));

227 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB
, 1,

228 
two_dim_block_cy˛ic
, (&
dcB
, 
m©rix_Com∂exDoubÀ
, 
m©rix_L≠ack
,

229 1, 
ønk
, 
MB
, 
NB
, 
LDB
, 
Bn
, 0, 0,

230 
Bm
, 
Bn
, 1, 1, 1));

231 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC
, 1,

232 
two_dim_block_cy˛ic
, (&
dcC
, 
m©rix_Com∂exDoubÀ
, 
m©rix_L≠ack
,

233 1, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

234 
M
, 
N
, 1, 1, 1));

236 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
A£ed
 );

237 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, 
B£ed
 );

238 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
, 
C£ed
 );

240 
An‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcA
 );

241 
Bn‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcB
 );

242 
Cöôn‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcC
 );

243 
Cd∂asm™‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)
dcCföÆ
 );

245 i‡–
ønk
 == 0 ) {

246 
	`cbœs_zgemm
(
CbœsCﬁMaj‹
,

247 (
CBLAS_TRANSPOSE
)
å™sA
, (CBLAS_TRANSPOSE)
å™sB
,

248 
M
, 
N
, 
K
,

249 
	`CBLAS_SADDR
(
Æpha
), 
dcA
.
m©
, 
LDA
,

250 
dcB
.
m©
, 
LDB
,

251 
	`CBLAS_SADDR
(
bëa
), 
dcC
.
m©
, 
LDC
 );

254 
Cœ∑ckn‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcC
 );

256 
	`d∂asma_zgódd
–
∑r£c
, 
d∂asmaNoTøns
, -1.0, (
∑r£c_tûed_m©rix_dc_t
*)
dcCföÆ
,

257 1.0, (
∑r£c_tûed_m©rix_dc_t
*)&
dcC
 );

259 
Rn‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaMaxN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcC
);

261 i‡–
ønk
 == 0 ) {

262 i‡–
loud
 > 2 ) {

263 
	`¥ötf
(" ||A||_inf = %e, ||B||_inf = %e, ||C||_inf = %e\n"

265 
An‹m
, 
Bn‹m
, 
Cöôn‹m
, 
Cœ∑ckn‹m
, 
Cd∂asm™‹m
, 
Rn‹m
);

268 
ªsu…
 = 
Rn‹m
 / ((
An‹m
 + 
Bn‹m
 + 
Cöôn‹m
Ë* 
	`max
(
M
,
N
Ë* 
ïs
);

269 i‡–
	`isöf
(
Cœ∑ckn‹m
Ë|| isöf(
Cd∂asm™‹m
) ||

270 
	`i¢™
(
ªsu…
Ë|| 
	`isöf
(result) || (result > 10.0) ) {

271 
öfo_sﬁuti⁄
 = 1;

274 
öfo_sﬁuti⁄
 = 0;

278 #i‡
	`deföed
(
PARSEC_HAVE_MPI
)

279 
	`MPI_Bˇ°
(&
öfo_sﬁuti⁄
, 1, 
MPI_INT
, 0, 
MPI_COMM_WORLD
);

280 #ñi‡
	`deföed
(
PARSEC_HAVE_LCI
)

281 
	`lc_bˇ°
(&
öfo_sﬁuti⁄
, (), 0, *
lci_globÆ_ï
);

284 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

285 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

286 
	`∑r£c_d©a_‰ì
(
dcB
.
m©
);

287 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcB
);

288 
	`∑r£c_d©a_‰ì
(
dcC
.
m©
);

289 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcC
);

291  
öfo_sﬁuti⁄
;

292 
	}
}

	@testing_zgemm_dtd.c

10 
	~"comm⁄.h
"

11 
	~"d∂asma/ty≥s.h
"

12 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

13 
	~"∑r£c/öãrÁ˚s/su≥rsˇœr/ö£π_fun˘i⁄.h
"

15 
	eªgi⁄s
 {

16 
	mTILE_FULL
,

19 
check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

20 
d∂asma_íum_t
 
å™sA
, d∂asma_íum_à
å™sB
,

21 
d∂asma_com∂ex64_t
 
Æpha
, 
Am
, 
An
, 
A£ed
,

22 
Bm
, 
Bn
, 
B£ed
,

23 
d∂asma_com∂ex64_t
 
bëa
, 
M
, 
N
, 
C£ed
,

24 
two_dim_block_cy˛ic_t
 *
dcCföÆ
 );

27 
	$∑r£c_c‹e_gemm
(
∑r£c_executi⁄_°ªam_t
 *
es
, 
∑r£c_èsk_t
 *
this_èsk
)

29 ()
es
;

30 
å™sA
;

31 
å™sB
;

32 
m
;

33 
n
;

34 
k
;

35 
d∂asma_com∂ex64_t
 
Æpha
;

36 
d∂asma_com∂ex64_t
 *
A
;

37 
lda
;

38 
d∂asma_com∂ex64_t
 *
B
;

39 
ldb
;

40 
d∂asma_com∂ex64_t
 
bëa
;

41 
d∂asma_com∂ex64_t
 *
C
;

42 
ldc
;

44 
	`∑r£c_dtd_u≈ack_¨gs
(
this_èsk
, &
å™sA
, &
å™sB
, &
m
, &
n
, &
k
, &
Æpha
, &
A
,

45 &
lda
, &
B
, &
ldb
, &
bëa
, &
C
, &
ldc
);

47 
	`CORE_zgemm
(
å™sA
, 
å™sB
, 
m
, 
n
, 
k
,

48 
Æpha
, 
A
, 
lda
,

49 
B
, 
ldb
,

50 
bëa
, 
C
, 
ldc
);

52  
PARSEC_HOOK_RETURN_DONE
;

53 
	}
}

55 
	$maö
(
¨gc
, ** 
¨gv
)

57 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

58 
ù¨am
[
IPARAM_SIZEOF
];

59 
öfo_sﬁuti⁄
 = 0;

60 
A£ed
 = 3872;

61 
B£ed
 = 4674;

62 
C£ed
 = 2873;

63 
tA
 = 
d∂asmaNoTøns
;

64 
tB
 = 
d∂asmaNoTøns
;

65 
d∂asma_com∂ex64_t
 
Æpha
 = 0.51;

66 
d∂asma_com∂ex64_t
 
bëa
 = -0.42;

68 #i‡
	`deföed
(
PRECISION_z
Ë|| deföed(
PRECISION_c
)

69 
Æpha
 -
I
 * 0.32;

70 
bëa
 +
I
 * 0.21;

74 
	`ù¨am_deÁu…_gemm
(
ù¨am
);

75 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 0, 200, 200);

76 
ù¨am
[
IPARAM_NGPUS
] = 
DPLASMA_ERR_NOT_SUPPORTED
;

79 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

80 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

82 
	`PASTE_CODE_FLOPS
(
FLOPS_ZGEMM
, ((
DagDoubÀ_t
)
M
,(DagDoubÀ_t)
N
,(DagDoubÀ_t)
K
));

84 
LDA
 = 
	`max
(LDA, max(
M
, 
K
));

85 
LDB
 = 
	`max
(LDB, max(
K
, 
N
));

86 
LDC
 = 
	`max
(LDC, 
M
);

88 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC
, 1,

89 
two_dim_block_cy˛ic
, (&
dcC
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

90 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

91 
M
, 
N
, 
KP
, 
KQ
, 
P
));

94 
two_dim_block_cy˛ic_t
 *
__dcC
 = &
dcC
;

95 
	`∑r£c_dtd_d©a_cﬁÀ˘i⁄_öô
((
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcC
);

98 if(!
check
)

100 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

101 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

102 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
K
, 0, 0,

103 
M
, 
K
, 
KP
, 
KQ
, 
P
));

106 
two_dim_block_cy˛ic_t
 *
__dcA
 = &
dcA
;

107 
	`∑r£c_dtd_d©a_cﬁÀ˘i⁄_öô
((
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcA
);

109 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB
, 1,

110 
two_dim_block_cy˛ic
, (&
dcB
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

111 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
N
, 0, 0,

112 
K
, 
N
, 
KP
, 
KQ
, 
P
));

115 
two_dim_block_cy˛ic_t
 *
__dcB
 = &
dcB
;

116 
	`∑r£c_dtd_d©a_cﬁÀ˘i⁄_öô
((
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcB
);

119 
∑r£c_èskpoﬁ_t
 *
dtd_ç
 = 
	`∑r£c_dtd_èskpoﬁ_√w
();

122 
	`d∂asma_add2¨ía_tûe
–&
∑r£c_dtd_¨ías_d©©y≥s
[
TILE_FULL
],

123 
dcA
.
su≥r
.
mb
*dcA.su≥r.
nb
*(
d∂asma_com∂ex64_t
),

124 
PARSEC_ARENA_ALIGNMENT_SSE
,

125 
∑r£c_d©©y≥_doubÀ_com∂ex_t
, 
dcA
.
su≥r
.
mb
 );

128 if(
loud
 > 2Ë
	`¥ötf
("+++ Generate matrices ... ");

129 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
A£ed
);

130 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, 
B£ed
);

131 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
, 
C£ed
);

132 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

134 
m
, 
n
, 
k
;

135 
ldam
, 
ldak
, 
ldbn
, 
ldbk
, 
ldcm
;

136 
ãmpmm
, 
ãm≤n
, 
ãmpkn
;

138 
d∂asma_com∂ex64_t
 
zbëa
;

139 
d∂asma_com∂ex64_t
 
z⁄e
 = (dplasma_complex64_t)1.0;

141 
	`∑r£c_c⁄ãxt_add_èskpoﬁ
–
∑r£c
, 
dtd_ç
 );

143 
	`SYNC_TIME_START
();

148 
	`∑r£c_c⁄ãxt_°¨t
(
∑r£c
);

150  
m
 = 0; m < 
dcC
.
su≥r
.
mt
; m++ ) {

151 
ãmpmm
 = 
m
 =
dcC
.
su≥r
.
mt
-1 ? dcC.su≥r.m-m*dcC.su≥r.
mb
 : dcC.super.mb;

152 
ldcm
 = 
	`BLKLDD
(&
dcC
.
su≥r
, 
m
);

153  
n
 = 0;Ç < 
dcC
.
su≥r
.
¡
;Ç++ ) {

154 
ãm≤n
 = 
n
 =
dcC
.
su≥r
.
¡
-1 ? dcC.su≥r.n-n*dcC.su≥r.
nb
 : dcC.super.nb;

158 if–
tA
 =
d∂asmaNoTøns
 ) {

159 
ldam
 = 
	`BLKLDD
(&
dcA
.
su≥r
, 
m
);

160 if–
tB
 =
d∂asmaNoTøns
 ) {

161  
k
 = 0; k < 
dcA
.
su≥r
.
¡
; k++ ) {

162 
ãmpkn
 = 
k
 =
dcA
.
su≥r
.
¡
-1 ? dcA.su≥r.
n
-k*dcA.su≥r.
nb
 : dcA.super.nb;

163 
ldbk
 = 
	`BLKLDD
(&
dcB
.
su≥r
, 
k
);

164 
zbëa
 = 
k
 =0 ? 
bëa
 : 
z⁄e
;

166 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
–
dtd_ç
, &
∑r£c_c‹e_gemm
, 0, "Gemm",

167 (), &
tA
, 
VALUE
,

168 (), &
tB
, 
VALUE
,

169 (), &
ãmpmm
, 
VALUE
,

170 (), &
ãm≤n
, 
VALUE
,

171 (), &
ãmpkn
, 
VALUE
,

172 (
d∂asma_com∂ex64_t
), &
Æpha
, 
VALUE
,

173 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
m
, 
k
), 
INPUT
 | 
TILE_FULL
,

174 (), &
ldam
, 
VALUE
,

175 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
B
, 
k
, 
n
), 
INPUT
 | 
TILE_FULL
,

176 (), &
ldbk
, 
VALUE
,

177 (
d∂asma_com∂ex64_t
), &
zbëa
, 
VALUE
,

178 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
C
, 
m
, 
n
), 
INOUT
 | 
TILE_FULL
 | 
AFFINITY
,

179 (), &
ldcm
, 
VALUE
,

180 
PARSEC_DTD_ARG_END
 );

187 
ldbn
 = 
	`BLKLDD
(&
dcB
.
su≥r
, 
n
);

188  
k
 = 0; k < 
dcA
.
su≥r
.
¡
; k++ ) {

189 
ãmpkn
 = 
k
 =
dcA
.
su≥r
.
¡
-1 ? dcA.su≥r.
n
-k*dcA.su≥r.
nb
 : dcA.super.nb;

190 
zbëa
 = 
k
 =0 ? 
bëa
 : 
z⁄e
;

192 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
–
dtd_ç
, &
∑r£c_c‹e_gemm
, 0, "Gemm",

193 (), &
tA
, 
VALUE
,

194 (), &
tB
, 
VALUE
,

195 (), &
ãmpmm
, 
VALUE
,

196 (), &
ãm≤n
, 
VALUE
,

197 (), &
ãmpkn
, 
VALUE
,

198 (
d∂asma_com∂ex64_t
), &
Æpha
, 
VALUE
,

199 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
m
, 
k
), 
INPUT
 | 
TILE_FULL
,

200 (), &
ldam
, 
VALUE
,

201 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
B
, 
n
, 
k
), 
INPUT
 | 
TILE_FULL
,

202 (), &
ldbn
, 
VALUE
,

203 (
d∂asma_com∂ex64_t
), &
zbëa
, 
VALUE
,

204 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
C
, 
m
, 
n
), 
INOUT
 | 
TILE_FULL
 | 
AFFINITY
,

205 (), &
ldcm
, 
VALUE
,

206 
PARSEC_DTD_ARG_END
 );

214 if–
tB
 =
d∂asmaNoTøns
 ) {

215  
k
 = 0; k < 
dcA
.
su≥r
.
mt
; k++ ) {

216 
ldak
 = 
	`BLKLDD
(&
dcA
.
su≥r
, 
k
);

217 
ldbk
 = 
	`BLKLDD
(&
dcB
.
su≥r
, 
k
);

218 
zbëa
 = 
k
 =0 ? 
bëa
 : 
z⁄e
;

220 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
–
dtd_ç
, &
∑r£c_c‹e_gemm
, 0, "Gemm",

221 (), &
tA
, 
VALUE
,

222 (), &
tB
, 
VALUE
,

223 (), &
ãmpmm
, 
VALUE
,

224 (), &
ãm≤n
, 
VALUE
,

225 (), &
ãmpkn
, 
VALUE
,

226 (
d∂asma_com∂ex64_t
), &
Æpha
, 
VALUE
,

227 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, 
m
 ), 
INPUT
 | 
TILE_FULL
,

228 (), &
ldak
, 
VALUE
,

229 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
B
, 
k
, 
n
), 
INPUT
 | 
TILE_FULL
,

230 (), &
ldbk
, 
VALUE
,

231 (
d∂asma_com∂ex64_t
), &
zbëa
, 
VALUE
,

232 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
C
, 
m
, 
n
), 
INOUT
 | 
TILE_FULL
 | 
AFFINITY
,

233 (), &
ldcm
, 
VALUE
,

234 
PARSEC_DTD_ARG_END
 );

241 
ldbn
 = 
	`BLKLDD
(&
dcB
.
su≥r
, 
n
);

242  
k
 = 0; k < 
dcA
.
su≥r
.
mt
; k++ ) {

243 
ldak
 = 
	`BLKLDD
(&
dcA
.
su≥r
, 
k
);

244 
zbëa
 = 
k
 =0 ? 
bëa
 : 
z⁄e
;

246 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
–
dtd_ç
, &
∑r£c_c‹e_gemm
, 0, "Gemm",

247 (), &
tA
, 
VALUE
,

248 (), &
tB
, 
VALUE
,

249 (), &
ãmpmm
, 
VALUE
,

250 (), &
ãm≤n
, 
VALUE
,

251 (), &
ãmpkn
, 
VALUE
,

252 (
d∂asma_com∂ex64_t
), &
Æpha
, 
VALUE
,

253 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, 
m
), 
INPUT
 | 
TILE_FULL
,

254 (), &
ldak
, 
VALUE
,

255 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
B
, 
n
, 
k
), 
INPUT
 | 
TILE_FULL
,

256 (), &
ldbn
, 
VALUE
,

257 (
d∂asma_com∂ex64_t
), &
zbëa
, 
VALUE
,

258 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
C
, 
m
, 
n
), 
INOUT
 | 
TILE_FULL
 | 
AFFINITY
,

259 (), &
ldcm
, 
VALUE
,

260 
PARSEC_DTD_ARG_END
 );

267 
	`∑r£c_dtd_d©a_Êush_Æl
–
dtd_ç
, (
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcA
 );

268 
	`∑r£c_dtd_d©a_Êush_Æl
–
dtd_ç
, (
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcB
 );

269 
	`∑r£c_dtd_d©a_Êush_Æl
–
dtd_ç
, (
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcC
 );

272 
	`∑r£c_dtd_èskpoﬁ_waô
–
dtd_ç
 );

275 
	`∑r£c_c⁄ãxt_waô
–
∑r£c
 );

279 
	`SYNC_TIME_PRINT
(
ønk
, ("\tPxQ= %3d %-3d NB= %4d N= %7d : %14f gflops\n",

280 
P
, 
Q
, 
NB
, 
N
,

281 
gÊ›s
=(
Ê›s
/1e9)/
sync_time_ñ≠£d
));

284 
	`∑r£c_èskpoﬁ_‰ì
–
dtd_ç
 );

287 
	`d∂asma_m©rix_dñ2¨ía
–&
∑r£c_dtd_¨ías_d©©y≥s
[0] );

288 
	`∑r£c_dtd_d©a_cﬁÀ˘i⁄_föi
–(
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcA
 );

290 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

291 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

293 
	`∑r£c_dtd_d©a_cﬁÀ˘i⁄_föi
–(
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcB
 );

294 
	`∑r£c_d©a_‰ì
(
dcB
.
m©
);

295 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcB
);

297 
Am
, 
An
, 
Bm
, 
Bn
;

298 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC2
, 
check
,

299 
two_dim_block_cy˛ic
, (&
dcC2
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

300 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

301 
M
, 
N
, 
KP
, 
KQ
, 
P
));

303 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC2
, 
C£ed
);

305 #i‡
	`deföed
(
PRECISION_z
Ë|| deföed(
PRECISION_c
)

306 
tA
=0;ÅA<3;ÅA++) {

307 
tB
=0;ÅB<3;ÅB++) {

309 
tA
=0;ÅA<2;ÅA++) {

310 
tB
=0;ÅB<2;ÅB++) {

314 
∑r£c_èskpoﬁ_t
 *
dtd_ç
 = 
	`∑r£c_dtd_èskpoﬁ_√w
();

316 i‡–
å™s
[
tA
] =
d∂asmaNoTøns
 ) {

317 
Am
 = 
M
; 
An
 = 
K
;

319 
Am
 = 
K
; 
An
 = 
M
;

321 i‡–
å™s
[
tB
] =
d∂asmaNoTøns
 ) {

322 
Bm
 = 
K
; 
Bn
 = 
N
;

324 
Bm
 = 
N
; 
Bn
 = 
K
;

327 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

328 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

329 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, LDA, 0, 0,

330 
Am
, 
An
, 
KP
, 
KQ
, 
P
));

333 
two_dim_block_cy˛ic_t
 *
__dcA
 = &
dcA
;

334 
	`∑r£c_dtd_d©a_cﬁÀ˘i⁄_öô
((
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcA
);

336 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB
, 1,

337 
two_dim_block_cy˛ic
, (&
dcB
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

338 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, LDB, 0, 0,

339 
Bm
, 
Bn
, 
KP
, 
KQ
, 
P
));

342 
two_dim_block_cy˛ic_t
 *
__dcB
 = &
dcB
;

343 
	`∑r£c_dtd_d©a_cﬁÀ˘i⁄_öô
((
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcB
);

347 
	`d∂asma_add2¨ía_tûe
–&
∑r£c_dtd_¨ías_d©©y≥s
[
TILE_FULL
],

348 
dcA
.
su≥r
.
mb
*dcA.su≥r.
nb
*(
d∂asma_com∂ex64_t
),

349 
PARSEC_ARENA_ALIGNMENT_SSE
,

350 
∑r£c_d©©y≥_doubÀ_com∂ex_t
, 
dcA
.
su≥r
.
mb
 );

352 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
A£ed
);

353 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, 
B£ed
);

355 i‡–
ønk
 == 0 ) {

356 
	`¥ötf
("***************************************************\n");

357 
	`¥ötf
(" ----- TESTING ZGEMM (%s, %s) -------- \n",

358 
å™s°r
[
tA
],Åøns°r[
tB
]);

362 if(
loud
Ë
	`¥ötf
("Generate matrices ... ");

363 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

364 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC2
, (∑r£c_tûed_m©rix_dc_à*)&
dcC
 );

365 if(
loud
Ë
	`¥ötf
("Done\n");

368 if(
loud
Ë
	`¥ötf
("Compute ... ... ");

370 
m
, 
n
, 
k
;

371 
ldam
, 
ldak
, 
ldbn
, 
ldbk
, 
ldcm
;

372 
ãmpmm
, 
ãm≤n
, 
ãmpkn
, 
ãmpkm
;

374 
d∂asma_com∂ex64_t
 
zbëa
;

375 
d∂asma_com∂ex64_t
 
z⁄e
 = (dplasma_complex64_t)1.0;

378 
	`∑r£c_c⁄ãxt_add_èskpoﬁ
–
∑r£c
, 
dtd_ç
 );

380 
	`SYNC_TIME_START
();

385 
	`∑r£c_c⁄ãxt_°¨t
(
∑r£c
);

387  
m
 = 0; m < 
dcC
.
su≥r
.
mt
; m++ ) {

388 
ãmpmm
 = 
m
 =
dcC
.
su≥r
.
mt
-1 ? dcC.su≥r.m-m*dcC.su≥r.
mb
 : dcC.super.mb;

389 
ldcm
 = 
	`BLKLDD
(&
dcC
.
su≥r
, 
m
);

391  
n
 = 0;Ç < 
dcC
.
su≥r
.
¡
;Ç++ ) {

392 
ãm≤n
 = 
n
 =
dcC
.
su≥r
.
¡
-1 ? dcC.su≥r.n-n*dcC.su≥r.
nb
 : dcC.super.nb;

396 if–
å™s
[
tA
] =
d∂asmaNoTøns
 ) {

397 
ldam
 = 
	`BLKLDD
(&
dcA
.
su≥r
, 
m
);

399 if–
å™s
[
tB
] =
d∂asmaNoTøns
 ) {

400  
k
 = 0; k < 
dcA
.
su≥r
.
¡
; k++ ) {

401 
ãmpkn
 = 
k
 =
dcA
.
su≥r
.
¡
-1 ? dcA.su≥r.
n
-k*dcA.su≥r.
nb
 : dcA.super.nb;

402 
ldbk
 = 
	`BLKLDD
(&
dcB
.
su≥r
, 
k
);

403 
zbëa
 = 
k
 =0 ? 
bëa
 : 
z⁄e
;

405 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
–
dtd_ç
, &
∑r£c_c‹e_gemm
, 0, "Gemm",

406 (), &
å™s
[
tA
], 
VALUE
,

407 (), &
å™s
[
tB
], 
VALUE
,

408 (), &
ãmpmm
, 
VALUE
,

409 (), &
ãm≤n
, 
VALUE
,

410 (), &
ãmpkn
, 
VALUE
,

411 (
d∂asma_com∂ex64_t
), &
Æpha
, 
VALUE
,

412 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
m
, 
k
), 
INPUT
 | 
TILE_FULL
,

413 (), &
ldam
, 
VALUE
,

414 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
B
, 
k
, 
n
), 
INPUT
 | 
TILE_FULL
,

415 (), &
ldbk
, 
VALUE
,

416 (
d∂asma_com∂ex64_t
), &
zbëa
, 
VALUE
,

417 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
C
, 
m
, 
n
), 
INOUT
 | 
TILE_FULL
 | 
AFFINITY
,

418 (), &
ldcm
, 
VALUE
,

419 
PARSEC_DTD_ARG_END
 );

426 
ldbn
 = 
	`BLKLDD
(&
dcB
.
su≥r
, 
n
);

428  
k
 = 0; k < 
dcA
.
su≥r
.
¡
; k++ ) {

429 
ãmpkn
 = 
k
 =
dcA
.
su≥r
.
¡
-1 ? dcA.su≥r.
n
-k*dcA.su≥r.
nb
 : dcA.super.nb;

430 
zbëa
 = 
k
 =0 ? 
bëa
 : 
z⁄e
;

432 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
–
dtd_ç
, &
∑r£c_c‹e_gemm
, 0, "Gemm",

433 (), &
å™s
[
tA
], 
VALUE
,

434 (), &
å™s
[
tB
], 
VALUE
,

435 (), &
ãmpmm
, 
VALUE
,

436 (), &
ãm≤n
, 
VALUE
,

437 (), &
ãmpkn
, 
VALUE
,

438 (
d∂asma_com∂ex64_t
), &
Æpha
, 
VALUE
,

439 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
m
, 
k
), 
INPUT
 | 
TILE_FULL
,

440 (), &
ldam
, 
VALUE
,

441 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
B
, 
n
, 
k
), 
INPUT
 | 
TILE_FULL
,

442 (), &
ldbn
, 
VALUE
,

443 (
d∂asma_com∂ex64_t
), &
zbëa
, 
VALUE
,

444 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
C
, 
m
, 
n
), 
INOUT
 | 
TILE_FULL
 | 
AFFINITY
,

445 (), &
ldcm
, 
VALUE
,

446 
PARSEC_DTD_ARG_END
 );

454 if–
å™s
[
tB
] =
d∂asmaNoTøns
 ) {

455  
k
 = 0; k < 
dcA
.
su≥r
.
mt
; k++ ) {

456 
ãmpkm
 = 
k
 =
dcA
.
su≥r
.
mt
-1 ? dcA.su≥r.
m
-k*dcA.su≥r.
mb
 : dcA.super.mb;

457 
ldak
 = 
	`BLKLDD
(&
dcA
.
su≥r
, 
k
);

458 
ldbk
 = 
	`BLKLDD
(&
dcB
.
su≥r
, 
k
);

459 
zbëa
 = 
k
 =0 ? 
bëa
 : 
z⁄e
;

461 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
–
dtd_ç
, &
∑r£c_c‹e_gemm
, 0, "Gemm",

462 (), &
å™s
[
tA
], 
VALUE
,

463 (), &
å™s
[
tB
], 
VALUE
,

464 (), &
ãmpmm
, 
VALUE
,

465 (), &
ãm≤n
, 
VALUE
,

466 (), &
ãmpkm
, 
VALUE
,

467 (
d∂asma_com∂ex64_t
), &
Æpha
, 
VALUE
,

468 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, 
m
), 
INPUT
 | 
TILE_FULL
,

469 (), &
ldak
, 
VALUE
,

470 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
B
, 
k
, 
n
), 
INPUT
 | 
TILE_FULL
,

471 (), &
ldbk
, 
VALUE
,

472 (
d∂asma_com∂ex64_t
), &
zbëa
, 
VALUE
,

473 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
C
, 
m
, 
n
), 
INOUT
 | 
TILE_FULL
 | 
AFFINITY
,

474 (), &
ldcm
, 
VALUE
,

475 
PARSEC_DTD_ARG_END
 );

482 
ldbn
 = 
	`BLKLDD
(&
dcB
.
su≥r
, 
n
);

484  
k
 = 0; k < 
dcA
.
su≥r
.
mt
; k++ ) {

485 
ãmpkm
 = 
k
 =
dcA
.
su≥r
.
mt
-1 ? dcA.su≥r.
m
-k*dcA.su≥r.
mb
 : dcA.super.mb;

486 
ldak
 = 
	`BLKLDD
(&
dcA
.
su≥r
, 
k
);

487 
zbëa
 = 
k
 =0 ? 
bëa
 : 
z⁄e
;

489 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
–
dtd_ç
, &
∑r£c_c‹e_gemm
, 0, "Gemm",

490 (), &
å™s
[
tA
], 
VALUE
,

491 (), &
å™s
[
tB
], 
VALUE
,

492 (), &
ãmpmm
, 
VALUE
,

493 (), &
ãm≤n
, 
VALUE
,

494 (), &
ãmpkm
, 
VALUE
,

495 (
d∂asma_com∂ex64_t
), &
Æpha
, 
VALUE
,

496 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, 
m
), 
INPUT
 | 
TILE_FULL
,

497 (), &
ldak
, 
VALUE
,

498 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
B
, 
n
, 
k
), 
INPUT
 | 
TILE_FULL
,

499 (), &
ldbn
, 
VALUE
,

500 (
d∂asma_com∂ex64_t
), &
zbëa
, 
VALUE
,

501 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
C
, 
m
, 
n
), 
INOUT
 | 
TILE_FULL
 | 
AFFINITY
,

502 (), &
ldcm
, 
VALUE
,

503 
PARSEC_DTD_ARG_END
 );

510 
	`∑r£c_dtd_d©a_Êush_Æl
–
dtd_ç
, (
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcA
 );

511 
	`∑r£c_dtd_d©a_Êush_Æl
–
dtd_ç
, (
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcB
 );

512 
	`∑r£c_dtd_d©a_Êush_Æl
–
dtd_ç
, (
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcC
 );

515 
	`∑r£c_dtd_èskpoﬁ_waô
–
dtd_ç
 );

518 
	`∑r£c_c⁄ãxt_waô
–
∑r£c
 );

520 if(
loud
Ë
	`¥ötf
("Done\n");

525 
	`∑r£c_èskpoﬁ_‰ì
–
dtd_ç
 );

528 
	`d∂asma_m©rix_dñ2¨ía
–&
∑r£c_dtd_¨ías_d©©y≥s
[0] );

529 
	`∑r£c_dtd_d©a_cﬁÀ˘i⁄_föi
–(
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcA
 );

531 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

532 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

534 
	`∑r£c_dtd_d©a_cﬁÀ˘i⁄_föi
–(
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcB
 );

536 
	`∑r£c_d©a_‰ì
(
dcB
.
m©
);

537 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcB
);

540 
öfo_sﬁuti⁄
 = 
	`check_sﬁuti⁄
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

541 
å™s
[
tA
],Åøns[
tB
],

542 
Æpha
, 
Am
, 
An
, 
A£ed
,

543 
Bm
, 
Bn
, 
B£ed
,

544 
bëa
, 
M
, 
N
, 
C£ed
,

545 &
dcC
);

546 i‡–
ønk
 == 0 ) {

547 i‡(
öfo_sﬁuti⁄
 == 0) {

548 
	`¥ötf
(" ---- TESTING ZGEMM (%s, %s) ...... PASSED !\n",

549 
å™s°r
[
tA
],Åøns°r[
tB
]);

552 
	`¥ötf
(" ---- TESTING ZGEMM (%s, %s) ... FAILED !\n",

553 
å™s°r
[
tA
],Åøns°r[
tB
]);

555 
	`¥ötf
("***************************************************\n");

559 
	`∑r£c_d©a_‰ì
(
dcC2
.
m©
);

560 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcC2
);

564 
	`∑r£c_dtd_d©a_cﬁÀ˘i⁄_föi
–(
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcC
 );

566 
	`∑r£c_d©a_‰ì
(
dcC
.
m©
);

567 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcC
);

569 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

571  
öfo_sﬁuti⁄
;

572 
	}
}

581 
	$check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

582 
d∂asma_íum_t
 
å™sA
, d∂asma_íum_à
å™sB
,

583 
d∂asma_com∂ex64_t
 
Æpha
, 
Am
, 
An
, 
A£ed
,

584 
Bm
, 
Bn
, 
B£ed
,

585 
d∂asma_com∂ex64_t
 
bëa
, 
M
, 
N
, 
C£ed
,

586 
two_dim_block_cy˛ic_t
 *
dcCföÆ
 )

588 
öfo_sﬁuti⁄
 = 1;

589 
An‹m
, 
Bn‹m
, 
Cöôn‹m
, 
Cd∂asm™‹m
, 
Cœ∑ckn‹m
, 
Rn‹m
;

590 
ïs
, 
ªsu…
;

591 
K
 = ( 
å™sA
 =
d∂asmaNoTøns
 ) ? 
An
 : 
Am
 ;

592 
MB
 = 
dcCföÆ
->
su≥r
.
mb
;

593 
NB
 = 
dcCföÆ
->
su≥r
.
nb
;

594 
LDA
 = 
Am
;

595 
LDB
 = 
Bm
;

596 
LDC
 = 
M
;

597 
ønk
 = 
dcCföÆ
->
su≥r
.su≥r.
myønk
;

599 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

601 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

602 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_L≠ack
,

603 1, 
ønk
, 
MB
, 
NB
, 
LDA
, 
An
, 0, 0,

604 
Am
, 
An
, 1, 1, 1));

605 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB
, 1,

606 
two_dim_block_cy˛ic
, (&
dcB
, 
m©rix_Com∂exDoubÀ
, 
m©rix_L≠ack
,

607 1, 
ønk
, 
MB
, 
NB
, 
LDB
, 
Bn
, 0, 0,

608 
Bm
, 
Bn
, 1, 1, 1));

609 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC
, 1,

610 
two_dim_block_cy˛ic
, (&
dcC
, 
m©rix_Com∂exDoubÀ
, 
m©rix_L≠ack
,

611 1, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

612 
M
, 
N
, 1, 1, 1));

614 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
A£ed
 );

615 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, 
B£ed
 );

616 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
, 
C£ed
 );

618 
An‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcA
 );

619 
Bn‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcB
 );

620 
Cöôn‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcC
 );

621 
Cd∂asm™‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)
dcCföÆ
 );

623 i‡–
ønk
 == 0 ) {

624 
	`cbœs_zgemm
(
CbœsCﬁMaj‹
,

625 (
CBLAS_TRANSPOSE
)
å™sA
, (CBLAS_TRANSPOSE)
å™sB
,

626 
M
, 
N
, 
K
,

627 
	`CBLAS_SADDR
(
Æpha
), 
dcA
.
m©
, 
LDA
,

628 
dcB
.
m©
, 
LDB
,

629 
	`CBLAS_SADDR
(
bëa
), 
dcC
.
m©
, 
LDC
 );

632 
Cœ∑ckn‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcC
 );

634 
	`d∂asma_zgódd
–
∑r£c
, 
d∂asmaNoTøns
, -1.0, (
∑r£c_tûed_m©rix_dc_t
*)
dcCföÆ
,

635 1.0, (
∑r£c_tûed_m©rix_dc_t
*)&
dcC
 );

637 
Rn‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaMaxN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcC
);

639 i‡–
ønk
 == 0 ) {

640 i‡–
loud
 > 2 ) {

641 
	`¥ötf
(" ||A||_inf = %e, ||B||_inf = %e, ||C||_inf = %e\n"

643 
An‹m
, 
Bn‹m
, 
Cöôn‹m
, 
Cœ∑ckn‹m
, 
Cd∂asm™‹m
, 
Rn‹m
);

646 
ªsu…
 = 
Rn‹m
 / ((
An‹m
 + 
Bn‹m
 + 
Cöôn‹m
Ë* 
	`max
(
M
,
N
Ë* 
ïs
);

647 i‡–
	`isöf
(
Cœ∑ckn‹m
Ë|| isöf(
Cd∂asm™‹m
) ||

648 
	`i¢™
(
ªsu…
Ë|| 
	`isöf
(result) || (result > 10.0) ) {

649 
öfo_sﬁuti⁄
 = 1;

652 
öfo_sﬁuti⁄
 = 0;

656 #i‡
	`deföed
(
PARSEC_HAVE_MPI
)

657 
	`MPI_Bˇ°
(&
öfo_sﬁuti⁄
, 1, 
MPI_INT
, 0, 
MPI_COMM_WORLD
);

658 #ñi‡
	`deföed
(
PARSEC_HAVE_LCI
)

659 
	`lc_bˇ°
(&
öfo_sﬁuti⁄
, (), 0, *
lci_globÆ_ï
);

662 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

663 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

664 
	`∑r£c_d©a_‰ì
(
dcB
.
m©
);

665 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcB
);

666 
	`∑r£c_d©a_‰ì
(
dcC
.
m©
);

667 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcC
);

669  
öfo_sﬁuti⁄
;

670 
	}
}

	@testing_zgeqrf.c

10 
	~"comm⁄.h
"

11 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

13 
check_‹thog⁄Æôy
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

14 
∑r£c_tûed_m©rix_dc_t
 *
Q
);

15 
check_Á˘‹iz©i⁄
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

16 
∑r£c_tûed_m©rix_dc_t
 *
A‹ig
,

17 
∑r£c_tûed_m©rix_dc_t
 *
A
,

18 
∑r£c_tûed_m©rix_dc_t
 *
Q
);

19 
check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

20 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

21 
∑r£c_tûed_m©rix_dc_t
 *
dcB
,

22 
∑r£c_tûed_m©rix_dc_t
 *
dcX
 );

24 
	$maö
(
¨gc
, ** 
¨gv
)

26 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

27 
ù¨am
[
IPARAM_SIZEOF
];

28 
ªt
 = 0;

29 
PLASMA_íum
 
u∂o
 = 
PœsmaUµîLowî
;

32 
	`ù¨am_deÁu…_Á˘o
(
ù¨am
);

33 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 32, 200, 200);

34 
ù¨am
[
IPARAM_KP
] = 4;

35 
ù¨am
[
IPARAM_KQ
] = 1;

36 
ù¨am
[
IPARAM_LDA
] = -'m';

37 
ù¨am
[
IPARAM_LDB
] = -'m';

40 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

41 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

42 
	`PASTE_CODE_FLOPS
(
FLOPS_ZGEQRF
, ((
DagDoubÀ_t
)
M
, (DagDoubÀ_t)
N
));

44 
LDA
 = 
	`max
(
M
, LDA);

45 
LDB
 = 
	`max
(
M
, LDB);

48 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

49 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

50 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

51 
M
, 
N
, 
KP
, 
KQ
, 
P
));

52 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcT
, 1,

53 
two_dim_block_cy˛ic
, (&
dcT
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

54 
nodes
, 
ønk
, 
IB
, 
NB
, 
MT
*IB, 
N
, 0, 0,

55 
MT
*
IB
, 
N
, 
KP
, 
KQ
, 
P
));

56 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA0
, 
check
,

57 
two_dim_block_cy˛ic
, (&
dcA0
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

58 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

59 
M
, 
N
, 
KP
, 
KQ
, 
P
));

60 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcQ
, 
check
,

61 
two_dim_block_cy˛ic
, (&
dcQ
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

62 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

63 
M
, 
N
, 
KP
, 
KQ
, 
P
));

66 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB
, 
check
,

67 
two_dim_block_cy˛ic
, (&
dcB
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

68 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

69 
M
, 
NRHS
, 
KP
, 
KQ
, 
P
));

71 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcX
, 
check
,

72 
two_dim_block_cy˛ic
, (&
dcX
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

73 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

74 
M
, 
NRHS
, 
KP
, 
KQ
, 
P
));

76 
t
;

77 
t
 = 0;Å < 
ƒuns
;Å++) {

79 if(
loud
 > 3Ë
	`¥ötf
("+++ Generate matrices ... ");

80 
	`d∂asma_z∂tmg
–
∑r£c
, 
m©rix_öô
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
øndom_£ed
 );

82 if–
check
 && 
t
 =
ƒuns
-1 )

83 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

84 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, (∑r£c_tûed_m©rix_dc_à*)&
dcA0
 );

85 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 0., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcT
);

86 if(
loud
 > 3Ë
	`¥ötf
("Done\n");

88 
	`∑r£c_devi˚s_ªÀa£_mem‹y
();

90 if(
ù¨am
[
IPARAM_HNB
] !ù¨am[
IPARAM_NB
])

92 
	`SYNC_TIME_START
();

93 
∑r£c_èskpoﬁ_t
* 
PARSEC_zgeqrf
 = 
	`d∂asma_zgeqrf_New
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
,

94 (
∑r£c_tûed_m©rix_dc_t
*)&
dcT
 );

96 
	`d∂asma_zgeqrf_£åecursive
–
PARSEC_zgeqrf
, 
ù¨am
[
IPARAM_HNB
] );

97 
	`∑r£c_c⁄ãxt_add_èskpoﬁ
(
∑r£c
, 
PARSEC_zgeqrf
);

98 if–
loud
 > 2 ) 
	`SYNC_TIME_PRINT
(
ønk
, ( "zgeqrf\tDAG created\n"));

100 
	`PASTE_CODE_PROGRESS_KERNEL
(
∑r£c
, 
zgeqrf
);

101 
	`d∂asma_zgeqrf_De°ru˘
–
PARSEC_zgeqrf
 );

103 
	`∑r£c_èskpoﬁ_sync_ids
();

107 
	`PASTE_CODE_ENQUEUE_PROGRESS_DESTRUCT_KERNEL
(
∑r£c
, 
zgeqrf
,

108 ((
∑r£c_tûed_m©rix_dc_t
*)&
dcA
,

109 (
∑r£c_tûed_m©rix_dc_t
*)&
dcT
),

110 
	`d∂asma_zgeqrf_De°ru˘
–
PARSEC_zgeqrf
 ));

112 
	`∑r£c_devi˚s_ª£t_lﬂd
(
∑r£c
);

116 #i‡
	`deföed
(
PARSEC_SIM
)

118 
œrge°_simuœti⁄_d©e
 = 
	`∑r£c_gësimuœti⁄d©e
–
∑r£c
 );

119 i‡–
ønk
 == 0 ) {

120 
	`¥ötf
("zgeqrf simulation NP= %d NC= %d P= %d KP= %d MT= %d NT= %d : %d \n",

121 
ù¨am
[
IPARAM_NNODES
],

122 
ù¨am
[
IPARAM_NCORES
],

123 
ù¨am
[
IPARAM_P
],

124 
ù¨am
[
IPARAM_KP
],

125 
MT
, 
NT
,

126 
œrge°_simuœti⁄_d©e
);

130 if–
check
 ) {

131 i‡(
M
 >
N
) {

132 if(
loud
 > 2Ë
	`¥ötf
("+++ GenerateÅhe Q ...");

133 
	`d∂asma_zungqr
–
∑r£c
,

134 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

135 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcT
,

136 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
);

137 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

139 if(
loud
 > 2Ë
	`¥ötf
("+++ SolveÅhe system ...");

140 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
, 2354);

141 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

142 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
,

143 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
 );

144 
	`d∂asma_zgeqrs
–
∑r£c
,

145 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

146 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcT
,

147 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
 );

148 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

151 
ªt
 |
	`check_‹thog⁄Æôy
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

152 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
);

153 
ªt
 |
	`check_Á˘‹iz©i⁄
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

154 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

155 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

156 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
 );

157 
ªt
 |
	`check_sﬁuti⁄
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

158 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

159 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

160 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
 );

163 
	`¥ötf
("Check cannot beÖerformed when N > M\n");

166 
	`∑r£c_d©a_‰ì
(
dcA0
.
m©
);

167 
	`∑r£c_d©a_‰ì
(
dcQ
.
m©
);

168 
	`∑r£c_d©a_‰ì
(
dcB
.
m©
);

169 
	`∑r£c_d©a_‰ì
(
dcX
.
m©
);

170 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA0
);

171 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcQ
);

172 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcB
);

173 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcX
);

176 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

177 
	`∑r£c_d©a_‰ì
(
dcT
.
m©
);

178 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

179 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcT
);

181 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

183  
ªt
;

184 
	}
}

189 
	$check_‹thog⁄Æôy
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
, 
∑r£c_tûed_m©rix_dc_t
 *
Q
)

191 
two_dim_block_cy˛ic_t
 *
twodQ
 = (two_dim_block_cy˛ic_à*)
Q
;

192 
n‹mQ
 = 999999.0;

193 
ªsu…
;

194 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

195 
öfo_‹tho
;

196 
M
 = 
Q
->
m
;

197 
N
 = 
Q
->
n
;

198 
möMN
 = 
	`mö
(
M
, 
N
);

200 
	`PASTE_CODE_ALLOCATE_MATRIX
(
Id
, 1,

201 
two_dim_block_cy˛ic
, (&
Id
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

202 
Q
->
su≥r
.
nodes
, 
twodQ
->
grid
.
ønk
,

203 
Q
->
mb
, Q->
nb
, 
möMN
, minMN, 0, 0,

204 
möMN
, möMN, 
twodQ
->
grid
.
krows
,ÅwodQ->grid.
kcﬁs
,ÅwodQ->grid.
rows
));

206 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
Id
);

209 i‡–
M
 >
N
 ) {

210 
	`d∂asma_zhîk
–
∑r£c
, 
d∂asmaUµî
, 
d∂asmaC⁄jTøns
,

211 1.0, 
Q
, -1.0, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
 );

213 
	`d∂asma_zhîk
–
∑r£c
, 
d∂asmaUµî
, 
d∂asmaNoTøns
,

214 1.0, 
Q
, -1.0, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
 );

217 
n‹mQ
 = 
	`d∂asma_zœnhe
(
∑r£c
, 
d∂asmaInfN‹m
, 
d∂asmaUµî
, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
);

219 
ªsu…
 = 
n‹mQ
 / (
möMN
 * 
ïs
);

220 i‡–
loud
 ) {

221 
	`¥ötf
("============\n");

222 
	`¥ötf
("CheckingÅhe orthogonality of Q \n");

223 
	`¥ötf
("||Id-Q'*Q||_oÿ/ (N*ïsË%ê\n", 
ªsu…
);

226 i‡–
	`i¢™
(
ªsu…
Ë|| 
	`isöf
(result) || (result > 60.0) ) {

227 i‡–
loud
 ) 
	`¥ötf
("-- Orthogonality is suspicious ! \n");

228 
öfo_‹tho
=1;

231 i‡–
loud
 ) 
	`¥ötf
("-- Orthogonality is CORRECT ! \n");

232 
öfo_‹tho
=0;

235 
	`∑r£c_d©a_‰ì
(
Id
.
m©
);

236 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
Id
);

237  
öfo_‹tho
;

238 
	}
}

244 
	$check_Á˘‹iz©i⁄
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

245 
∑r£c_tûed_m©rix_dc_t
 *
A‹ig
,

246 
∑r£c_tûed_m©rix_dc_t
 *
A
,

247 
∑r£c_tûed_m©rix_dc_t
 *
Q
)

249 
∑r£c_tûed_m©rix_dc_t
 *
subA
;

250 
two_dim_block_cy˛ic_t
 *
twodA
 = (two_dim_block_cy˛ic_à*)
A
;

251 
An‹m
, 
Rn‹m
;

252 
ªsu…
;

253 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

254 
öfo_Á˘‹iz©i⁄
;

255 
M
 = 
A
->
m
;

256 
N
 = 
A
->
n
;

257 
möMN
 = 
	`mö
(
M
, 
N
);

259 
	`PASTE_CODE_ALLOCATE_MATRIX
(
ResiduÆ
, 1,

260 
two_dim_block_cy˛ic
, (&
ResiduÆ
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

261 
A
->
su≥r
.
nodes
, 
twodA
->
grid
.
ønk
,

262 
A
->
mb
, A->
nb
, 
M
, 
N
, 0, 0,

263 
M
, 
N
, 
twodA
->
grid
.
krows
,ÅwodA->grid.
kcﬁs
,ÅwodA->grid.
rows
));

265 
	`PASTE_CODE_ALLOCATE_MATRIX
(
R
, 1,

266 
two_dim_block_cy˛ic
, (&
R
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

267 
A
->
su≥r
.
nodes
, 
twodA
->
grid
.
ønk
,

268 
A
->
mb
, A->
nb
, 
N
, N, 0, 0,

269 
N
, N, 
twodA
->
grid
.
krows
,ÅwodA->grid.
kcﬁs
,ÅwodA->grid.
rows
));

272 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
, 
A‹ig
, (
∑r£c_tûed_m©rix_dc_t
 *)&
ResiduÆ
 );

275 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 0., (
∑r£c_tûed_m©rix_dc_t
 *)&
R
);

277 
subA
 = 
	`tûed_m©rix_subm©rix
–
A
, 0, 0, 
N
, N );

278 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµî
, 
subA
, (
∑r£c_tûed_m©rix_dc_t
 *)&
R
 );

279 
	`‰ì
(
subA
);

282 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaNoTøns
, dplasmaNoTrans,

283 -1.0, 
Q
, (
∑r£c_tûed_m©rix_dc_t
 *)&
R
,

284 1.0, (
∑r£c_tûed_m©rix_dc_t
 *)&
ResiduÆ
);

287 
	`∑r£c_d©a_‰ì
(
R
.
m©
);

288 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
R
);

290 
Rn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
ResiduÆ
);

291 
An‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
A‹ig
);

293 
ªsu…
 = 
Rn‹m
 / ( 
An‹m
 * 
möMN
 * 
ïs
);

295 i‡–
loud
 ) {

296 
	`¥ötf
("============\n");

297 
	`¥ötf
("CheckingÅhe QR Factorization \n");

298 
	`¥ötf
("-- ||A-QR||_oo/(||A||_oo.N.ïsË%ê\n", 
ªsu…
 );

301 i‡–
	`i¢™
(
ªsu…
Ë|| 
	`isöf
(result) || (result > 60.0) ) {

302 i‡–
loud
 ) 
	`¥ötf
("-- Factorization is suspicious ! \n");

303 
öfo_Á˘‹iz©i⁄
 = 1;

306 i‡–
loud
 ) 
	`¥ötf
("-- Factorization is CORRECT ! \n");

307 
öfo_Á˘‹iz©i⁄
 = 0;

310 
	`∑r£c_d©a_‰ì
(
ResiduÆ
.
m©
);

311 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
ResiduÆ
);

312  
öfo_Á˘‹iz©i⁄
;

313 
	}
}

315 
	$check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

316 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

317 
∑r£c_tûed_m©rix_dc_t
 *
dcB
,

318 
∑r£c_tûed_m©rix_dc_t
 *
dcX
 )

320 
∑r£c_tûed_m©rix_dc_t
 *
subX
;

321 
öfo_sﬁuti⁄
;

322 
Rn‹m
 = 0.0;

323 
An‹m
 = 0.0;

324 
Bn‹m
 = 0.0;

325 
Xn‹m
, 
ªsu…
;

326 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

328 
subX
 = 
	`tûed_m©rix_subm©rix
–
dcX
, 0, 0, 
dcA
->
n
, dcX->n );

330 
An‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcA
);

331 
Bn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcB
);

332 
Xn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
subX
);

335 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaNoTøns
, d∂asmaNoTøns, 1.0, 
dcA
, 
subX
, -1.0, 
dcB
);

338 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaC⁄jTøns
, 
d∂asmaNoTøns
,

339 1.0, 
dcA
, 
dcB
, 0., 
subX
 );

341 
Rn‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, 
subX
 );

342 
	`‰ì
(
subX
);

344 
ªsu…
 = 
Rn‹m
 / ( ( 
An‹m
 * 
Xn‹m
 + 
Bn‹m
 ) * 
dcA
->
n
 * 
ïs
 ) ;

346 i‡–
loud
 > 2 ) {

347 
	`¥ötf
("============\n");

348 
	`¥ötf
("CheckingÅhe Residual ofÅhe solution \n");

349 i‡–
loud
 > 3 )

350 
	`¥ötf
( "-- ||A||_oo = %e, ||X||_oo = %e, ||B||_oo= %e, ||A X - B||_oo = %e\n",

351 
An‹m
, 
Xn‹m
, 
Bn‹m
, 
Rn‹m
 );

353 
	`¥ötf
("-- ||Ax-B||_oo/((||A||_oo||x||_oo+||B||_oo).N.ïsË%ê\n", 
ªsu…
);

356 i‡–
	`i¢™
(
Xn‹m
Ë|| 
	`isöf
(Xn‹mË|| i¢™(
ªsu…
) || isinf(result) || (result > 60.0) ) {

357 if–
loud
 ) 
	`¥ötf
("-- Solution is suspicious ! \n");

358 
öfo_sﬁuti⁄
 = 1;

361 if–
loud
 ) 
	`¥ötf
("-- Solution is CORRECT ! \n");

362 
öfo_sﬁuti⁄
 = 0;

365  
öfo_sﬁuti⁄
;

366 
	}
}

	@testing_zgeqrf_dtd.c

10 
	~"comm⁄.h
"

11 
	~"d∂asma/ty≥s.h
"

12 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

13 
	~"∑r£c/öãrÁ˚s/su≥rsˇœr/ö£π_fun˘i⁄.h
"

15 
	eªgi⁄s
 {

16 
	mTILE_FULL
,

17 
	mTILE_RECTANGLE
,

21 
	$∑r£c_c‹e_geqπ
(
∑r£c_executi⁄_°ªam_t
 *
es
, 
∑r£c_èsk_t
 *
this_èsk
)

23 ()
es
;

24 
m
;

25 
n
;

26 
ib
;

27 
d∂asma_com∂ex64_t
 *
A
;

28 
lda
;

29 
d∂asma_com∂ex64_t
 *
T
;

30 
ldt
;

31 
d∂asma_com∂ex64_t
 *
TAU
;

32 
d∂asma_com∂ex64_t
 *
WORK
;

34 
	`∑r£c_dtd_u≈ack_¨gs
(
this_èsk
, &
m
, &
n
, &
ib
, &
A
, &
lda
, &
T
, &
ldt
, &
TAU
, &
WORK
);

36 
	`CORE_zgeqπ
(
m
, 
n
, 
ib
, 
A
, 
lda
, 
T
, 
ldt
, 
TAU
, 
WORK
);

38  
PARSEC_HOOK_RETURN_DONE
;

39 
	}
}

42 
	$∑r£c_c‹e_unmqr
(
∑r£c_executi⁄_°ªam_t
 *
es
, 
∑r£c_èsk_t
 *
this_èsk
)

44 ()
es
;

45 
side
;

46 
å™s
;

47 
m
;

48 
n
;

49 
k
;

50 
ib
;

51 
d∂asma_com∂ex64_t
 *
A
;

52 
lda
;

53 
d∂asma_com∂ex64_t
 *
T
;

54 
ldt
;

55 
d∂asma_com∂ex64_t
 *
C
;

56 
ldc
;

57 
d∂asma_com∂ex64_t
 *
WORK
;

58 
ldw‹k
;

60 
	`∑r£c_dtd_u≈ack_¨gs
(
this_èsk
, &
side
, &
å™s
, &
m
, &
n
, &
k
, &
ib
, &
A
,

61 &
lda
, &
T
, &
ldt
, &
C
, &
ldc
, &
WORK
, &
ldw‹k
);

63 
	`CORE_zunmqr
(
side
, 
å™s
, 
m
, 
n
, 
k
, 
ib
,

64 
A
, 
lda
, 
T
, 
ldt
, 
C
, 
ldc
, 
WORK
, 
ldw‹k
);

66  
PARSEC_HOOK_RETURN_DONE
;

67 
	}
}

70 
	$∑r£c_c‹e_tsqπ
(
∑r£c_executi⁄_°ªam_t
 *
es
, 
∑r£c_èsk_t
 *
this_èsk
)

72 ()
es
;

73 
m
;

74 
n
;

75 
ib
;

76 
d∂asma_com∂ex64_t
 *
A1
;

77 
lda1
;

78 
d∂asma_com∂ex64_t
 *
A2
;

79 
lda2
;

80 
d∂asma_com∂ex64_t
 *
T
;

81 
ldt
;

82 
d∂asma_com∂ex64_t
 *
TAU
;

83 
d∂asma_com∂ex64_t
 *
WORK
;

85 
	`∑r£c_dtd_u≈ack_¨gs
(
this_èsk
, &
m
, &
n
, &
ib
, &
A1
, &
lda1
, &
A2
, &
lda2
, &
T
, &
ldt
, &
TAU
, &
WORK
);

87 
	`CORE_ztsqπ
(
m
, 
n
, 
ib
, 
A1
, 
lda1
, 
A2
, 
lda2
, 
T
, 
ldt
, 
TAU
, 
WORK
);

89  
PARSEC_HOOK_RETURN_DONE
;

90 
	}
}

93 
	$∑r£c_c‹e_tsmqr
(
∑r£c_executi⁄_°ªam_t
 *
es
, 
∑r£c_èsk_t
 *
this_èsk
)

95 ()
es
;

96 
side
;

97 
å™s
;

98 
m1
;

99 
n1
;

100 
m2
;

101 
n2
;

102 
k
;

103 
ib
;

104 
d∂asma_com∂ex64_t
 *
A1
;

105 
lda1
;

106 
d∂asma_com∂ex64_t
 *
A2
;

107 
lda2
;

108 
d∂asma_com∂ex64_t
 *
V
;

109 
ldv
;

110 
d∂asma_com∂ex64_t
 *
T
;

111 
ldt
;

112 
d∂asma_com∂ex64_t
 *
WORK
;

113 
ldw‹k
;

115 
	`∑r£c_dtd_u≈ack_¨gs
(
this_èsk
, &
side
, &
å™s
, &
m1
, &
n1
, &
m2
, &
n2
, &
k
,

116 &
ib
, &
A1
, &
lda1
, &
A2
, &
lda2
, &
V
, &
ldv
, &
T
, &
ldt
, &
WORK
, &
ldw‹k
);

118 
	`CORE_ztsmqr
(
side
, 
å™s
, 
m1
, 
n1
, 
m2
, 
n2
, 
k
, 
ib
,

119 
A1
, 
lda1
, 
A2
, 
lda2
, 
V
, 
ldv
, 
T
, 
ldt
, 
WORK
, 
ldw‹k
);

121  
PARSEC_HOOK_RETURN_DONE
;

122 
	}
}

124 
check_‹thog⁄Æôy
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

125 
∑r£c_tûed_m©rix_dc_t
 *
Q
);

126 
check_Á˘‹iz©i⁄
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

127 
∑r£c_tûed_m©rix_dc_t
 *
A‹ig
,

128 
∑r£c_tûed_m©rix_dc_t
 *
A
,

129 
∑r£c_tûed_m©rix_dc_t
 *
Q
);

130 
check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

131 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

132 
∑r£c_tûed_m©rix_dc_t
 *
dcB
,

133 
∑r£c_tûed_m©rix_dc_t
 *
dcX
 );

135 
	$maö
(
¨gc
, **
¨gv
)

137 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

138 
ù¨am
[
IPARAM_SIZEOF
];

139 
ªt
 = 0;

142 
	`ù¨am_deÁu…_Á˘o
(
ù¨am
);

143 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 32, 200, 200);

144 
ù¨am
[
IPARAM_KP
] = 4;

145 
ù¨am
[
IPARAM_KQ
] = 1;

146 
ù¨am
[
IPARAM_LDA
] = -'m';

147 
ù¨am
[
IPARAM_LDB
] = -'m';

150 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

151 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

152 
	`PASTE_CODE_FLOPS
(
FLOPS_ZGEQRF
, ((
DagDoubÀ_t
)
M
, (DagDoubÀ_t)
N
));

154 
LDA
 = 
	`max
(
M
, LDA);

155 
LDB
 = 
	`max
(
M
, LDB);

158 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

159 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

160 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

161 
M
, 
N
, 
KP
, 
KQ
, 
P
));

164 
two_dim_block_cy˛ic_t
 *
__dcA
 = &
dcA
;

165 
	`∑r£c_dtd_d©a_cﬁÀ˘i⁄_öô
((
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcA
);

167 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcT
, 1,

168 
two_dim_block_cy˛ic
, (&
dcT
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

169 
nodes
, 
ønk
, 
IB
, 
NB
, 
MT
*IB, 
N
, 0, 0,

170 
MT
*
IB
, 
N
, 
KP
, 
KQ
, 
P
));

173 
two_dim_block_cy˛ic_t
 *
__dcT
 = &
dcT
;

174 
	`∑r£c_dtd_d©a_cﬁÀ˘i⁄_öô
((
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcT
);

176 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA0
, 
check
,

177 
two_dim_block_cy˛ic
, (&
dcA0
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

178 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

179 
M
, 
N
, 
KP
, 
KQ
, 
P
));

180 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcQ
, 
check
,

181 
two_dim_block_cy˛ic
, (&
dcQ
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

182 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

183 
M
, 
N
, 
KP
, 
KQ
, 
P
));

186 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB
, 
check
,

187 
two_dim_block_cy˛ic
, (&
dcB
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

188 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

189 
M
, 
NRHS
, 
KP
, 
KQ
, 
P
));

191 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcX
, 
check
,

192 
two_dim_block_cy˛ic
, (&
dcX
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

193 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

194 
M
, 
NRHS
, 
KP
, 
KQ
, 
P
));

197 if(
loud
 > 3Ë
	`¥ötf
("+++ Generate matrices ... ");

198 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 3872);

199 if–
check
 )

200 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

201 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, (∑r£c_tûed_m©rix_dc_à*)&
dcA0
 );

202 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 0., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcT
);

203 if(
loud
 > 3Ë
	`¥ötf
("Done\n");

206 
∑r£c_èskpoﬁ_t
 *
dtd_ç
 = 
	`∑r£c_dtd_èskpoﬁ_√w
();

209 
k
, 
m
, 
n
;

210 
ldak
, 
ldam
;

211 
ãmpkm
, 
ãmpkn
, 
ãm≤n
, 
ãmpmm
;

212 
ib
 = 
dcT
.
su≥r
.
mb
;

213 
möMNT
 = 
	`mö
(
dcA
.
su≥r
.
mt
, dcA.su≥r.
¡
);

214 
side
 = 
d∂asmaLe·
,

215 
å™s
 = 
d∂asmaC⁄jTøns
;

219 
	`d∂asma_add2¨ía_tûe
–&
∑r£c_dtd_¨ías_d©©y≥s
[
TILE_FULL
],

220 
dcA
.
su≥r
.
mb
*dcA.su≥r.
nb
*(
d∂asma_com∂ex64_t
),

221 
PARSEC_ARENA_ALIGNMENT_SSE
,

222 
∑r£c_d©©y≥_doubÀ_com∂ex_t
, 
dcA
.
su≥r
.
mb
 );

224 
	`d∂asma_add2¨ía_ª˘™gÀ
–&
∑r£c_dtd_¨ías_d©©y≥s
[
TILE_RECTANGLE
],

225 
dcT
.
su≥r
.
mb
*dcT.su≥r.
nb
*(
d∂asma_com∂ex64_t
),

226 
PARSEC_ARENA_ALIGNMENT_SSE
,

227 
∑r£c_d©©y≥_doubÀ_com∂ex_t
, 
dcT
.
su≥r
.
mb
, dcT.su≥r.
nb
, -1);

230 
	`∑r£c_c⁄ãxt_add_èskpoﬁ
(
∑r£c
, 
dtd_ç
);

232 
	`SYNC_TIME_START
();

234 
	`∑r£c_c⁄ãxt_°¨t
(
∑r£c
);

237  
k
 = 0; k < 
möMNT
; k++ ) {

238 
ãmpkm
 = 
k
 =
dcA
.
su≥r
.
mt
-1 ? dcA.su≥r.
m
-(k*dcA.su≥r.
mb
) : dcA.super.mb;

239 
ãmpkn
 = 
k
 =
dcA
.
su≥r
.
¡
-1 ? dcA.su≥r.
n
-(k*dcA.su≥r.
nb
) : dcA.super.nb;

240 
ldak
 = 
	`BLKLDD
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
, 
k
);

242 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
–
dtd_ç
, 
∑r£c_c‹e_geqπ
,

243 (
dcA
.
su≥r
.
¡
-
k
)*(dcA.super.nt-k)*(dcA.super.nt-k), "geqrt",

244 (), &
ãmpkm
, 
VALUE
,

245 (), &
ãmpkn
, 
VALUE
,

246 (), &
ib
, 
VALUE
,

247 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, k), 
INOUT
 | 
TILE_FULL
 | 
AFFINITY
,

248 (), &
ldak
, 
VALUE
,

249 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
T
, 
k
, k), 
OUTPUT
 | 
TILE_RECTANGLE
,

250 (), &
dcT
.
su≥r
.
mb
, 
VALUE
,

251 (
d∂asma_com∂ex64_t
)*
dcT
.
su≥r
.
nb
, 
NULL
, 
SCRATCH
,

252 (
d∂asma_com∂ex64_t
)*
ib
*
dcT
.
su≥r
.
nb
, 
NULL
, 
SCRATCH
,

253 
PARSEC_DTD_ARG_END
 );

255  
n
 = 
k
+1;Ç < 
dcA
.
su≥r
.
¡
;Ç++ ) {

256 
ãm≤n
 = 
n
 =
dcA
.
su≥r
.
¡
-1 ? dcA.su≥r.n-“*dcA.su≥r.
nb
) : dcA.super.nb;

258 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
–
dtd_ç
, 
∑r£c_c‹e_unmqr
, 0, "unmqr",

259 (), &
side
, 
VALUE
,

260 (), &
å™s
, 
VALUE
,

261 (), &
ãmpkm
, 
VALUE
,

262 (), &
ãm≤n
, 
VALUE
,

263 (), &
ãmpkm
, 
VALUE
,

264 (), &
ib
, 
VALUE
,

265 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, k), 
INPUT
 | 
TILE_FULL
,

266 (), &
ldak
, 
VALUE
,

267 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
T
, 
k
, k), 
INPUT
 | 
TILE_RECTANGLE
,

268 (), &
dcT
.
su≥r
.
mb
, 
VALUE
,

269 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, 
n
), 
INOUT
 | 
TILE_FULL
 | 
AFFINITY
,

270 (), &
ldak
, 
VALUE
,

271 (
d∂asma_com∂ex64_t
)*
ib
*
dcT
.
su≥r
.
nb
, 
NULL
, 
SCRATCH
,

272 (), &
dcT
.
su≥r
.
nb
, 
VALUE
,

273 
PARSEC_DTD_ARG_END
 );

275 
	`∑r£c_dtd_d©a_Êush
–
dtd_ç
, 
	`PARSEC_DTD_TILE_OF
(
T
, 
k
, k) );

277  
m
 = 
k
+1; m < 
dcA
.
su≥r
.
mt
; m++ ) {

278 
ãmpmm
 = 
m
 =
dcA
.
su≥r
.
mt
-1 ? dcA.su≥r.m-(m*dcA.su≥r.
mb
) : dcA.super.mb;

279 
ldam
 = 
	`BLKLDD
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
, 
m
);

281 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
–
dtd_ç
, 
∑r£c_c‹e_tsqπ
,

282 (
dcA
.
su≥r
.
mt
-
k
)*(dcA.super.mt-k)*(dcA.super.mt-k), "tsqrt",

283 (), &
ãmpmm
, 
VALUE
,

284 (), &
ãmpkn
, 
VALUE
,

285 (), &
ib
, 
VALUE
,

286 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, k), 
INOUT
 | 
TILE_FULL
,

287 (), &
ldak
, 
VALUE
,

288 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
m
, 
k
), 
INOUT
 | 
TILE_FULL
 | 
AFFINITY
,

289 (), &
ldam
, 
VALUE
,

290 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
T
, 
m
, 
k
), 
OUTPUT
 | 
TILE_RECTANGLE
,

291 (), &
dcT
.
su≥r
.
mb
, 
VALUE
,

292 (
d∂asma_com∂ex64_t
)*
dcT
.
su≥r
.
nb
, 
NULL
, 
SCRATCH
,

293 (
d∂asma_com∂ex64_t
)*
ib
*
dcT
.
su≥r
.
nb
, 
NULL
, 
SCRATCH
,

294 
PARSEC_DTD_ARG_END
 );

296  
n
 = 
k
+1;Ç < 
dcA
.
su≥r
.
¡
;Ç++ ) {

297 
ãm≤n
 = 
n
 =
dcA
.
su≥r
.
¡
-1 ? dcA.su≥r.n-“*dcA.su≥r.
nb
) : dcA.super.nb;

298 
ldw‹k
 = 
d∂asmaLe·
 =d∂asmaLe· ? 
ib
 : 
dcT
.
su≥r
.
nb
;

300 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
–
dtd_ç
, 
∑r£c_c‹e_tsmqr
,

301 (
dcA
.
su≥r
.
mt
-
k
)*(dcA.su≥r.mt-
n
)*(dcA.super.mt-n), "tsmqr",

302 (), &
side
, 
VALUE
,

303 (), &
å™s
, 
VALUE
,

304 (), &
dcA
.
su≥r
.
mb
, 
VALUE
,

305 (), &
ãm≤n
, 
VALUE
,

306 (), &
ãmpmm
, 
VALUE
,

307 (), &
ãm≤n
, 
VALUE
,

308 (), &
dcA
.
su≥r
.
nb
, 
VALUE
,

309 (), &
ib
, 
VALUE
,

310 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, 
n
), 
INOUT
 | 
TILE_FULL
,

311 (), &
ldak
, 
VALUE
,

312 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
m
, 
n
), 
INOUT
 | 
TILE_FULL
 | 
AFFINITY
,

313 (), &
ldam
, 
VALUE
,

314 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
m
, 
k
), 
INPUT
 | 
TILE_FULL
,

315 (), &
ldam
, 
VALUE
,

316 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
T
, 
m
, 
k
), 
INPUT
 | 
TILE_RECTANGLE
,

317 (), &
dcT
.
su≥r
.
mb
, 
VALUE
,

318 (
d∂asma_com∂ex64_t
)*
ib
*
dcT
.
su≥r
.
nb
, 
NULL
, 
SCRATCH
,

319 (), &
ldw‹k
, 
VALUE
,

320 
PARSEC_DTD_ARG_END
 );

322 
	`∑r£c_dtd_d©a_Êush
–
dtd_ç
, 
	`PARSEC_DTD_TILE_OF
(
T
, 
m
, 
k
) );

324  
n
 = 
k
+1;Ç < 
dcA
.
su≥r
.
¡
;Ç++ ) {

325 
	`∑r£c_dtd_d©a_Êush
–
dtd_ç
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, 
n
) );

327  
m
 = 
k
+1; m < 
dcA
.
su≥r
.
mt
; m++ ) {

328 
	`∑r£c_dtd_d©a_Êush
–
dtd_ç
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
m
, 
k
) );

330 
	`∑r£c_dtd_d©a_Êush
–
dtd_ç
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, k) );

333 
	`∑r£c_dtd_d©a_Êush_Æl
–
dtd_ç
, (
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcA
 );

334 
	`∑r£c_dtd_d©a_Êush_Æl
–
dtd_ç
, (
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcT
 );

337 
	`∑r£c_dtd_èskpoﬁ_waô
–
dtd_ç
 );

340 
	`∑r£c_c⁄ãxt_waô
–
∑r£c
 );

342 
	`SYNC_TIME_PRINT
(
ønk
, ("\tPxQ= %3d %-3d NB= %4d N= %7d : %14f gflops\n",

343 
P
, 
Q
, 
NB
, 
N
,

344 
gÊ›s
=(
Ê›s
/1e9)/
sync_time_ñ≠£d
));

347 
	`∑r£c_èskpoﬁ_‰ì
–
dtd_ç
 );

349 if–
check
 ) {

350 i‡(
M
 >
N
) {

351 if(
loud
 > 2Ë
	`¥ötf
("+++ GenerateÅhe Q ...");

352 
	`d∂asma_zungqr
–
∑r£c
,

353 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

354 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcT
,

355 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
);

356 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

358 if(
loud
 > 2Ë
	`¥ötf
("+++ SolveÅhe system ...");

359 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
, 2354);

360 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

361 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
,

362 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
 );

363 
	`d∂asma_zgeqrs
–
∑r£c
,

364 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

365 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcT
,

366 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
 );

367 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

370 
ªt
 |
	`check_‹thog⁄Æôy
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

371 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
);

372 
ªt
 |
	`check_Á˘‹iz©i⁄
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

373 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

374 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

375 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
 );

376 
ªt
 |
	`check_sﬁuti⁄
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

377 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

378 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

379 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
 );

382 
	`¥ötf
("Check cannot beÖerformed when N > M\n");

385 
	`∑r£c_d©a_‰ì
(
dcA0
.
m©
);

386 
	`∑r£c_d©a_‰ì
(
dcQ
.
m©
);

387 
	`∑r£c_d©a_‰ì
(
dcB
.
m©
);

388 
	`∑r£c_d©a_‰ì
(
dcX
.
m©
);

389 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA0
);

390 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcQ
);

391 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcB
);

392 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcX
);

396 
	`d∂asma_m©rix_dñ2¨ía
–&
∑r£c_dtd_¨ías_d©©y≥s
[
TILE_FULL
] );

397 
	`d∂asma_m©rix_dñ2¨ía
–&
∑r£c_dtd_¨ías_d©©y≥s
[
TILE_RECTANGLE
] );

399 
	`∑r£c_dtd_d©a_cﬁÀ˘i⁄_föi
–(
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcA
 );

400 
	`∑r£c_dtd_d©a_cﬁÀ˘i⁄_föi
–(
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcT
 );

402 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

403 
	`∑r£c_d©a_‰ì
(
dcT
.
m©
);

404 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

405 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcT
);

407 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

409  
ªt
;

410 
	}
}

415 
	$check_‹thog⁄Æôy
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
, 
∑r£c_tûed_m©rix_dc_t
 *
Q
)

417 
two_dim_block_cy˛ic_t
 *
twodQ
 = (two_dim_block_cy˛ic_à*)
Q
;

418 
n‹mQ
 = 999999.0;

419 
ªsu…
;

420 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

421 
öfo_‹tho
;

422 
M
 = 
Q
->
m
;

423 
N
 = 
Q
->
n
;

424 
möMN
 = 
	`mö
(
M
, 
N
);

426 
	`PASTE_CODE_ALLOCATE_MATRIX
(
Id
, 1,

427 
two_dim_block_cy˛ic
, (&
Id
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

428 
Q
->
su≥r
.
nodes
, 
twodQ
->
grid
.
ønk
,

429 
Q
->
mb
, Q->
nb
, 
möMN
, minMN, 0, 0,

430 
möMN
, möMN, 
twodQ
->
grid
.
krows
,ÅwodQ->grid.
kcﬁs
,ÅwodQ->grid.
rows
));

432 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
Id
);

435 i‡–
M
 >
N
 ) {

436 
	`d∂asma_zhîk
–
∑r£c
, 
d∂asmaUµî
, 
d∂asmaC⁄jTøns
,

437 1.0, 
Q
, -1.0, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
 );

439 
	`d∂asma_zhîk
–
∑r£c
, 
d∂asmaUµî
, 
d∂asmaNoTøns
,

440 1.0, 
Q
, -1.0, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
 );

443 
n‹mQ
 = 
	`d∂asma_zœnhe
(
∑r£c
, 
d∂asmaInfN‹m
, 
d∂asmaUµî
, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
);

445 
ªsu…
 = 
n‹mQ
 / (
möMN
 * 
ïs
);

446 i‡–
loud
 ) {

447 
	`¥ötf
("============\n");

448 
	`¥ötf
("CheckingÅhe orthogonality of Q \n");

449 
	`¥ötf
("||Id-Q'*Q||_oÿ/ (N*ïsË%ê\n", 
ªsu…
);

452 i‡–
	`i¢™
(
ªsu…
Ë|| 
	`isöf
(result) || (result > 60.0) ) {

453 i‡–
loud
 ) 
	`¥ötf
("-- Orthogonality is suspicious ! \n");

454 
öfo_‹tho
=1;

457 i‡–
loud
 ) 
	`¥ötf
("-- Orthogonality is CORRECT ! \n");

458 
öfo_‹tho
=0;

461 
	`∑r£c_d©a_‰ì
(
Id
.
m©
);

462 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
Id
);

463  
öfo_‹tho
;

464 
	}
}

470 
	$check_Á˘‹iz©i⁄
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

471 
∑r£c_tûed_m©rix_dc_t
 *
A‹ig
,

472 
∑r£c_tûed_m©rix_dc_t
 *
A
,

473 
∑r£c_tûed_m©rix_dc_t
 *
Q
)

475 
∑r£c_tûed_m©rix_dc_t
 *
subA
;

476 
two_dim_block_cy˛ic_t
 *
twodA
 = (two_dim_block_cy˛ic_à*)
A
;

477 
An‹m
, 
Rn‹m
;

478 
ªsu…
;

479 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

480 
öfo_Á˘‹iz©i⁄
;

481 
M
 = 
A
->
m
;

482 
N
 = 
A
->
n
;

483 
möMN
 = 
	`mö
(
M
, 
N
);

485 
	`PASTE_CODE_ALLOCATE_MATRIX
(
ResiduÆ
, 1,

486 
two_dim_block_cy˛ic
, (&
ResiduÆ
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

487 
A
->
su≥r
.
nodes
, 
twodA
->
grid
.
ønk
,

488 
A
->
mb
, A->
nb
, 
M
, 
N
, 0, 0,

489 
M
, 
N
, 
twodA
->
grid
.
krows
,ÅwodA->grid.
kcﬁs
,ÅwodA->grid.
rows
));

491 
	`PASTE_CODE_ALLOCATE_MATRIX
(
R
, 1,

492 
two_dim_block_cy˛ic
, (&
R
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

493 
A
->
su≥r
.
nodes
, 
twodA
->
grid
.
ønk
,

494 
A
->
mb
, A->
nb
, 
N
, N, 0, 0,

495 
N
, N, 
twodA
->
grid
.
krows
,ÅwodA->grid.
kcﬁs
,ÅwodA->grid.
rows
));

498 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
, 
A‹ig
, (
∑r£c_tûed_m©rix_dc_t
 *)&
ResiduÆ
 );

501 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 0., (
∑r£c_tûed_m©rix_dc_t
 *)&
R
);

503 
subA
 = 
	`tûed_m©rix_subm©rix
–
A
, 0, 0, 
N
, N );

504 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµî
, 
subA
, (
∑r£c_tûed_m©rix_dc_t
 *)&
R
 );

505 
	`‰ì
(
subA
);

508 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaNoTøns
, dplasmaNoTrans,

509 -1.0, 
Q
, (
∑r£c_tûed_m©rix_dc_t
 *)&
R
,

510 1.0, (
∑r£c_tûed_m©rix_dc_t
 *)&
ResiduÆ
);

513 
	`∑r£c_d©a_‰ì
(
R
.
m©
);

514 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
R
);

516 
Rn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
ResiduÆ
);

517 
An‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
A‹ig
);

519 
ªsu…
 = 
Rn‹m
 / ( 
An‹m
 * 
möMN
 * 
ïs
);

521 i‡–
loud
 ) {

522 
	`¥ötf
("============\n");

523 
	`¥ötf
("CheckingÅhe QR Factorization \n");

524 
	`¥ötf
("-- ||A-QR||_oo/(||A||_oo.N.ïsË%ê\n", 
ªsu…
 );

527 i‡–
	`i¢™
(
ªsu…
Ë|| 
	`isöf
(result) || (result > 60.0) ) {

528 i‡–
loud
 ) 
	`¥ötf
("-- Factorization is suspicious ! \n");

529 
öfo_Á˘‹iz©i⁄
 = 1;

532 i‡–
loud
 ) 
	`¥ötf
("-- Factorization is CORRECT ! \n");

533 
öfo_Á˘‹iz©i⁄
 = 0;

536 
	`∑r£c_d©a_‰ì
(
ResiduÆ
.
m©
);

537 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
ResiduÆ
);

538  
öfo_Á˘‹iz©i⁄
;

539 
	}
}

541 
	$check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

542 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

543 
∑r£c_tûed_m©rix_dc_t
 *
dcB
,

544 
∑r£c_tûed_m©rix_dc_t
 *
dcX
 )

546 
∑r£c_tûed_m©rix_dc_t
 *
subX
;

547 
öfo_sﬁuti⁄
;

548 
Rn‹m
 = 0.0;

549 
An‹m
 = 0.0;

550 
Bn‹m
 = 0.0;

551 
Xn‹m
, 
ªsu…
;

552 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

554 
subX
 = 
	`tûed_m©rix_subm©rix
–
dcX
, 0, 0, 
dcA
->
n
, dcX->n );

556 
An‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcA
);

557 
Bn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcB
);

558 
Xn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
subX
);

561 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaNoTøns
, d∂asmaNoTøns, 1.0, 
dcA
, 
subX
, -1.0, 
dcB
);

564 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaC⁄jTøns
, 
d∂asmaNoTøns
,

565 1.0, 
dcA
, 
dcB
, 0., 
subX
 );

567 
Rn‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, 
subX
 );

568 
	`‰ì
(
subX
);

570 
ªsu…
 = 
Rn‹m
 / ( ( 
An‹m
 * 
Xn‹m
 + 
Bn‹m
 ) * 
dcA
->
n
 * 
ïs
 ) ;

572 i‡–
loud
 > 2 ) {

573 
	`¥ötf
("============\n");

574 
	`¥ötf
("CheckingÅhe Residual ofÅhe solution \n");

575 i‡–
loud
 > 3 )

576 
	`¥ötf
( "-- ||A||_oo = %e, ||X||_oo = %e, ||B||_oo= %e, ||A X - B||_oo = %e\n",

577 
An‹m
, 
Xn‹m
, 
Bn‹m
, 
Rn‹m
 );

579 
	`¥ötf
("-- ||Ax-B||_oo/((||A||_oo||x||_oo+||B||_oo).N.ïsË%ê\n", 
ªsu…
);

582 i‡–
	`i¢™
(
Xn‹m
Ë|| 
	`isöf
(Xn‹mË|| i¢™(
ªsu…
) || isinf(result) || (result > 60.0) ) {

583 if–
loud
 ) 
	`¥ötf
("-- Solution is suspicious ! \n");

584 
öfo_sﬁuti⁄
 = 1;

587 if–
loud
 ) 
	`¥ötf
("-- Solution is CORRECT ! \n");

588 
öfo_sﬁuti⁄
 = 0;

591  
öfo_sﬁuti⁄
;

592 
	}
}

	@testing_zgeqrf_dtd_untied.c

10 
	~"comm⁄.h
"

11 
	~"d∂asma/ty≥s.h
"

12 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

13 
	~"∑r£c/öãrÁ˚s/su≥rsˇœr/ö£π_fun˘i⁄.h
"

15 
	eªgi⁄s
 {

16 
	mTILE_FULL
,

17 
	mTILE_LOWER
,

18 
	mTILE_UPPER
,

19 
	mTILE_RECTANGLE
,

23 
	$∑r£c_c‹e_geqπ
(
∑r£c_executi⁄_°ªam_t
 *
es
, 
∑r£c_èsk_t
 *
this_èsk
)

25 ()
es
;

26 
m
;

27 
n
;

28 
ib
;

29 
d∂asma_com∂ex64_t
 *
A
;

30 
lda
;

31 
d∂asma_com∂ex64_t
 *
T
;

32 
ldt
;

33 
d∂asma_com∂ex64_t
 *
TAU
;

34 
d∂asma_com∂ex64_t
 *
WORK
;

36 
	`∑r£c_dtd_u≈ack_¨gs
(
this_èsk
, &
m
, &
n
, &
ib
, &
A
, &
lda
, &
T
, &
ldt
, &
TAU
, &
WORK
);

38 
	`CORE_zgeqπ
(
m
, 
n
, 
ib
, 
A
, 
lda
, 
T
, 
ldt
, 
TAU
, 
WORK
);

40  
PARSEC_HOOK_RETURN_DONE
;

41 
	}
}

44 
	$∑r£c_c‹e_unmqr
(
∑r£c_executi⁄_°ªam_t
 *
es
, 
∑r£c_èsk_t
 *
this_èsk
)

46 ()
es
;

47 
side
;

48 
å™s
;

49 
m
;

50 
n
;

51 
k
;

52 
ib
;

53 
d∂asma_com∂ex64_t
 *
A
;

54 
lda
;

55 
d∂asma_com∂ex64_t
 *
T
;

56 
ldt
;

57 
d∂asma_com∂ex64_t
 *
C
;

58 
ldc
;

59 
d∂asma_com∂ex64_t
 *
WORK
;

60 
ldw‹k
;

62 
	`∑r£c_dtd_u≈ack_¨gs
(
this_èsk
, &
side
, &
å™s
, &
m
, &
n
, &
k
, &
ib
, &
A
,

63 &
lda
, &
T
, &
ldt
, &
C
, &
ldc
, &
WORK
, &
ldw‹k
);

65 
	`CORE_zunmqr
(
side
, 
å™s
, 
m
, 
n
, 
k
, 
ib
,

66 
A
, 
lda
, 
T
, 
ldt
, 
C
, 
ldc
, 
WORK
, 
ldw‹k
);

68  
PARSEC_HOOK_RETURN_DONE
;

69 
	}
}

72 
	$∑r£c_c‹e_tsqπ
(
∑r£c_executi⁄_°ªam_t
 *
es
, 
∑r£c_èsk_t
 *
this_èsk
)

74 ()
es
;

75 
m
;

76 
n
;

77 
ib
;

78 
d∂asma_com∂ex64_t
 *
A1
;

79 
lda1
;

80 
d∂asma_com∂ex64_t
 *
A2
;

81 
lda2
;

82 
d∂asma_com∂ex64_t
 *
T
;

83 
ldt
;

84 
d∂asma_com∂ex64_t
 *
TAU
;

85 
d∂asma_com∂ex64_t
 *
WORK
;

87 
	`∑r£c_dtd_u≈ack_¨gs
(
this_èsk
, &
m
, &
n
, &
ib
, &
A1
, &
lda1
, &
A2
, &
lda2
, &
T
, &
ldt
, &
TAU
, &
WORK
);

89 
	`CORE_ztsqπ
(
m
, 
n
, 
ib
, 
A1
, 
lda1
, 
A2
, 
lda2
, 
T
, 
ldt
, 
TAU
, 
WORK
);

91  
PARSEC_HOOK_RETURN_DONE
;

92 
	}
}

95 
	$∑r£c_c‹e_tsmqr
(
∑r£c_executi⁄_°ªam_t
 *
es
, 
∑r£c_èsk_t
 *
this_èsk
)

97 ()
es
;

98 
side
;

99 
å™s
;

100 
m1
;

101 
n1
;

102 
m2
;

103 
n2
;

104 
k
;

105 
ib
;

106 
d∂asma_com∂ex64_t
 *
A1
;

107 
lda1
;

108 
d∂asma_com∂ex64_t
 *
A2
;

109 
lda2
;

110 
d∂asma_com∂ex64_t
 *
V
;

111 
ldv
;

112 
d∂asma_com∂ex64_t
 *
T
;

113 
ldt
;

114 
d∂asma_com∂ex64_t
 *
WORK
;

115 
ldw‹k
;

117 
	`∑r£c_dtd_u≈ack_¨gs
(
this_èsk
, &
side
, &
å™s
, &
m1
, &
n1
, &
m2
, &
n2
, &
k
,

118 &
ib
, &
A1
, &
lda1
, &
A2
, &
lda2
, &
V
, &
ldv
, &
T
, &
ldt
, &
WORK
, &
ldw‹k
);

120 
	`CORE_ztsmqr
(
side
, 
å™s
, 
m1
, 
n1
, 
m2
, 
n2
, 
k
, 
ib
,

121 
A1
, 
lda1
, 
A2
, 
lda2
, 
V
, 
ldv
, 
T
, 
ldt
, 
WORK
, 
ldw‹k
);

123  
PARSEC_HOOK_RETURN_DONE
;

124 
	}
}

127 
	$ö£π_èsk_geqrf
(
∑r£c_executi⁄_°ªam_t
 *
es
, 
∑r£c_èsk_t
 *
this_èsk
)

129 ()
es
;

130 
two_dim_block_cy˛ic_t
 *
dcA
;

131 
two_dim_block_cy˛ic_t
 *
dcT
;

133 
k
, 
m
, 
n
;

134 
ldak
, 
ldam
;

135 
ãmpkm
, 
ãmpkn
, 
ãm≤n
, 
ãmpmm
;

136 
side
 = 
d∂asmaLe·
;

137 
å™s
 = 
d∂asmaC⁄jTøns
;

139 
tŸÆ
, *
ôî©i⁄
, 
cou¡
 = 0;

141 
∑r£c_èskpoﬁ_t
 *
dtd_ç
 = (∑r£c_èskpoﬁ_à*)
this_èsk
->
èskpoﬁ
;

143 
	`∑r£c_dtd_u≈ack_¨gs
(
this_èsk
, &
tŸÆ
, &
ôî©i⁄
, &
dcA
, &
dcT
);

145 
two_dim_block_cy˛ic_t
 *
__dcA
 = 
dcA
;

146 
two_dim_block_cy˛ic_t
 *
__dcT
 = 
dcT
;

148 
ib
 = 
dcT
->
su≥r
.
mb
;

150  
k
 = *
ôî©i⁄
; k < 
tŸÆ
; k++, *ôî©i⁄ +1, 
cou¡
++ ) {

151 if–
cou¡
 > 
∑r£c_dtd_wödow_size
-1000 ) {

152  
PARSEC_HOOK_RETURN_AGAIN
;

155 
ãmpkm
 = 
k
 =
dcA
->
su≥r
.
mt
-1 ? dcA->su≥r.
m
-(k*dcA->su≥r.
mb
) : dcA->super.mb;

156 
ãmpkn
 = 
k
 =
dcA
->
su≥r
.
¡
-1 ? dcA->su≥r.
n
-(k*dcA->su≥r.
nb
) : dcA->super.nb;

157 
ldak
 = 
	`BLKLDD
–(
∑r£c_tûed_m©rix_dc_t
*)
dcA
, 
k
);

159 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
–
dtd_ç
, 
∑r£c_c‹e_geqπ
,

160 (
dcA
->
su≥r
.
¡
-
k
)*(dcA->super.nt-k)*(dcA->super.nt-k), "geqrt",

161 (), &
ãmpkm
, 
VALUE
,

162 (), &
ãmpkn
, 
VALUE
,

163 (), &
ib
, 
VALUE
,

164 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, k), 
INOUT
 | 
TILE_FULL
 | 
AFFINITY
,

165 (), &
ldak
, 
VALUE
,

166 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
T
, 
k
, k), 
OUTPUT
 | 
TILE_RECTANGLE
,

167 (), &
dcT
->
su≥r
.
mb
, 
VALUE
,

168 (
d∂asma_com∂ex64_t
)*
dcT
->
su≥r
.
nb
, 
NULL
, 
SCRATCH
,

169 (
d∂asma_com∂ex64_t
)*
ib
*
dcT
->
su≥r
.
nb
, 
NULL
, 
SCRATCH
,

170 
PARSEC_DTD_ARG_END
 );

172  
n
 = 
k
+1;Ç < 
dcA
->
su≥r
.
¡
;Ç++, 
cou¡
++ ) {

173 
ãm≤n
 = 
n
 =
dcA
->
su≥r
.
¡
-1 ? dcA->su≥r.n-“*dcA->su≥r.
nb
) : dcA->super.nb;

175 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
–
dtd_ç
, 
∑r£c_c‹e_unmqr
, 0, "unmqr",

176 (), &
side
, 
VALUE
,

177 (), &
å™s
, 
VALUE
,

178 (), &
ãmpkm
, 
VALUE
,

179 (), &
ãm≤n
, 
VALUE
,

180 (), &
ãmpkm
, 
VALUE
,

181 (), &
ib
, 
VALUE
,

182 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, k), 
INPUT
 | 
TILE_LOWER
,

183 (), &
ldak
, 
VALUE
,

184 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
T
, 
k
, k), 
INPUT
 | 
TILE_RECTANGLE
,

185 (), &
dcT
->
su≥r
.
mb
, 
VALUE
,

186 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, 
n
), 
INOUT
 | 
TILE_FULL
 | 
AFFINITY
,

187 (), &
ldak
, 
VALUE
,

188 (
d∂asma_com∂ex64_t
)*
ib
*
dcT
->
su≥r
.
nb
, 
NULL
, 
SCRATCH
,

189 (), &
dcT
->
su≥r
.
nb
, 
VALUE
,

190 
PARSEC_DTD_ARG_END
 );

192 
	`∑r£c_dtd_d©a_Êush
–
dtd_ç
, 
	`PARSEC_DTD_TILE_OF
(
T
, 
k
, k) );

194  
m
 = 
k
+1; m < 
dcA
->
su≥r
.
mt
; m++, 
cou¡
++ ) {

195 
ãmpmm
 = 
m
 =
dcA
->
su≥r
.
mt
-1 ? dcA->su≥r.m-(m*dcA->su≥r.
mb
) : dcA->super.mb;

196 
ldam
 = 
	`BLKLDD
–(
∑r£c_tûed_m©rix_dc_t
*)
dcA
, 
m
);

198 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
–
dtd_ç
, 
∑r£c_c‹e_tsqπ
,

199 (
dcA
->
su≥r
.
mt
-
k
)*(dcA->super.mt-k)*(dcA->super.mt-k), "tsqrt",

200 (), &
ãmpmm
, 
VALUE
,

201 (), &
ãmpkn
, 
VALUE
,

202 (), &
ib
, 
VALUE
,

203 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, k), 
INOUT
 | 
TILE_UPPER
,

204 (), &
ldak
, 
VALUE
,

205 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
m
, 
k
), 
INOUT
 | 
TILE_FULL
 | 
AFFINITY
,

206 (), &
ldam
, 
VALUE
,

207 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
T
, 
m
, 
k
), 
OUTPUT
 | 
TILE_RECTANGLE
,

208 (), &
dcT
->
su≥r
.
mb
, 
VALUE
,

209 (
d∂asma_com∂ex64_t
)*
dcT
->
su≥r
.
nb
, 
NULL
, 
SCRATCH
,

210 (
d∂asma_com∂ex64_t
)*
ib
*
dcT
->
su≥r
.
nb
, 
NULL
, 
SCRATCH
,

211 
PARSEC_DTD_ARG_END
 );

213  
n
 = 
k
+1;Ç < 
dcA
->
su≥r
.
¡
;Ç++, 
cou¡
++ ) {

214 
ãm≤n
 = 
n
 =
dcA
->
su≥r
.
¡
-1 ? dcA->su≥r.n-“*dcA->su≥r.
nb
) : dcA->super.nb;

215 
ldw‹k
 = 
d∂asmaLe·
 =d∂asmaLe· ? 
ib
 : 
dcT
->
su≥r
.
nb
;

217 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
–
dtd_ç
, 
∑r£c_c‹e_tsmqr
,

218 (
dcA
->
su≥r
.
mt
-
k
)*(dcA->su≥r.mt-
n
)*(dcA->super.mt-n), "tsmqr",

219 (), &
side
, 
VALUE
,

220 (), &
å™s
, 
VALUE
,

221 (), &
dcA
->
su≥r
.
mb
, 
VALUE
,

222 (), &
ãm≤n
, 
VALUE
,

223 (), &
ãmpmm
, 
VALUE
,

224 (), &
ãm≤n
, 
VALUE
,

225 (), &
dcA
->
su≥r
.
nb
, 
VALUE
,

226 (), &
ib
, 
VALUE
,

227 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, 
n
), 
INOUT
 | 
TILE_FULL
,

228 (), &
ldak
, 
VALUE
,

229 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
m
, 
n
), 
INOUT
 | 
TILE_FULL
 | 
AFFINITY
,

230 (), &
ldam
, 
VALUE
,

231 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
m
, 
k
), 
INPUT
 | 
TILE_FULL
,

232 (), &
ldam
, 
VALUE
,

233 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
T
, 
m
, 
k
), 
INPUT
 | 
TILE_RECTANGLE
,

234 (), &
dcT
->
su≥r
.
mb
, 
VALUE
,

235 (
d∂asma_com∂ex64_t
)*
ib
*
dcT
->
su≥r
.
nb
, 
NULL
, 
SCRATCH
,

236 (), &
ldw‹k
, 
VALUE
,

237 
PARSEC_DTD_ARG_END
 );

239 
	`∑r£c_dtd_d©a_Êush
–
dtd_ç
, 
	`PARSEC_DTD_TILE_OF
(
T
, 
m
, 
k
) );

241  
n
 = 
k
+1;Ç < 
dcA
->
su≥r
.
¡
;Ç++, 
cou¡
++ ) {

242 
	`∑r£c_dtd_d©a_Êush
–
dtd_ç
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, 
n
) );

244  
m
 = 
k
+1; m < 
dcA
->
su≥r
.
mt
; m++, 
cou¡
++ ) {

245 
	`∑r£c_dtd_d©a_Êush
–
dtd_ç
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
m
, 
k
) );

247 
	`∑r£c_dtd_d©a_Êush
–
dtd_ç
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, k) );

250 
	`∑r£c_dtd_d©a_Êush_Æl
–
dtd_ç
, (
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)
dcA
 );

251 
	`∑r£c_dtd_d©a_Êush_Æl
–
dtd_ç
, (
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)
dcT
 );

253  
PARSEC_HOOK_RETURN_DONE
;

254 
	}
}

256 
check_‹thog⁄Æôy
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

257 
∑r£c_tûed_m©rix_dc_t
 *
Q
);

258 
check_Á˘‹iz©i⁄
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

259 
∑r£c_tûed_m©rix_dc_t
 *
A‹ig
,

260 
∑r£c_tûed_m©rix_dc_t
 *
A
,

261 
∑r£c_tûed_m©rix_dc_t
 *
Q
);

262 
check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

263 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

264 
∑r£c_tûed_m©rix_dc_t
 *
dcB
,

265 
∑r£c_tûed_m©rix_dc_t
 *
dcX
 );

267 
	$maö
(
¨gc
, ** 
¨gv
)

269 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

270 
ù¨am
[
IPARAM_SIZEOF
];

271 
ªt
 = 0;

274 
	`ù¨am_deÁu…_Á˘o
(
ù¨am
);

275 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 32, 200, 200);

276 
ù¨am
[
IPARAM_KP
] = 4;

277 
ù¨am
[
IPARAM_KQ
] = 1;

278 
ù¨am
[
IPARAM_LDA
] = -'m';

279 
ù¨am
[
IPARAM_LDB
] = -'m';

282 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

283 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

284 
	`PASTE_CODE_FLOPS
(
FLOPS_ZGEQRF
, ((
DagDoubÀ_t
)
M
, (DagDoubÀ_t)
N
));

286 
LDA
 = 
	`max
(
M
, LDA);

287 
LDB
 = 
	`max
(
M
, LDB);

290 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

291 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

292 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

293 
M
, 
N
, 
KP
, 
KQ
, 
P
));

296 
	`∑r£c_dtd_d©a_cﬁÀ˘i⁄_öô
((
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcA
);

298 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcT
, 1,

299 
two_dim_block_cy˛ic
, (&
dcT
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

300 
nodes
, 
ønk
, 
IB
, 
NB
, 
MT
*IB, 
N
, 0, 0,

301 
MT
*
IB
, 
N
, 
KP
, 
KQ
, 
P
));

304 
	`∑r£c_dtd_d©a_cﬁÀ˘i⁄_öô
((
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcT
);

306 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA0
, 
check
,

307 
two_dim_block_cy˛ic
, (&
dcA0
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

308 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

309 
M
, 
N
, 
KP
, 
KQ
, 
P
));

310 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcQ
, 
check
,

311 
two_dim_block_cy˛ic
, (&
dcQ
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

312 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

313 
M
, 
N
, 
KP
, 
KQ
, 
P
));

316 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB
, 
check
,

317 
two_dim_block_cy˛ic
, (&
dcB
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

318 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

319 
M
, 
NRHS
, 
KP
, 
KQ
, 
P
));

321 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcX
, 
check
,

322 
two_dim_block_cy˛ic
, (&
dcX
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

323 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

324 
M
, 
NRHS
, 
KP
, 
KQ
, 
P
));

327 if(
loud
 > 3Ë
	`¥ötf
("+++ Generate matrices ... ");

328 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 3872);

329 if–
check
 )

330 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

331 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, (∑r£c_tûed_m©rix_dc_à*)&
dcA0
 );

332 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 0., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcT
);

333 if(
loud
 > 3Ë
	`¥ötf
("Done\n");

336 
∑r£c_èskpoﬁ_t
 *
dtd_ç
 = 
	`∑r£c_dtd_èskpoﬁ_√w
();

338 
möMNT
 = 
	`mö
(
dcA
.
su≥r
.
mt
, dcA.su≥r.
¡
);

342 
	`d∂asma_add2¨ía_tûe
–&
∑r£c_dtd_¨ías_d©©y≥s
[
TILE_FULL
],

343 
dcA
.
su≥r
.
mb
*dcA.su≥r.
nb
*(
d∂asma_com∂ex64_t
),

344 
PARSEC_ARENA_ALIGNMENT_SSE
,

345 
∑r£c_d©©y≥_doubÀ_com∂ex_t
, 
dcA
.
su≥r
.
mb
 );

348 
	`d∂asma_add2¨ía_lowî
–&
∑r£c_dtd_¨ías_d©©y≥s
[
TILE_LOWER
],

349 
dcA
.
su≥r
.
mb
*dcA.su≥r.
nb
*(
d∂asma_com∂ex64_t
),

350 
PARSEC_ARENA_ALIGNMENT_SSE
,

351 
∑r£c_d©©y≥_doubÀ_com∂ex_t
, 
dcA
.
su≥r
.
mb
, 0 );

354 
	`d∂asma_add2¨ía_uµî
–&
∑r£c_dtd_¨ías_d©©y≥s
[
TILE_UPPER
],

355 
dcA
.
su≥r
.
mb
*dcA.su≥r.
nb
*(
d∂asma_com∂ex64_t
),

356 
PARSEC_ARENA_ALIGNMENT_SSE
,

357 
∑r£c_d©©y≥_doubÀ_com∂ex_t
, 
dcA
.
su≥r
.
mb
, 1 );

359 
	`d∂asma_add2¨ía_ª˘™gÀ
–&
∑r£c_dtd_¨ías_d©©y≥s
[
TILE_RECTANGLE
],

360 
dcT
.
su≥r
.
mb
*dcT.su≥r.
nb
*(
d∂asma_com∂ex64_t
),

361 
PARSEC_ARENA_ALIGNMENT_SSE
,

362 
∑r£c_d©©y≥_doubÀ_com∂ex_t
, 
dcT
.
su≥r
.
mb
, dcT.su≥r.
nb
, -1);

365 
	`∑r£c_c⁄ãxt_add_èskpoﬁ
(
∑r£c
, 
dtd_ç
);

367 
	`SYNC_TIME_START
();

369 
	`∑r£c_c⁄ãxt_°¨t
(
∑r£c
);

372 *
ôî©i⁄
 = 
	`mÆloc
(());

373 *
ôî©i⁄
 = 0;

374 
tŸÆ
 = 
möMNT
;

376 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
–
dtd_ç
, 
ö£π_èsk_geqrf
, 0, "insert_task_geqrf",

377 (), &
tŸÆ
, 
VALUE
,

378 (*), 
ôî©i⁄
, 
REF
,

379 (
two_dim_block_cy˛ic_t
 *), &
dcA
, 
REF
,

380 (
two_dim_block_cy˛ic_t
 *), &
dcT
, 
REF
,

381 
PARSEC_DTD_ARG_END
 );

384 
	`∑r£c_dtd_èskpoﬁ_waô
–
dtd_ç
 );

387 
	`∑r£c_c⁄ãxt_waô
–
∑r£c
 );

389 
	`SYNC_TIME_PRINT
(
ønk
, ("\tPxQ= %3d %-3d NB= %4d N= %7d : %14f gflops\n",

390 
P
, 
Q
, 
NB
, 
N
,

391 
gÊ›s
=(
Ê›s
/1e9)/
sync_time_ñ≠£d
));

394 
	`∑r£c_èskpoﬁ_‰ì
–
dtd_ç
 );

395 
	`‰ì
(
ôî©i⁄
);

397 if–
check
 ) {

398 i‡(
M
 >
N
) {

399 if(
loud
 > 2Ë
	`¥ötf
("+++ GenerateÅhe Q ...");

400 
	`d∂asma_zungqr
–
∑r£c
,

401 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

402 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcT
,

403 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
);

404 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

406 if(
loud
 > 2Ë
	`¥ötf
("+++ SolveÅhe system ...");

407 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
, 2354);

408 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

409 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
,

410 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
 );

411 
	`d∂asma_zgeqrs
–
∑r£c
,

412 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

413 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcT
,

414 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
 );

415 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

418 
ªt
 |
	`check_‹thog⁄Æôy
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

419 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
);

420 
ªt
 |
	`check_Á˘‹iz©i⁄
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

421 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

422 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

423 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
 );

424 
ªt
 |
	`check_sﬁuti⁄
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

425 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

426 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

427 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
 );

430 
	`¥ötf
("Check cannot beÖerformed when N > M\n");

433 
	`∑r£c_d©a_‰ì
(
dcA0
.
m©
);

434 
	`∑r£c_d©a_‰ì
(
dcQ
.
m©
);

435 
	`∑r£c_d©a_‰ì
(
dcB
.
m©
);

436 
	`∑r£c_d©a_‰ì
(
dcX
.
m©
);

437 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA0
);

438 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcQ
);

439 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcB
);

440 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcX
);

444 
	`d∂asma_m©rix_dñ2¨ía
–&
∑r£c_dtd_¨ías_d©©y≥s
[
TILE_FULL
] );

445 
	`d∂asma_m©rix_dñ2¨ía
–&
∑r£c_dtd_¨ías_d©©y≥s
[
TILE_LOWER
] );

446 
	`d∂asma_m©rix_dñ2¨ía
–&
∑r£c_dtd_¨ías_d©©y≥s
[
TILE_UPPER
] );

447 
	`d∂asma_m©rix_dñ2¨ía
–&
∑r£c_dtd_¨ías_d©©y≥s
[
TILE_RECTANGLE
] );

449 
	`∑r£c_dtd_d©a_cﬁÀ˘i⁄_föi
–(
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcA
 );

450 
	`∑r£c_dtd_d©a_cﬁÀ˘i⁄_föi
–(
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcT
 );

452 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

453 
	`∑r£c_d©a_‰ì
(
dcT
.
m©
);

454 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

455 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcT
);

457 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

459  
ªt
;

460 
	}
}

465 
	$check_‹thog⁄Æôy
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
, 
∑r£c_tûed_m©rix_dc_t
 *
Q
)

467 
two_dim_block_cy˛ic_t
 *
twodQ
 = (two_dim_block_cy˛ic_à*)
Q
;

468 
n‹mQ
 = 999999.0;

469 
ªsu…
;

470 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

471 
öfo_‹tho
;

472 
M
 = 
Q
->
m
;

473 
N
 = 
Q
->
n
;

474 
möMN
 = 
	`mö
(
M
, 
N
);

476 
	`PASTE_CODE_ALLOCATE_MATRIX
(
Id
, 1,

477 
two_dim_block_cy˛ic
, (&
Id
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

478 
Q
->
su≥r
.
nodes
, 
twodQ
->
grid
.
ønk
,

479 
Q
->
mb
, Q->
nb
, 
möMN
, minMN, 0, 0,

480 
möMN
, möMN, 
twodQ
->
grid
.
krows
,ÅwodQ->grid.
kcﬁs
,ÅwodQ->grid.
rows
));

482 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
Id
);

485 i‡–
M
 >
N
 ) {

486 
	`d∂asma_zhîk
–
∑r£c
, 
d∂asmaUµî
, 
d∂asmaC⁄jTøns
,

487 1.0, 
Q
, -1.0, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
 );

489 
	`d∂asma_zhîk
–
∑r£c
, 
d∂asmaUµî
, 
d∂asmaNoTøns
,

490 1.0, 
Q
, -1.0, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
 );

493 
n‹mQ
 = 
	`d∂asma_zœnhe
(
∑r£c
, 
d∂asmaInfN‹m
, 
d∂asmaUµî
, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
);

495 
ªsu…
 = 
n‹mQ
 / (
möMN
 * 
ïs
);

496 i‡–
loud
 ) {

497 
	`¥ötf
("============\n");

498 
	`¥ötf
("CheckingÅhe orthogonality of Q \n");

499 
	`¥ötf
("||Id-Q'*Q||_oÿ/ (N*ïsË%ê\n", 
ªsu…
);

502 i‡–
	`i¢™
(
ªsu…
Ë|| 
	`isöf
(result) || (result > 60.0) ) {

503 i‡–
loud
 ) 
	`¥ötf
("-- Orthogonality is suspicious ! \n");

504 
öfo_‹tho
=1;

507 i‡–
loud
 ) 
	`¥ötf
("-- Orthogonality is CORRECT ! \n");

508 
öfo_‹tho
=0;

511 
	`∑r£c_d©a_‰ì
(
Id
.
m©
);

512 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
Id
);

513  
öfo_‹tho
;

514 
	}
}

520 
	$check_Á˘‹iz©i⁄
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

521 
∑r£c_tûed_m©rix_dc_t
 *
A‹ig
,

522 
∑r£c_tûed_m©rix_dc_t
 *
A
,

523 
∑r£c_tûed_m©rix_dc_t
 *
Q
)

525 
∑r£c_tûed_m©rix_dc_t
 *
subA
;

526 
two_dim_block_cy˛ic_t
 *
twodA
 = (two_dim_block_cy˛ic_à*)
A
;

527 
An‹m
, 
Rn‹m
;

528 
ªsu…
;

529 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

530 
öfo_Á˘‹iz©i⁄
;

531 
M
 = 
A
->
m
;

532 
N
 = 
A
->
n
;

533 
möMN
 = 
	`mö
(
M
, 
N
);

535 
	`PASTE_CODE_ALLOCATE_MATRIX
(
ResiduÆ
, 1,

536 
two_dim_block_cy˛ic
, (&
ResiduÆ
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

537 
A
->
su≥r
.
nodes
, 
twodA
->
grid
.
ønk
,

538 
A
->
mb
, A->
nb
, 
M
, 
N
, 0, 0,

539 
M
, 
N
, 
twodA
->
grid
.
krows
,ÅwodA->grid.
kcﬁs
,ÅwodA->grid.
rows
));

541 
	`PASTE_CODE_ALLOCATE_MATRIX
(
R
, 1,

542 
two_dim_block_cy˛ic
, (&
R
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

543 
A
->
su≥r
.
nodes
, 
twodA
->
grid
.
ønk
,

544 
A
->
mb
, A->
nb
, 
N
, N, 0, 0,

545 
N
, N, 
twodA
->
grid
.
krows
,ÅwodA->grid.
kcﬁs
,ÅwodA->grid.
rows
));

548 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
, 
A‹ig
, (
∑r£c_tûed_m©rix_dc_t
 *)&
ResiduÆ
 );

551 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 0., (
∑r£c_tûed_m©rix_dc_t
 *)&
R
);

553 
subA
 = 
	`tûed_m©rix_subm©rix
–
A
, 0, 0, 
N
, N );

554 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµî
, 
subA
, (
∑r£c_tûed_m©rix_dc_t
 *)&
R
 );

555 
	`‰ì
(
subA
);

558 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaNoTøns
, dplasmaNoTrans,

559 -1.0, 
Q
, (
∑r£c_tûed_m©rix_dc_t
 *)&
R
,

560 1.0, (
∑r£c_tûed_m©rix_dc_t
 *)&
ResiduÆ
);

563 
	`∑r£c_d©a_‰ì
(
R
.
m©
);

564 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
R
);

566 
Rn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
ResiduÆ
);

567 
An‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
A‹ig
);

569 
ªsu…
 = 
Rn‹m
 / ( 
An‹m
 * 
möMN
 * 
ïs
);

571 i‡–
loud
 ) {

572 
	`¥ötf
("============\n");

573 
	`¥ötf
("CheckingÅhe QR Factorization \n");

574 
	`¥ötf
("-- ||A-QR||_oo/(||A||_oo.N.ïsË%ê\n", 
ªsu…
 );

577 i‡–
	`i¢™
(
ªsu…
Ë|| 
	`isöf
(result) || (result > 60.0) ) {

578 i‡–
loud
 ) 
	`¥ötf
("-- Factorization is suspicious ! \n");

579 
öfo_Á˘‹iz©i⁄
 = 1;

582 i‡–
loud
 ) 
	`¥ötf
("-- Factorization is CORRECT ! \n");

583 
öfo_Á˘‹iz©i⁄
 = 0;

586 
	`∑r£c_d©a_‰ì
(
ResiduÆ
.
m©
);

587 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
ResiduÆ
);

588  
öfo_Á˘‹iz©i⁄
;

589 
	}
}

591 
	$check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

592 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

593 
∑r£c_tûed_m©rix_dc_t
 *
dcB
,

594 
∑r£c_tûed_m©rix_dc_t
 *
dcX
 )

596 
∑r£c_tûed_m©rix_dc_t
 *
subX
;

597 
öfo_sﬁuti⁄
;

598 
Rn‹m
 = 0.0;

599 
An‹m
 = 0.0;

600 
Bn‹m
 = 0.0;

601 
Xn‹m
, 
ªsu…
;

602 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

604 
subX
 = 
	`tûed_m©rix_subm©rix
–
dcX
, 0, 0, 
dcA
->
n
, dcX->n );

606 
An‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcA
);

607 
Bn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcB
);

608 
Xn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
subX
);

611 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaNoTøns
, d∂asmaNoTøns, 1.0, 
dcA
, 
subX
, -1.0, 
dcB
);

614 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaC⁄jTøns
, 
d∂asmaNoTøns
,

615 1.0, 
dcA
, 
dcB
, 0., 
subX
 );

617 
Rn‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, 
subX
 );

618 
	`‰ì
(
subX
);

620 
ªsu…
 = 
Rn‹m
 / ( ( 
An‹m
 * 
Xn‹m
 + 
Bn‹m
 ) * 
dcA
->
n
 * 
ïs
 ) ;

622 i‡–
loud
 > 2 ) {

623 
	`¥ötf
("============\n");

624 
	`¥ötf
("CheckingÅhe Residual ofÅhe solution \n");

625 i‡–
loud
 > 3 )

626 
	`¥ötf
( "-- ||A||_oo = %e, ||X||_oo = %e, ||B||_oo= %e, ||A X - B||_oo = %e\n",

627 
An‹m
, 
Xn‹m
, 
Bn‹m
, 
Rn‹m
 );

629 
	`¥ötf
("-- ||Ax-B||_oo/((||A||_oo||x||_oo+||B||_oo).N.ïsË%ê\n", 
ªsu…
);

632 i‡–
	`i¢™
(
Xn‹m
Ë|| 
	`isöf
(Xn‹mË|| i¢™(
ªsu…
) || isinf(result) || (result > 60.0) ) {

633 if–
loud
 ) 
	`¥ötf
("-- Solution is suspicious ! \n");

634 
öfo_sﬁuti⁄
 = 1;

637 if–
loud
 ) 
	`¥ötf
("-- Solution is CORRECT ! \n");

638 
öfo_sﬁuti⁄
 = 0;

641  
öfo_sﬁuti⁄
;

642 
	}
}

	@testing_zgeqrf_hqr.c

10 
	~"comm⁄.h
"

11 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

13 
check_‹thog⁄Æôy
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

14 
∑r£c_tûed_m©rix_dc_t
 *
Q
);

15 
check_Á˘‹iz©i⁄
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

16 
∑r£c_tûed_m©rix_dc_t
 *
A‹ig
,

17 
∑r£c_tûed_m©rix_dc_t
 *
A
,

18 
∑r£c_tûed_m©rix_dc_t
 *
Q
);

19 
check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

20 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

21 
∑r£c_tûed_m©rix_dc_t
 *
dcB
,

22 
∑r£c_tûed_m©rix_dc_t
 *
dcX
 );

24 
	$maö
(
¨gc
, ** 
¨gv
)

26 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

27 
ù¨am
[
IPARAM_SIZEOF
];

28 
ªt
 = 0;

29 
d∂asma_qπªe_t
 
qπªe
;

32 
	`ù¨am_deÁu…_Á˘o
(
ù¨am
);

33 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 32, 200, 200);

34 
ù¨am
[
IPARAM_KP
] = 1;

35 
ù¨am
[
IPARAM_KQ
] = 1;

36 
ù¨am
[
IPARAM_LDA
] = -'m';

37 
ù¨am
[
IPARAM_LDB
] = -'m';

38 
ù¨am
[
IPARAM_QR_HLVL_SZE
] = -'P';

41 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

44 
ù¨am
[
IPARAM_KP
] = 1;

45 
ù¨am
[
IPARAM_KQ
] = 1;

47 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

48 
	`PASTE_CODE_FLOPS
(
FLOPS_ZGEQRF
, ((
DagDoubÀ_t
)
M
, (DagDoubÀ_t)
N
));

50 
LDA
 = 
	`max
(
M
, LDA);

52 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

53 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

54 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

55 
M
, 
N
, 
KP
, 
KQ
, 
P
));

56 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcTS
, 1,

57 
two_dim_block_cy˛ic
, (&
dcTS
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

58 
nodes
, 
ønk
, 
IB
, 
NB
, 
MT
*IB, 
N
, 0, 0,

59 
MT
*
IB
, 
N
, 
KP
, 
KQ
, 
P
));

60 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcTT
, 1,

61 
two_dim_block_cy˛ic
, (&
dcTT
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

62 
nodes
, 
ønk
, 
IB
, 
NB
, 
MT
*IB, 
N
, 0, 0,

63 
MT
*
IB
, 
N
, 
KP
, 
KQ
, 
P
));

64 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA0
, 
check
,

65 
two_dim_block_cy˛ic
, (&
dcA0
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

66 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

67 
M
, 
N
, 
KP
, 
KQ
, 
P
));

68 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcQ
, 
check
,

69 
two_dim_block_cy˛ic
, (&
dcQ
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

70 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

71 
M
, 
N
, 
KP
, 
KQ
, 
P
));

74 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB
, 
check
,

75 
two_dim_block_cy˛ic
, (&
dcB
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

76 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

77 
M
, 
NRHS
, 
KP
, 
KQ
, 
P
));

79 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcX
, 
check
,

80 
two_dim_block_cy˛ic
, (&
dcX
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

81 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

82 
M
, 
NRHS
, 
KP
, 
KQ
, 
P
));

85 if(
loud
 > 3Ë
	`¥ötf
("+++ Generate matrices ... ");

86 
	`d∂asma_z∂tmg
–
∑r£c
, 
m©rix_öô
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
øndom_£ed
 );

87 if–
check
 )

88 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

89 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, (∑r£c_tûed_m©rix_dc_à*)&
dcA0
 );

90 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 0., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTS
);

91 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 0., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTT
);

92 if(
loud
 > 3Ë
	`¥ötf
("Done\n");

94 
	`d∂asma_hqr_öô
–&
qπªe
,

95 
d∂asmaNoTøns
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

96 
ù¨am
[
IPARAM_LOWLVL_TREE
], i∑øm[
IPARAM_HIGHLVL_TREE
],

97 
ù¨am
[
IPARAM_QR_TS_SZE
], i∑øm[
IPARAM_QR_HLVL_SZE
],

98 
ù¨am
[
IPARAM_QR_DOMINO
], i∑øm[
IPARAM_QR_TSRR
] );

101 
	`PASTE_CODE_ENQUEUE_KERNEL
(
∑r£c
, 
zgeqrf_∑øm
,

102 (&
qπªe
,

103 (
∑r£c_tûed_m©rix_dc_t
*)&
dcA
,

104 (
∑r£c_tûed_m©rix_dc_t
*)&
dcTS
,

105 (
∑r£c_tûed_m©rix_dc_t
*)&
dcTT
));

108 
	`SYNC_TIME_START
();

109 
	`∑r£c_c⁄ãxt_°¨t
(
∑r£c
);

110 
	`TIME_START
();

111 
	`∑r£c_c⁄ãxt_waô
(
∑r£c
);

113 
	`SYNC_TIME_PRINT
(
ønk
,

115 
ù¨am
[
IPARAM_NNODES
],

116 
ù¨am
[
IPARAM_NCORES
],

117 
ù¨am
[
IPARAM_P
],

118 
ù¨am
[
IPARAM_IB
],

119 
ù¨am
[
IPARAM_MB
],

120 
ù¨am
[
IPARAM_NB
],

121 
ù¨am
[
IPARAM_QR_TS_SZE
],

122 
ù¨am
[
IPARAM_QR_HLVL_SZE
],

123 
ù¨am
[
IPARAM_LOWLVL_TREE
],

124 
ù¨am
[
IPARAM_HIGHLVL_TREE
],

125 
ù¨am
[
IPARAM_QR_DOMINO
],

126 
ù¨am
[
IPARAM_QR_TSRR
],

127 
ù¨am
[
IPARAM_M
],

128 
ù¨am
[
IPARAM_N
],

129 
gÊ›s
 = (
Ê›s
/1e9)/(
sync_time_ñ≠£d
)));

130 if(
loud
 >5 && 
ønk
 == 0) {

131 
	`¥ötf
("<DartMeasurementÇame=\"performance\"Åype=\"numeric/double\"\n"

135 
gÊ›s
);

138 #i‡
	`deföed
(
PARSEC_SIM
)

139 i‡–
ønk
 == 0 ) {

140 
	`¥ötf
("zgeqrf HQR simulation NP= %d NC= %d P= %d qr_a= %d qr_p = %dÅreel= %dÅreeh= %d domino= %d RR= %d MT= %d NT= %d : %d \n",

141 
ù¨am
[
IPARAM_NNODES
],

142 
ù¨am
[
IPARAM_NCORES
],

143 
ù¨am
[
IPARAM_P
],

144 
ù¨am
[
IPARAM_QR_TS_SZE
],

145 
ù¨am
[
IPARAM_QR_HLVL_SZE
],

146 
ù¨am
[
IPARAM_LOWLVL_TREE
],

147 
ù¨am
[
IPARAM_HIGHLVL_TREE
],

148 
ù¨am
[
IPARAM_QR_DOMINO
],

149 
ù¨am
[
IPARAM_QR_TSRR
],

150 
MT
, 
NT
,

151 
	`∑r£c_gësimuœti⁄d©e
–
∑r£c
 ));

155 
	`d∂asma_zgeqrf_∑øm_De°ru˘
–
PARSEC_zgeqrf_∑øm
 );

157 if–
check
 ) {

158 i‡(
M
 >
N
) {

159 if(
loud
 > 2Ë
	`¥ötf
("+++ GenerateÅhe Q ...");

160 
	`d∂asma_zungqr_∑øm
–
∑r£c
, &
qπªe
,

161 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

162 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTS
,

163 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTT
,

164 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
);

165 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

167 if(
loud
 > 2Ë
	`¥ötf
("+++ SolveÅhe system ...");

168 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
, 
øndom_£ed
+1);

169 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

170 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
,

171 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
 );

172 
	`d∂asma_zgeqrs_∑øm
–
∑r£c
, &
qπªe
,

173 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

174 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTS
,

175 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTT
,

176 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
 );

177 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

180 
ªt
 |
	`check_‹thog⁄Æôy
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

181 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
);

182 
ªt
 |
	`check_Á˘‹iz©i⁄
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

183 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

184 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

185 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
 );

186 
ªt
 |
	`check_sﬁuti⁄
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

187 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

188 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

189 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
 );

192 
	`¥ötf
("Check cannot beÖerformed when N > M\n");

195 
	`∑r£c_d©a_‰ì
(
dcA0
.
m©
);

196 
	`∑r£c_d©a_‰ì
(
dcQ
.
m©
);

197 
	`∑r£c_d©a_‰ì
(
dcB
.
m©
);

198 
	`∑r£c_d©a_‰ì
(
dcX
.
m©
);

199 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA0
);

200 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcQ
);

201 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcB
);

202 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcX
);

205 
	`d∂asma_hqr_föÆize
–&
qπªe
 );

207 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

208 
	`∑r£c_d©a_‰ì
(
dcTS
.
m©
);

209 
	`∑r£c_d©a_‰ì
(
dcTT
.
m©
);

210 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

211 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcTS
);

212 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcTT
);

214 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

216  
ªt
;

217 
	}
}

222 
	$check_‹thog⁄Æôy
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
, 
∑r£c_tûed_m©rix_dc_t
 *
Q
)

224 
two_dim_block_cy˛ic_t
 *
twodQ
 = (two_dim_block_cy˛ic_à*)
Q
;

225 
n‹mQ
 = 999999.0;

226 
ªsu…
;

227 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

228 
öfo_‹tho
;

229 
M
 = 
Q
->
m
;

230 
N
 = 
Q
->
n
;

231 
möMN
 = 
	`mö
(
M
, 
N
);

233 
	`PASTE_CODE_ALLOCATE_MATRIX
(
Id
, 1,

234 
two_dim_block_cy˛ic
, (&
Id
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

235 
Q
->
su≥r
.
nodes
, 
twodQ
->
grid
.
ønk
,

236 
Q
->
mb
, Q->
nb
, 
möMN
, minMN, 0, 0,

237 
möMN
, möMN, 
twodQ
->
grid
.
krows
,ÅwodQ->grid.
kcﬁs
,ÅwodQ->grid.
rows
));

239 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
Id
);

242 i‡–
M
 >
N
 ) {

243 
	`d∂asma_zhîk
–
∑r£c
, 
d∂asmaUµî
, 
d∂asmaC⁄jTøns
,

244 1.0, 
Q
, -1.0, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
 );

246 
	`d∂asma_zhîk
–
∑r£c
, 
d∂asmaUµî
, 
d∂asmaNoTøns
,

247 1.0, 
Q
, -1.0, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
 );

250 
n‹mQ
 = 
	`d∂asma_zœnhe
(
∑r£c
, 
d∂asmaInfN‹m
, 
d∂asmaUµî
, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
);

252 
ªsu…
 = 
n‹mQ
 / (
möMN
 * 
ïs
);

253 i‡–
loud
 ) {

254 
	`¥ötf
("============\n");

255 
	`¥ötf
("CheckingÅhe orthogonality of Q \n");

256 
	`¥ötf
("||Id-Q'*Q||_oÿ/ (N*ïsË%ê\n", 
ªsu…
);

259 i‡–
	`i¢™
(
ªsu…
Ë|| 
	`isöf
(result) || (result > 60.0) ) {

260 i‡–
loud
 ) 
	`¥ötf
("-- Orthogonality is suspicious ! \n");

261 
öfo_‹tho
=1;

264 i‡–
loud
 ) 
	`¥ötf
("-- Orthogonality is CORRECT ! \n");

265 
öfo_‹tho
=0;

268 
	`∑r£c_d©a_‰ì
(
Id
.
m©
);

269 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
Id
);

270  
öfo_‹tho
;

271 
	}
}

277 
	$check_Á˘‹iz©i⁄
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

278 
∑r£c_tûed_m©rix_dc_t
 *
A‹ig
,

279 
∑r£c_tûed_m©rix_dc_t
 *
A
,

280 
∑r£c_tûed_m©rix_dc_t
 *
Q
)

282 
∑r£c_tûed_m©rix_dc_t
 *
subA
;

283 
two_dim_block_cy˛ic_t
 *
twodA
 = (two_dim_block_cy˛ic_à*)
A
;

284 
An‹m
, 
Rn‹m
;

285 
ªsu…
;

286 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

287 
öfo_Á˘‹iz©i⁄
;

288 
M
 = 
A
->
m
;

289 
N
 = 
A
->
n
;

290 
möMN
 = 
	`mö
(
M
, 
N
);

292 
	`PASTE_CODE_ALLOCATE_MATRIX
(
ResiduÆ
, 1,

293 
two_dim_block_cy˛ic
, (&
ResiduÆ
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

294 
A
->
su≥r
.
nodes
, 
twodA
->
grid
.
ønk
,

295 
A
->
mb
, A->
nb
, 
M
, 
N
, 0, 0,

296 
M
, 
N
, 
twodA
->
grid
.
krows
,ÅwodA->grid.
kcﬁs
,ÅwodA->grid.
rows
));

298 
	`PASTE_CODE_ALLOCATE_MATRIX
(
R
, 1,

299 
two_dim_block_cy˛ic
, (&
R
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

300 
A
->
su≥r
.
nodes
, 
twodA
->
grid
.
ønk
,

301 
A
->
mb
, A->
nb
, 
N
, N, 0, 0,

302 
N
, N, 
twodA
->
grid
.
krows
,ÅwodA->grid.
kcﬁs
,ÅwodA->grid.
rows
));

305 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
, 
A‹ig
, (
∑r£c_tûed_m©rix_dc_t
 *)&
ResiduÆ
 );

308 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 0., (
∑r£c_tûed_m©rix_dc_t
 *)&
R
);

310 
subA
 = 
	`tûed_m©rix_subm©rix
–
A
, 0, 0, 
N
, N );

311 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµî
, 
subA
, (
∑r£c_tûed_m©rix_dc_t
 *)&
R
 );

312 
	`‰ì
(
subA
);

315 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaNoTøns
, dplasmaNoTrans,

316 -1.0, 
Q
, (
∑r£c_tûed_m©rix_dc_t
 *)&
R
,

317 1.0, (
∑r£c_tûed_m©rix_dc_t
 *)&
ResiduÆ
);

320 
	`∑r£c_d©a_‰ì
(
R
.
m©
);

321 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
R
);

323 
Rn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
ResiduÆ
);

324 
An‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
A‹ig
);

326 
ªsu…
 = 
Rn‹m
 / ( 
An‹m
 * 
möMN
 * 
ïs
);

328 i‡–
loud
 ) {

329 
	`¥ötf
("============\n");

330 
	`¥ötf
("CheckingÅhe QR Factorization \n");

331 
	`¥ötf
("-- ||A-QR||_oo/(||A||_oo.N.ïsË%ê\n", 
ªsu…
 );

334 i‡–
	`i¢™
(
ªsu…
Ë|| 
	`isöf
(result) || (result > 60.0) ) {

335 i‡–
loud
 ) 
	`¥ötf
("-- Factorization is suspicious ! \n");

336 
öfo_Á˘‹iz©i⁄
 = 1;

339 i‡–
loud
 ) 
	`¥ötf
("-- Factorization is CORRECT ! \n");

340 
öfo_Á˘‹iz©i⁄
 = 0;

343 
	`∑r£c_d©a_‰ì
(
ResiduÆ
.
m©
);

344 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
ResiduÆ
);

345  
öfo_Á˘‹iz©i⁄
;

346 
	}
}

348 
	$check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

349 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

350 
∑r£c_tûed_m©rix_dc_t
 *
dcB
,

351 
∑r£c_tûed_m©rix_dc_t
 *
dcX
 )

353 
∑r£c_tûed_m©rix_dc_t
 *
subX
;

354 
öfo_sﬁuti⁄
;

355 
Rn‹m
 = 0.0;

356 
An‹m
 = 0.0;

357 
Bn‹m
 = 0.0;

358 
Xn‹m
, 
ªsu…
;

359 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

361 
subX
 = 
	`tûed_m©rix_subm©rix
–
dcX
, 0, 0, 
dcA
->
n
, dcX->n );

363 
An‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcA
);

364 
Bn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcB
);

365 
Xn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
subX
);

368 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaNoTøns
, d∂asmaNoTøns, 1.0, 
dcA
, 
subX
, -1.0, 
dcB
);

371 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaC⁄jTøns
, 
d∂asmaNoTøns
,

372 1.0, 
dcA
, 
dcB
, 0., 
subX
 );

374 
Rn‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, 
subX
 );

375 
	`‰ì
(
subX
);

377 
ªsu…
 = 
Rn‹m
 / ( ( 
An‹m
 * 
Xn‹m
 + 
Bn‹m
 ) * 
dcA
->
n
 * 
ïs
 ) ;

379 i‡–
loud
 > 2 ) {

380 
	`¥ötf
("============\n");

381 
	`¥ötf
("CheckingÅhe Residual ofÅhe solution \n");

382 i‡–
loud
 > 3 )

383 
	`¥ötf
( "-- ||A||_oo = %e, ||X||_oo = %e, ||B||_oo= %e, ||A X - B||_oo = %e\n",

384 
An‹m
, 
Xn‹m
, 
Bn‹m
, 
Rn‹m
 );

386 
	`¥ötf
("-- ||Ax-B||_oo/((||A||_oo||x||_oo+||B||_oo).N.ïsË%ê\n", 
ªsu…
);

389 i‡–
	`i¢™
(
Xn‹m
Ë|| 
	`isöf
(Xn‹mË|| i¢™(
ªsu…
) || isinf(result) || (result > 60.0) ) {

390 if–
loud
 ) 
	`¥ötf
("-- Solution is suspicious ! \n");

391 
öfo_sﬁuti⁄
 = 1;

394 if–
loud
 ) 
	`¥ötf
("-- Solution is CORRECT ! \n");

395 
öfo_sﬁuti⁄
 = 0;

398  
öfo_sﬁuti⁄
;

399 
	}
}

	@testing_zgeqrf_rd.c

10 
	~"comm⁄.h
"

11 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

12 
	~"∑r£c/d©a_di°/m©rix/two_dim_èbuœr.h
"

14 
check_‹thog⁄Æôy
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

15 
∑r£c_tûed_m©rix_dc_t
 *
Q
);

16 
check_Á˘‹iz©i⁄
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

17 
∑r£c_tûed_m©rix_dc_t
 *
A‹ig
,

18 
∑r£c_tûed_m©rix_dc_t
 *
A
,

19 
∑r£c_tûed_m©rix_dc_t
 *
Q
);

20 
check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

21 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

22 
∑r£c_tûed_m©rix_dc_t
 *
dcB
,

23 
∑r£c_tûed_m©rix_dc_t
 *
dcX
 );

25 
	$maö
(
¨gc
, ** 
¨gv
)

27 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

28 
ù¨am
[
IPARAM_SIZEOF
];

29 
ªt
 = 0;

30 
£ed
;

33 
	`ù¨am_deÁu…_Á˘o
(
ù¨am
);

34 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 48, 192, 192);

35 
ù¨am
[
IPARAM_KP
] = 2;

36 
ù¨am
[
IPARAM_LDA
] = -'m';

37 
ù¨am
[
IPARAM_LDB
] = -'m';

40 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

41 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

42 
	`PASTE_CODE_FLOPS
(
FLOPS_ZGEQRF
, ((
DagDoubÀ_t
)
M
, (DagDoubÀ_t)
N
));

44 
£ed
 = 
	`gëpid
();

45 #i‡
	`deföed
(
PARSEC_HAVE_MPI
)

47 
	`MPI_Bˇ°
(&
£ed
, 1, 
MPI_INT
, 0, 
MPI_COMM_WORLD
);

48 #ñi‡
	`deföed
(
PARSEC_HAVE_LCI
)

49 
	`lc_bˇ°
(&
£ed
, (), 0, *
lci_globÆ_ï
);

52 
LDA
 = 
	`max
(
M
, LDA);

54 
two_dim_èbuœr_t
 
dcA
;

55 
	`two_dim_èbuœr_öô
(&
dcA
, 
m©rix_Com∂exDoubÀ
,

56 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

57 
M
, 
N
, 
NULL
);

58 
	`two_dim_èbuœr_£t_øndom_èbÀ
(&
dcA
, 
£ed
);

59 
	`∑r£c_d©a_cﬁÀ˘i⁄_£t_key
((
∑r£c_d©a_cﬁÀ˘i⁄_t
*)&
dcA
, "dcA");

61 
two_dim_èbuœr_t
 
dcT
;

62 
	`two_dim_èbuœr_öô
(&
dcT
, 
m©rix_Com∂exDoubÀ
,

63 
nodes
, 
ønk
, 
IB
, 
NB
, 
MT
*IB, 
N
, 0, 0,

64 
MT
*
IB
, 
N
, 
NULL
);

65 
	`two_dim_td_èbÀ_˛⁄e_èbÀ_°ru˘uª
(&
dcA
, &
dcT
);

66 
	`∑r£c_d©a_cﬁÀ˘i⁄_£t_key
((
∑r£c_d©a_cﬁÀ˘i⁄_t
*)&
dcT
, "dcT");

68 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA0
, 
check
,

69 
two_dim_block_cy˛ic
, (&
dcA0
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

70 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

71 
M
, 
N
, 
KP
, 
KQ
, 
P
));

72 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcQ
, 
check
,

73 
two_dim_block_cy˛ic
, (&
dcQ
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

74 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

75 
M
, 
N
, 
KP
, 
KQ
, 
P
));

78 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB
, 
check
,

79 
two_dim_block_cy˛ic
, (&
dcB
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

80 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

81 
N
, 
NRHS
, 
KP
, 
KQ
, 
P
));

83 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcX
, 
check
,

84 
two_dim_block_cy˛ic
, (&
dcX
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

85 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

86 
N
, 
NRHS
, 
KP
, 
KQ
, 
P
));

89 if(
loud
 > 3Ë
	`¥ötf
("+++ Generate matrices ... ");

90 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 3872);

91 if–
check
 )

92 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

93 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, (∑r£c_tûed_m©rix_dc_à*)&
dcA0
 );

94 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 0., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcT
);

95 if(
loud
 > 3Ë
	`¥ötf
("Done\n");

98 
	`PASTE_CODE_ENQUEUE_KERNEL
(
∑r£c
, 
zgeqrf
,

99 ((
∑r£c_tûed_m©rix_dc_t
*)&
dcA
,

100 (
∑r£c_tûed_m©rix_dc_t
*)&
dcT
));

103 
	`PASTE_CODE_PROGRESS_KERNEL
(
∑r£c
, 
zgeqrf
);

104 
	`d∂asma_zgeqrf_De°ru˘
–
PARSEC_zgeqrf
 );

106 if–
check
 ) {

107 if(
loud
 > 2Ë
	`¥ötf
("+++ GenerateÅhe Q ...");

108 
	`d∂asma_zungqr
–
∑r£c
,

109 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

110 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcT
,

111 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
);

112 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

114 if(
loud
 > 2Ë
	`¥ötf
("+++ SolveÅhe system ...");

115 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
, 2354);

116 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

117 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
, (∑r£c_tûed_m©rix_dc_à*)&
dcB
 );

118 
	`d∂asma_zgeqrs
–
∑r£c
,

119 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

120 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcT
,

121 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
);

122 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

125 
ªt
 |
	`check_‹thog⁄Æôy
(
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

126 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
);

127 
ªt
 |
	`check_Á˘‹iz©i⁄
(
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

128 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

129 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

130 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
);

131 
ªt
 |
	`check_sﬁuti⁄
(
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

132 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

133 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

134 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
);

136 
	`∑r£c_d©a_‰ì
(
dcA0
.
m©
);

137 
	`∑r£c_d©a_‰ì
(
dcQ
.
m©
);

138 
	`∑r£c_d©a_‰ì
(
dcB
.
m©
);

139 
	`∑r£c_d©a_‰ì
(
dcX
.
m©
);

140 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA0
);

141 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcQ
);

142 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcB
);

143 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcX
);

146 
	`two_dim_èbuœr_de°roy
–&
dcA
 );

147 
	`two_dim_èbuœr_de°roy
–&
dcT
 );

149 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

151  
ªt
;

152 
	}
}

158 
	$check_‹thog⁄Æôy
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
, 
∑r£c_tûed_m©rix_dc_t
 *
Q
)

160 
two_dim_block_cy˛ic_t
 *
twodQ
 = (two_dim_block_cy˛ic_à*)
Q
;

161 
n‹mQ
 = 999999.0;

162 
ªsu…
;

163 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

164 
öfo_‹tho
;

165 
M
 = 
Q
->
m
;

166 
N
 = 
Q
->
n
;

167 
möMN
 = 
	`mö
(
M
, 
N
);

169 
	`PASTE_CODE_ALLOCATE_MATRIX
(
Id
, 1,

170 
two_dim_block_cy˛ic
, (&
Id
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

171 
Q
->
su≥r
.
nodes
, 
twodQ
->
grid
.
ønk
,

172 
Q
->
mb
, Q->
nb
, 
möMN
, minMN, 0, 0,

173 
möMN
, möMN, 
twodQ
->
grid
.
krows
,ÅwodQ->grid.
kcﬁs
,ÅwodQ->grid.
rows
));

175 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
Id
);

178 i‡–
M
 >
N
 ) {

179 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaC⁄jTøns
, 
d∂asmaNoTøns
,

180 1.0, 
Q
, Q, -1.0, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
 );

182 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaNoTøns
, 
d∂asmaC⁄jTøns
,

183 1.0, 
Q
, Q, -1.0, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
 );

186 
n‹mQ
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
);

188 
ªsu…
 = 
n‹mQ
 / (
möMN
 * 
ïs
);

189 i‡–
loud
 ) {

190 
	`¥ötf
("============\n");

191 
	`¥ötf
("CheckingÅhe orthogonality of Q \n");

192 
	`¥ötf
("||Id-Q'*Q||_oÿ/ (N*ïsË%ê\n", 
ªsu…
);

195 i‡–
	`i¢™
(
ªsu…
Ë|| 
	`isöf
(result) || (result > 60.0) ) {

196 i‡–
loud
 ) 
	`¥ötf
("-- Orthogonality is suspicious ! \n");

197 
öfo_‹tho
=1;

200 i‡–
loud
 ) 
	`¥ötf
("-- Orthogonality is CORRECT ! \n");

201 
öfo_‹tho
=0;

204 
	`∑r£c_d©a_‰ì
(
Id
.
m©
);

205 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
Id
);

206  
öfo_‹tho
;

207 
	}
}

214 
	$check_Á˘‹iz©i⁄
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

215 
∑r£c_tûed_m©rix_dc_t
 *
A‹ig
,

216 
∑r£c_tûed_m©rix_dc_t
 *
A
,

217 
∑r£c_tûed_m©rix_dc_t
 *
Q
)

219 
two_dim_block_cy˛ic_t
 *
twodA
 = (two_dim_block_cy˛ic_à*)
A‹ig
;

220 
An‹m
, 
Rn‹m
;

221 
ªsu…
;

222 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

223 
öfo_Á˘‹iz©i⁄
;

224 
M
 = 
A
->
m
;

225 
N
 = 
A
->
n
;

226 
möMN
 = 
	`mö
(
M
, 
N
);

228 
	`PASTE_CODE_ALLOCATE_MATRIX
(
ResiduÆ
, 1,

229 
two_dim_block_cy˛ic
, (&
ResiduÆ
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

230 
A
->
su≥r
.
nodes
, 
twodA
->
grid
.
ønk
,

231 
A
->
mb
, A->
nb
, 
M
, 
N
, 0, 0,

232 
M
, 
N
, 
twodA
->
grid
.
krows
,ÅwodA->grid.
kcﬁs
,ÅwodA->grid.
rows
));

234 
	`PASTE_CODE_ALLOCATE_MATRIX
(
R
, 1,

235 
two_dim_block_cy˛ic
, (&
R
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

236 
A
->
su≥r
.
nodes
, 
twodA
->
grid
.
ønk
,

237 
A
->
mb
, A->
nb
, 
N
, N, 0, 0,

238 
N
, N, 
twodA
->
grid
.
krows
,ÅwodA->grid.
kcﬁs
,ÅwodA->grid.
rows
));

241 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
, 
A‹ig
, (
∑r£c_tûed_m©rix_dc_t
 *)&
ResiduÆ
 );

244 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 0., (
∑r£c_tûed_m©rix_dc_t
 *)&
R
);

245 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµî
, 
A
, (
∑r£c_tûed_m©rix_dc_t
 *)&
R
 );

248 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaNoTøns
, dplasmaNoTrans,

249 -1.0, 
Q
, (
∑r£c_tûed_m©rix_dc_t
 *)&
R
,

250 1.0, (
∑r£c_tûed_m©rix_dc_t
 *)&
ResiduÆ
);

253 
	`∑r£c_d©a_‰ì
(
R
.
m©
);

254 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
R
);

256 
Rn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
ResiduÆ
);

257 
An‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
A‹ig
);

259 
ªsu…
 = 
Rn‹m
 / ( 
An‹m
 * 
möMN
 * 
ïs
);

261 i‡–
loud
 ) {

262 
	`¥ötf
("============\n");

263 
	`¥ötf
("CheckingÅhe QR Factorization \n");

264 
	`¥ötf
("-- ||A-QR||_oo/(||A||_oo.N.ïsË%ê\n", 
ªsu…
 );

267 i‡–
	`i¢™
(
ªsu…
Ë|| 
	`isöf
(result) || (result > 60.0) ) {

268 i‡–
loud
 ) 
	`¥ötf
("-- Factorization is suspicious ! \n");

269 
öfo_Á˘‹iz©i⁄
 = 1;

272 i‡–
loud
 ) 
	`¥ötf
("-- Factorization is CORRECT ! \n");

273 
öfo_Á˘‹iz©i⁄
 = 0;

276 
	`∑r£c_d©a_‰ì
(
ResiduÆ
.
m©
);

277 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
ResiduÆ
);

278  
öfo_Á˘‹iz©i⁄
;

279 
	}
}

281 
	$check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

282 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

283 
∑r£c_tûed_m©rix_dc_t
 *
dcB
,

284 
∑r£c_tûed_m©rix_dc_t
 *
dcX
 )

286 
öfo_sﬁuti⁄
;

287 
Rn‹m
 = 0.0;

288 
An‹m
 = 0.0;

289 
Bn‹m
 = 0.0;

290 
Xn‹m
, 
ªsu…
;

291 
m
 = 
dcB
->m;

292 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

294 
An‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcA
);

295 
Bn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcB
);

296 
Xn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcX
);

299 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaNoTøns
, d∂asmaNoTøns, -1.0, 
dcA
, 
dcX
, 1.0, 
dcB
);

301 
Rn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcB
);

303 
ªsu…
 = 
Rn‹m
 / ( ( 
An‹m
 * 
Xn‹m
 + 
Bn‹m
 ) * 
m
 * 
ïs
 ) ;

305 i‡–
loud
 > 2 ) {

306 
	`¥ötf
("============\n");

307 
	`¥ötf
("CheckingÅhe Residual ofÅhe solution \n");

308 i‡–
loud
 > 3 )

309 
	`¥ötf
( "-- ||A||_oo = %e, ||X||_oo = %e, ||B||_oo= %e, ||A X - B||_oo = %e\n",

310 
An‹m
, 
Xn‹m
, 
Bn‹m
, 
Rn‹m
 );

312 
	`¥ötf
("-- ||Ax-B||_oo/((||A||_oo||x||_oo+||B||_oo).N.ïsË%ê\n", 
ªsu…
);

315 i‡–
	`i¢™
(
Xn‹m
Ë|| 
	`isöf
(Xn‹mË|| i¢™(
ªsu…
) || isinf(result) || (result > 60.0) ) {

316 if–
loud
 ) 
	`¥ötf
("-- Solution is suspicious ! \n");

317 
öfo_sﬁuti⁄
 = 1;

320 if–
loud
 ) 
	`¥ötf
("-- Solution is CORRECT ! \n");

321 
öfo_sﬁuti⁄
 = 0;

324  
öfo_sﬁuti⁄
;

325 
	}
}

	@testing_zgeqrf_systolic.c

10 
	~"comm⁄.h
"

11 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

13 
check_‹thog⁄Æôy
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

14 
∑r£c_tûed_m©rix_dc_t
 *
Q
);

15 
check_Á˘‹iz©i⁄
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

16 
∑r£c_tûed_m©rix_dc_t
 *
A‹ig
,

17 
∑r£c_tûed_m©rix_dc_t
 *
A
,

18 
∑r£c_tûed_m©rix_dc_t
 *
Q
);

19 
check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

20 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

21 
∑r£c_tûed_m©rix_dc_t
 *
dcB
,

22 
∑r£c_tûed_m©rix_dc_t
 *
dcX
 );

24 
	$maö
(
¨gc
, ** 
¨gv
)

26 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

27 
ù¨am
[
IPARAM_SIZEOF
];

28 
ªt
 = 0;

29 
d∂asma_qπªe_t
 
qπªe
;

32 
	`ù¨am_deÁu…_Á˘o
(
ù¨am
);

33 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 32, 200, 200);

34 
ù¨am
[
IPARAM_KP
] = 1;

35 
ù¨am
[
IPARAM_KQ
] = 1;

36 
ù¨am
[
IPARAM_LDA
] = -'m';

37 
ù¨am
[
IPARAM_LDB
] = -'m';

40 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

43 
ù¨am
[
IPARAM_KP
] = 1;

44 
ù¨am
[
IPARAM_KQ
] = 1;

46 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

47 
	`PASTE_CODE_FLOPS
(
FLOPS_ZGEQRF
, ((
DagDoubÀ_t
)
M
, (DagDoubÀ_t)
N
));

49 
LDA
 = 
	`max
(
M
, LDA);

51 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

52 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

53 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

54 
M
, 
N
, 
KP
, 
KQ
, 
P
));

55 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcTS
, 1,

56 
two_dim_block_cy˛ic
, (&
dcTS
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

57 
nodes
, 
ønk
, 
IB
, 
NB
, 
MT
*IB, 
N
, 0, 0,

58 
MT
*
IB
, 
N
, 
KP
, 
KQ
, 
P
));

59 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcTT
, 1,

60 
two_dim_block_cy˛ic
, (&
dcTT
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

61 
nodes
, 
ønk
, 
IB
, 
NB
, 
MT
*IB, 
N
, 0, 0,

62 
MT
*
IB
, 
N
, 
KP
, 
KQ
, 
P
));

63 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA0
, 
check
,

64 
two_dim_block_cy˛ic
, (&
dcA0
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

65 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

66 
M
, 
N
, 
KP
, 
KQ
, 
P
));

67 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcQ
, 
check
,

68 
two_dim_block_cy˛ic
, (&
dcQ
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

69 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

70 
M
, 
N
, 
KP
, 
KQ
, 
P
));

73 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB
, 
check
,

74 
two_dim_block_cy˛ic
, (&
dcB
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

75 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

76 
M
, 
NRHS
, 
KP
, 
KQ
, 
P
));

78 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcX
, 
check
,

79 
two_dim_block_cy˛ic
, (&
dcX
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

80 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

81 
M
, 
NRHS
, 
KP
, 
KQ
, 
P
));

84 if(
loud
 > 2Ë
	`¥ötf
("+++ Generate matrices ... ");

85 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 3872);

86 if–
check
 )

87 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

88 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, (∑r£c_tûed_m©rix_dc_à*)&
dcA0
 );

89 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 0., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTS
);

90 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 0., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTT
);

91 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

93 
	`d∂asma_sy°ﬁic_öô
–&
qπªe
,

94 
d∂asmaNoTøns
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

95 
ù¨am
[
IPARAM_P
],

96 
ù¨am
[
IPARAM_Q
] );

99 
	`PASTE_CODE_ENQUEUE_KERNEL
(
∑r£c
, 
zgeqrf_∑øm
,

100 (&
qπªe
,

101 (
∑r£c_tûed_m©rix_dc_t
*)&
dcA
,

102 (
∑r£c_tûed_m©rix_dc_t
*)&
dcTS
,

103 (
∑r£c_tûed_m©rix_dc_t
*)&
dcTT
));

106 
	`SYNC_TIME_START
();

107 
	`∑r£c_c⁄ãxt_°¨t
(
∑r£c
);

108 
	`TIME_START
();

109 
	`∑r£c_c⁄ãxt_waô
(
∑r£c
);

111 
	`SYNC_TIME_PRINT
(
ønk
,

113 
ù¨am
[
IPARAM_NNODES
],

114 
ù¨am
[
IPARAM_NCORES
],

115 
ù¨am
[
IPARAM_P
],

116 
ù¨am
[
IPARAM_IB
],

117 
ù¨am
[
IPARAM_MB
],

118 
ù¨am
[
IPARAM_NB
],

119 
ù¨am
[
IPARAM_Q
],

120 
ù¨am
[
IPARAM_P
],

121 
ù¨am
[
IPARAM_M
],

122 
ù¨am
[
IPARAM_N
],

123 
gÊ›s
 = (
Ê›s
/1e9)/(
sync_time_ñ≠£d
)));

124 if(
loud
 >5 && 
ønk
 == 0) {

125 
	`¥ötf
("<DartMeasurementÇame=\"performance\"Åype=\"numeric/double\"\n"

129 
gÊ›s
);

132 #i‡
	`deföed
(
PARSEC_SIM
)

133 i‡–
ønk
 == 0 ) {

134 
	`¥ötf
("zgeqrf systolic simulation NP= %d NC= %d P= %d qr_a= %d qr_p = %d MT= %d NT= %d : %d \n",

135 
ù¨am
[
IPARAM_NNODES
],

136 
ù¨am
[
IPARAM_NCORES
],

137 
ù¨am
[
IPARAM_P
],

138 
ù¨am
[
IPARAM_Q
],

139 
ù¨am
[
IPARAM_P
],

140 
MT
, 
NT
,

141 
	`∑r£c_gësimuœti⁄d©e
–
∑r£c
 ));

145 
	`d∂asma_zgeqrf_∑øm_De°ru˘
–
PARSEC_zgeqrf_∑øm
 );

147 if–
check
 ) {

148 i‡(
M
 >
N
) {

149 if(
loud
 > 2Ë
	`¥ötf
("+++ GenerateÅhe Q ...");

150 
	`d∂asma_zungqr_∑øm
–
∑r£c
, &
qπªe
,

151 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

152 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTS
,

153 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTT
,

154 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
);

155 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

157 if(
loud
 > 2Ë
	`¥ötf
("+++ SolveÅhe system ...");

158 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
, 2354);

159 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

160 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
,

161 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
 );

162 
	`d∂asma_zgeqrs_∑øm
–
∑r£c
, &
qπªe
,

163 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

164 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTS
,

165 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTT
,

166 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
 );

167 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

170 
ªt
 |
	`check_‹thog⁄Æôy
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

171 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
);

172 
ªt
 |
	`check_Á˘‹iz©i⁄
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

173 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

174 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

175 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
 );

176 
ªt
 |
	`check_sﬁuti⁄
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

177 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

178 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

179 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
 );

182 
	`¥ötf
("Check cannot beÖerformed when N > M\n");

185 
	`∑r£c_d©a_‰ì
(
dcA0
.
m©
);

186 
	`∑r£c_d©a_‰ì
(
dcQ
.
m©
);

187 
	`∑r£c_d©a_‰ì
(
dcB
.
m©
);

188 
	`∑r£c_d©a_‰ì
(
dcX
.
m©
);

189 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA0
);

190 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcQ
);

191 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcB
);

192 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcX
);

195 
	`d∂asma_sy°ﬁic_föÆize
–&
qπªe
 );

197 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

198 
	`∑r£c_d©a_‰ì
(
dcTS
.
m©
);

199 
	`∑r£c_d©a_‰ì
(
dcTT
.
m©
);

200 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

201 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcTS
);

202 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcTT
);

204 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

206  
ªt
;

207 
	}
}

212 
	$check_‹thog⁄Æôy
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
, 
∑r£c_tûed_m©rix_dc_t
 *
Q
)

214 
two_dim_block_cy˛ic_t
 *
twodQ
 = (two_dim_block_cy˛ic_à*)
Q
;

215 
n‹mQ
 = 999999.0;

216 
ªsu…
;

217 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

218 
öfo_‹tho
;

219 
M
 = 
Q
->
m
;

220 
N
 = 
Q
->
n
;

221 
möMN
 = 
	`mö
(
M
, 
N
);

223 
	`PASTE_CODE_ALLOCATE_MATRIX
(
Id
, 1,

224 
two_dim_block_cy˛ic
, (&
Id
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

225 
Q
->
su≥r
.
nodes
, 
twodQ
->
grid
.
ønk
,

226 
Q
->
mb
, Q->
nb
, 
möMN
, minMN, 0, 0,

227 
möMN
, möMN, 
twodQ
->
grid
.
krows
,ÅwodQ->grid.
kcﬁs
,ÅwodQ->grid.
rows
));

229 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
Id
);

232 i‡–
M
 >
N
 ) {

233 
	`d∂asma_zhîk
–
∑r£c
, 
d∂asmaUµî
, 
d∂asmaC⁄jTøns
,

234 1.0, 
Q
, -1.0, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
 );

236 
	`d∂asma_zhîk
–
∑r£c
, 
d∂asmaUµî
, 
d∂asmaNoTøns
,

237 1.0, 
Q
, -1.0, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
 );

240 
n‹mQ
 = 
	`d∂asma_zœnhe
(
∑r£c
, 
d∂asmaInfN‹m
, 
d∂asmaUµî
, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
);

242 
ªsu…
 = 
n‹mQ
 / (
möMN
 * 
ïs
);

243 i‡–
loud
 ) {

244 
	`¥ötf
("============\n");

245 
	`¥ötf
("CheckingÅhe orthogonality of Q \n");

246 
	`¥ötf
("||Id-Q'*Q||_oÿ/ (N*ïsË%ê\n", 
ªsu…
);

249 i‡–
	`i¢™
(
ªsu…
Ë|| 
	`isöf
(result) || (result > 60.0) ) {

250 i‡–
loud
 ) 
	`¥ötf
("-- Orthogonality is suspicious ! \n");

251 
öfo_‹tho
=1;

254 i‡–
loud
 ) 
	`¥ötf
("-- Orthogonality is CORRECT ! \n");

255 
öfo_‹tho
=0;

258 
	`∑r£c_d©a_‰ì
(
Id
.
m©
);

259 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
Id
);

260  
öfo_‹tho
;

261 
	}
}

267 
	$check_Á˘‹iz©i⁄
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
, 
∑r£c_tûed_m©rix_dc_t
 *
A‹ig
,Ö¨£c_tûed_m©rix_dc_à*
A
,Ö¨£c_tûed_m©rix_dc_à*
Q
)

269 
∑r£c_tûed_m©rix_dc_t
 *
subA
;

270 
two_dim_block_cy˛ic_t
 *
twodA
 = (two_dim_block_cy˛ic_à*)
A
;

271 
An‹m
, 
Rn‹m
;

272 
ªsu…
;

273 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

274 
öfo_Á˘‹iz©i⁄
;

275 
M
 = 
A
->
m
;

276 
N
 = 
A
->
n
;

277 
möMN
 = 
	`mö
(
M
, 
N
);

279 
	`PASTE_CODE_ALLOCATE_MATRIX
(
ResiduÆ
, 1,

280 
two_dim_block_cy˛ic
, (&
ResiduÆ
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

281 
A
->
su≥r
.
nodes
, 
twodA
->
grid
.
ønk
,

282 
A
->
mb
, A->
nb
, 
M
, 
N
, 0, 0,

283 
M
, 
N
, 
twodA
->
grid
.
krows
,ÅwodA->grid.
kcﬁs
,ÅwodA->grid.
rows
));

285 
	`PASTE_CODE_ALLOCATE_MATRIX
(
R
, 1,

286 
two_dim_block_cy˛ic
, (&
R
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

287 
A
->
su≥r
.
nodes
, 
twodA
->
grid
.
ønk
,

288 
A
->
mb
, A->
nb
, 
N
, N, 0, 0,

289 
N
, N, 
twodA
->
grid
.
krows
,ÅwodA->grid.
kcﬁs
,ÅwodA->grid.
rows
));

292 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
, 
A‹ig
, (
∑r£c_tûed_m©rix_dc_t
 *)&
ResiduÆ
 );

295 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 0., (
∑r£c_tûed_m©rix_dc_t
 *)&
R
);

297 
subA
 = 
	`tûed_m©rix_subm©rix
–
A
, 0, 0, 
N
, N );

298 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµî
, 
subA
, (
∑r£c_tûed_m©rix_dc_t
 *)&
R
 );

299 
	`‰ì
(
subA
);

302 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaNoTøns
, dplasmaNoTrans,

303 -1.0, 
Q
, (
∑r£c_tûed_m©rix_dc_t
 *)&
R
,

304 1.0, (
∑r£c_tûed_m©rix_dc_t
 *)&
ResiduÆ
);

307 
	`∑r£c_d©a_‰ì
(
R
.
m©
);

308 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
R
);

310 
Rn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
ResiduÆ
);

311 
An‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
A‹ig
);

313 
ªsu…
 = 
Rn‹m
 / ( 
An‹m
 * 
möMN
 * 
ïs
);

315 i‡–
loud
 ) {

316 
	`¥ötf
("============\n");

317 
	`¥ötf
("CheckingÅhe QR Factorization \n");

318 
	`¥ötf
("-- ||A-QR||_oo/(||A||_oo.N.ïsË%ê\n", 
ªsu…
 );

321 i‡–
	`i¢™
(
ªsu…
Ë|| 
	`isöf
(result) || (result > 60.0) ) {

322 i‡–
loud
 ) 
	`¥ötf
("-- Factorization is suspicious ! \n");

323 
öfo_Á˘‹iz©i⁄
 = 1;

326 i‡–
loud
 ) 
	`¥ötf
("-- Factorization is CORRECT ! \n");

327 
öfo_Á˘‹iz©i⁄
 = 0;

330 
	`∑r£c_d©a_‰ì
(
ResiduÆ
.
m©
);

331 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
ResiduÆ
);

332  
öfo_Á˘‹iz©i⁄
;

333 
	}
}

335 
	$check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

336 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

337 
∑r£c_tûed_m©rix_dc_t
 *
dcB
,

338 
∑r£c_tûed_m©rix_dc_t
 *
dcX
 )

340 
∑r£c_tûed_m©rix_dc_t
 *
subX
;

341 
öfo_sﬁuti⁄
;

342 
Rn‹m
 = 0.0;

343 
An‹m
 = 0.0;

344 
Bn‹m
 = 0.0;

345 
Xn‹m
, 
ªsu…
;

346 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

348 
subX
 = 
	`tûed_m©rix_subm©rix
–
dcX
, 0, 0, 
dcA
->
n
, dcX->n );

350 
An‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcA
);

351 
Bn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcB
);

352 
Xn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
subX
);

355 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaNoTøns
, d∂asmaNoTøns, 1.0, 
dcA
, 
subX
, -1.0, 
dcB
);

358 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaC⁄jTøns
, 
d∂asmaNoTøns
,

359 1.0, 
dcA
, 
dcB
, 0., 
subX
 );

361 
Rn‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, 
subX
 );

362 
	`‰ì
(
subX
);

364 
ªsu…
 = 
Rn‹m
 / ( ( 
An‹m
 * 
Xn‹m
 + 
Bn‹m
 ) * 
dcA
->
n
 * 
ïs
 ) ;

366 i‡–
loud
 > 2 ) {

367 
	`¥ötf
("============\n");

368 
	`¥ötf
("CheckingÅhe Residual ofÅhe solution \n");

369 i‡–
loud
 > 3 )

370 
	`¥ötf
( "-- ||A||_oo = %e, ||X||_oo = %e, ||B||_oo= %e, ||A X - B||_oo = %e\n",

371 
An‹m
, 
Xn‹m
, 
Bn‹m
, 
Rn‹m
 );

373 
	`¥ötf
("-- ||Ax-B||_oo/((||A||_oo||x||_oo+||B||_oo).N.ïsË%ê\n", 
ªsu…
);

376 i‡–
	`i¢™
(
Xn‹m
Ë|| 
	`isöf
(Xn‹mË|| i¢™(
ªsu…
) || isinf(result) || (result > 60.0) ) {

377 if–
loud
 ) 
	`¥ötf
("-- Solution is suspicious ! \n");

378 
öfo_sﬁuti⁄
 = 1;

381 if–
loud
 ) 
	`¥ötf
("-- Solution is CORRECT ! \n");

382 
öfo_sﬁuti⁄
 = 0;

385  
öfo_sﬁuti⁄
;

386 
	}
}

	@testing_zgesv_incpiv.c

10 
	~"comm⁄.h
"

11 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

13 
check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

14 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

15 
∑r£c_tûed_m©rix_dc_t
 *
dcB
,

16 
∑r£c_tûed_m©rix_dc_t
 *
dcX
 );

18 
	$maö
(
¨gc
, ** 
¨gv
)

20 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

21 
ù¨am
[
IPARAM_SIZEOF
];

22 
öfo
 = 0;

23 
öfo_sﬁuti⁄
 = 0;

24 
ªt
 = 0;

27 
	`ù¨am_deÁu…_Á˘o
(
ù¨am
);

28 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 40, 200, 200);

29 
ù¨am
[
IPARAM_LDA
] = -'m';

30 
ù¨am
[
IPARAM_LDB
] = -'m';

33 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

34 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

37 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

38 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

39 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

40 
M
, 
N
, 
KP
, 
KQ
, 
P
));

42 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA0
, 1,

43 
two_dim_block_cy˛ic
, (&
dcA0
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

44 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

45 
M
, 
N
, 
KP
, 
KQ
, 
P
));

47 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB
, 1,

48 
two_dim_block_cy˛ic
, (&
dcB
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

49 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

50 
N
, 
NRHS
, 
KP
, 
KQ
, 
P
));

52 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcX
, 1,

53 
two_dim_block_cy˛ic
, (&
dcX
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

54 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

55 
N
, 
NRHS
, 
KP
, 
KQ
, 
P
));

57 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcL
, 1,

58 
two_dim_block_cy˛ic
, (&
dcL
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

59 
nodes
, 
ønk
, 
IB
, 
NB
, 
MT
*IB, 
N
, 0, 0,

60 
MT
*
IB
, 
N
, 
KP
, 
KQ
, 
P
));

62 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcIPIV
, 1,

63 
two_dim_block_cy˛ic
, (&
dcIPIV
, 
m©rix_I¡egî
, 
m©rix_Tûe
,

64 
nodes
, 
ønk
, 
MB
, 1, 
M
, 
NT
, 0, 0,

65 
M
, 
NT
, 
KP
, 
KQ
, 
P
));

68 if(
loud
 > 2Ë
	`¥ötf
("+++ Generate matrices ... ");

69 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
, 3872);

70 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

75 i‡–
ønk
 == 0 ) {

76 
	`¥ötf
("***************************************************\n");

80 if–
loud
 > 2 ) 
	`¥ötf
("Generate matrices ... ");

81 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

82 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
, (∑r£c_tûed_m©rix_dc_à*)&
dcA
 );

83 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, 3872);

84 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

85 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, (∑r£c_tûed_m©rix_dc_à*)&
dcX
 );

86 if–
loud
 > 2 ) 
	`¥ötf
("Done\n");

89 if–
loud
 > 2 ) 
	`¥ötf
("Compute ... ... ");

90 
öfo
 = 
	`d∂asma_zgesv_ö˝iv
(
∑r£c
,

91 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

92 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcL
,

93 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcIPIV
,

94 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
 );

95 if–
loud
 > 2 ) 
	`¥ötf
("Done\n");

96 i‡–
öfo
 !0 ) 
	`¥ötf
("%d: Infÿ%d\n", 
ønk
, info);

99 i‡–
öfo
 == 0 ) {

100 
öfo_sﬁuti⁄
 = 
	`check_sﬁuti⁄
–
∑r£c
, 
ønk
 ? 0 : 
loud
,

101 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

102 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

103 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
 );

105 i‡–
ønk
 == 0 ) {

106 i‡–
öfo
 || 
öfo_sﬁuti⁄
) {

107 
	`¥ötf
(" ----- TESTING ZGESV ... FAILED !\n");

108 
ªt
 |= 1;

111 
	`¥ötf
(" ----- TESTING ZGESV ....... PASSED !\n");

113 
	`¥ötf
("***************************************************\n");

119 i‡–
ønk
 == 0 ) {

120 
	`¥ötf
("***************************************************\n");

124 if–
loud
 > 2 ) 
	`¥ötf
("Generate matrices ... ");

125 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

126 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
, (∑r£c_tûed_m©rix_dc_à*)&
dcA
 );

127 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, 3872);

128 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

129 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, (∑r£c_tûed_m©rix_dc_à*)&
dcX
 );

130 if–
loud
 > 2 ) 
	`¥ötf
("Done\n");

133 if–
loud
 > 2 ) 
	`¥ötf
("Compute ... ... ");

134 
öfo
 = 
	`d∂asma_zgërf_ö˝iv
(
∑r£c
,

135 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

136 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcL
,

137 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcIPIV
 );

138 i‡–
öfo
 == 0 ) {

139 
	`d∂asma_zgërs_ö˝iv
(
∑r£c
, 
d∂asmaNoTøns
,

140 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

141 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcL
,

142 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcIPIV
,

143 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
 );

145 i‡–
loud
 > 2 ) 
	`¥ötf
("Done\n");

146 i‡–
öfo
 !0 ) 
	`¥ötf
("%d: Infÿ%d\n", 
ønk
, info);

149 i‡–
öfo
 == 0 ) {

150 
öfo_sﬁuti⁄
 = 
	`check_sﬁuti⁄
–
∑r£c
, 
ønk
 ? 0 : 
loud
,

151 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

152 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

153 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
 );

155 i‡–
ønk
 == 0 ) {

156 i‡–
öfo
 || 
öfo_sﬁuti⁄
) {

157 
	`¥ötf
(" ----- TESTING ZGETRF + ZGETRS ... FAILED !\n");

158 
ªt
 |= 1;

161 
	`¥ötf
(" ----- TESTING ZGETRF + ZGETRS ....... PASSED !\n");

163 
	`¥ötf
("***************************************************\n");

169 i‡–
ønk
 == 0 ) {

170 
	`¥ötf
("***************************************************\n");

174 if–
loud
 > 2 ) 
	`¥ötf
("Generate matrices ... ");

175 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

176 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
, (∑r£c_tûed_m©rix_dc_à*)&
dcA
 );

177 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, 3872);

178 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

179 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, (∑r£c_tûed_m©rix_dc_à*)&
dcX
 );

180 if–
loud
 > 2 ) 
	`¥ötf
("Done\n");

183 if–
loud
 > 2 )
	`¥ötf
("Compute ... ... ");

184 
öfo
 = 
	`d∂asma_zgërf_ö˝iv
(
∑r£c
,

185 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

186 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcL
,

187 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcIPIV
 );

189 i‡–
öfo
 == 0 ) {

190 
	`d∂asma_zåsm∂_ö˝iv
(
∑r£c
,

191 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

192 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcL
,

193 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcIPIV
,

194 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
);

196 
	`d∂asma_zåsm
(
∑r£c
, 
d∂asmaLe·
, 
d∂asmaUµî
,

197 
d∂asmaNoTøns
, 
d∂asmaN⁄Unô
, 1.0,

198 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

199 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
);

201 i‡–
loud
 > 2 ) 
	`¥ötf
("Done\n");

202 i‡–
öfo
 !0 ) 
	`¥ötf
("%d: Infÿ%d\n", 
ønk
, info);

205 i‡–
öfo
 == 0 ) {

206 
öfo_sﬁuti⁄
 = 
	`check_sﬁuti⁄
–
∑r£c
, 
ønk
 ? 0 : 
loud
,

207 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

208 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

209 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
 );

211 i‡–
ønk
 == 0 ) {

212 i‡–
öfo
 || 
öfo_sﬁuti⁄
 ) {

213 
	`¥ötf
(" ----- TESTING ZGETRF + ZTRSMPL + ZTRSM ... FAILED !\n");

214 
ªt
 |= 1;

217 
	`¥ötf
(" ----- TESTING ZGETRF + ZTRSMPL + ZTRSM ....... PASSED !\n");

219 
	`¥ötf
("***************************************************\n");

222 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

223 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

224 
	`∑r£c_d©a_‰ì
(
dcA0
.
m©
);

225 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA0
);

226 
	`∑r£c_d©a_‰ì
(
dcB
.
m©
);

227 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcB
);

228 
	`∑r£c_d©a_‰ì
(
dcX
.
m©
);

229 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcX
);

230 
	`∑r£c_d©a_‰ì
(
dcL
.
m©
);

231 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcL
);

232 
	`∑r£c_d©a_‰ì
(
dcIPIV
.
m©
);

233 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcIPIV
);

235 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

237  
ªt
;

238 
	}
}

242 
	$check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

243 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

244 
∑r£c_tûed_m©rix_dc_t
 *
dcB
,

245 
∑r£c_tûed_m©rix_dc_t
 *
dcX
 )

247 
öfo_sﬁuti⁄
;

248 
N
 = 
dcB
->
m
;

249 
Rn‹m
, 
An‹m
, 
Bn‹m
, 
Xn‹m
, 
ªsu…
;

250 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

252 
An‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcA
);

253 
Bn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcB
);

254 
Xn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcX
);

257 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaNoTøns
, d∂asmaNoTøns, -1.0, 
dcA
, 
dcX
, 1.0, 
dcB
);

258 
Rn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcB
);

259 
ªsu…
 = 
Rn‹m
 / ( ( 
An‹m
 * 
Xn‹m
 + 
Bn‹m
 ) * 
N
 * 
ïs
 ) ;

261 if–
loud
 ) {

262 if–
loud
 > 2 )

263 
	`¥ötf
( "||A||_oo = %e, ||X||_oo = %e, ||B||_oo= %e, ||A X - B||_oo = %e\n",

264 
An‹m
, 
Xn‹m
, 
Bn‹m
, 
Rn‹m
 );

266 
	`¥ötf
("============\n");

267 
	`¥ötf
("CheckingÅhe Residual ofÅhe solution \n");

268 
	`¥ötf
("-- ||Ax-B||_oo/((||A||_oo||x||_oo+||B||_oo).N.ïsË%ê\n", 
ªsu…
);

270 i‡–
	`i¢™
(
Xn‹m
Ë|| 
	`isöf
(Xn‹mË|| i¢™(
ªsu…
) || isinf(result) || (result > 60.0) ) {

271 
öfo_sﬁuti⁄
 = 1;

274 
öfo_sﬁuti⁄
 = 0;

277  
öfo_sﬁuti⁄
;

278 
	}
}

	@testing_zgesvd.c

12 
	~"comm⁄.h
"

13 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

15 
check_sﬁuti⁄
(
N
, c⁄° *
E1
, c⁄° *
E2
);

17 
	$maö
(
¨gc
, ** 
¨gv
)

19 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

20 
ù¨am
[
IPARAM_SIZEOF
];

21 
ªt
 = 0;

22 *
s0
 = 
NULL
;

23 *
s1
;

24 
möMN
;

25 
öfo_sﬁuti⁄
;

26 
time_ge2gb
, 
time_gb2bd
, 
time_sﬁve
 = -1.;

27 
rc
;

36 
	`ù¨am_deÁu…_Á˘o
(
ù¨am
);

37 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 32, 200, 200);

38 
ù¨am
[
IPARAM_KP
] = 1;

39 
ù¨am
[
IPARAM_KQ
] = 1;

40 
ù¨am
[
IPARAM_LDA
] = -'m';

41 
ù¨am
[
IPARAM_LDB
] = -'m';

44 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

47 
ù¨am
[
IPARAM_KP
] = 1;

48 
ù¨am
[
IPARAM_KQ
] = 1;

50 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

51 
	`PASTE_CODE_FLOPS
(
FLOPS_ZGEBRD
, ((
DagDoubÀ_t
)
M
, (DagDoubÀ_t)
N
));

53 
LDA
 = 
	`max
(
M
, LDA);

55 i‡–
M
 < 
N
 ) {

56 
	`Ârötf
(
°dîr
, "ThisÅesting can onlyÖerform SVD on matrices with M >= N\n");

57  
EXIT_FAILURE
;

59 
möMN
 = 
	`d∂asma_imö
(
M
, 
N
);

62 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

63 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

64 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

65 
M
, 
N
, 
KP
, 
KQ
, 
P
));

66 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB™d
, 1,

67 
two_dim_block_cy˛ic
, (&
dcB™d
, 
m©rix_Com∂exDoubÀ
, 
m©rix_L≠ack
,

68 1, 
ønk
, 
MB
+1, 
NB
, MB+1, 
möMN
, 0, 0,

69 
MB
+1, 
möMN
, 1, 1, 1));

72 if(
loud
 > 3Ë
	`¥ötf
("+++ Generate matrices ... ");

75 i‡–
check
 ) {

78 i‡(
ønk
 == 0)

80 
tmp
 = 1. / ()
N
;

81 
Æp
 = ( 1. - 
tmp
 ) / (()–
N
 - 1 ));

82 
i
;

83 
s0
 = (*Ë
	`mÆloc
(
möMN
 * ());

85 
s0
[0] = 1.;

86 
i
=1; i < 
möMN
; i++){

87 
s0
[
i
] = ()(
N
-i-1Ë* 
Æp
 + 
tmp
;

91 
	`d∂asma_zœtms
–
∑r£c
, 
d∂asmaGíîÆ
, ()
N
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 3872);

94 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 3872);

98 
	`PASTE_CODE_ENQUEUE_KERNEL
(
∑r£c
, 
zgebrd_ge2gb
,

99 (
IB
,

100 (
∑r£c_tûed_m©rix_dc_t
*)&
dcA
,

101 (
∑r£c_tûed_m©rix_dc_t
*)&
dcB™d
));

104 
	`SYNC_TIME_START
();

105 
rc
 = 
	`∑r£c_c⁄ãxt_°¨t
(
∑r£c
);

106 
	`PARSEC_CHECK_ERROR
(
rc
, "parsec_context_start");

107 
	`TIME_START
();

108 
rc
 = 
	`∑r£c_c⁄ãxt_waô
(
∑r£c
);

109 
	`PARSEC_CHECK_ERROR
(
rc
, "parsec_context_wait");

110 
	`SYNC_TIME_STOP
();

111 
time_ge2gb
 = 
sync_time_ñ≠£d
;

113 if–
ønk
 == 0 ) {

114 *
e
;

116 
s1
 = (*)
	`mÆloc
–
möMN
 * ());

117 
e
 = (*)
	`mÆloc
–
möMN
 * ());

123 
	`TIME_START
();

124 
öfo_sﬁuti⁄
 = 
	`LAPACKE_zgbbrd
–
LAPACK_COL_MAJOR
,

126 
M
, 
N
,

127 0, 0, 
NB
,

128 
dcB™d
.
m©
, 
MB
+1,

129 
s1
, 
e
,

130 
NULL
, 1,

131 
NULL
, 1,

132 
NULL
, 1 );

133 
	`TIME_STOP
();

134 
time_gb2bd
 = 
time_ñ≠£d
;

137 i‡(
öfo_sﬁuti⁄
 == 0){

138 
	`TIME_START
();

139 
öfo_sﬁuti⁄
 = 
	`LAPACKE_zbdsqr
–
LAPACK_COL_MAJOR
, 'U',

140 
möMN
, 0, 0, 0,

141 
s1
, 
e
,

142 
NULL
, 1, NULL, 1, NULL, 1 );

143 
	`TIME_STOP
();

144 
time_sﬁve
 = 
time_ñ≠£d
;

146 
	`‰ì
(
e
);

151 
	`Ârötf
(
°dîr
, "WARNING: This code is usingÅheÇon optimized Lapack zbdsqr subroutineÅoÑeduceÅhe bandÅo bi-diagonal form. PleaseÑeplaceÅhis call byÅhe multi-threaded PLASMA implementation in orderÅo getÖerformance\n");

152 
	`¥ötf
("zgeqrf GESVD computation NP= %d NC= %d P= %d IB= %d MB= %d NB= %d qr_a= %d qr_p = %dÅreel= %dÅreeh= %d domino= %d R-bidiag= %d M= %d N= %d : %e %e %e / %f gflops\n",

153 
ù¨am
[
IPARAM_NNODES
],

154 
ù¨am
[
IPARAM_NCORES
],

155 
ù¨am
[
IPARAM_P
],

156 
ù¨am
[
IPARAM_IB
],

157 
ù¨am
[
IPARAM_MB
],

158 
ù¨am
[
IPARAM_NB
],

159 
ù¨am
[
IPARAM_QR_TS_SZE
],

160 
ù¨am
[
IPARAM_QR_HLVL_SZE
],

161 
ù¨am
[
IPARAM_LOWLVL_TREE
],

162 
ù¨am
[
IPARAM_HIGHLVL_TREE
],

163 
ù¨am
[
IPARAM_QR_DOMINO
],

164 
ù¨am
[
IPARAM_QR_TSRR
],

165 
ù¨am
[
IPARAM_M
],

166 
ù¨am
[
IPARAM_N
],

167 
time_ge2gb
, 
time_gb2bd
, 
time_sﬁve
,

168 
gÊ›s
 = (
Ê›s
/1e9)/(
time_ge2gb
+
time_gb2bd
+
time_sﬁve
));

170 #i‡
	`deföed
(
PARSEC_SIM
)

171 
	`¥ötf
("zgeqrf GESVD simulation NP= %d NC= %d P= %d qr_a= %d qr_p = %dÅreel= %dÅreeh= %d domino= %d RR= %d MT= %d NT= %d : %d \n",

172 
ù¨am
[
IPARAM_NNODES
],

173 
ù¨am
[
IPARAM_NCORES
],

174 
ù¨am
[
IPARAM_P
],

175 
ù¨am
[
IPARAM_QR_TS_SZE
],

176 
ù¨am
[
IPARAM_QR_HLVL_SZE
],

177 
ù¨am
[
IPARAM_LOWLVL_TREE
],

178 
ù¨am
[
IPARAM_HIGHLVL_TREE
],

179 
ù¨am
[
IPARAM_QR_DOMINO
],

180 
ù¨am
[
IPARAM_QR_TSRR
],

181 
MT
, 
NT
,

182 
	`∑r£c_gësimuœti⁄d©e
–
∑r£c
 ));

186 
	`d∂asma_zgebrd_ge2gb_De°ru˘
–
PARSEC_zgebrd_ge2gb
 );

188 if–
check
 && (
ønk
==0) ) {

189 i‡(
öfo_sﬁuti⁄
 == 0 ) {

190 
öfo_sﬁuti⁄
 = 
	`check_sﬁuti⁄
(
möMN
, 
s0
, 
s1
);

193 i‡(
öfo_sﬁuti⁄
 == 0) {

194 
	`¥ötf
("***************************************************\n"

199 
	`¥ötf
("***************************************************\n"

203 
	`‰ì
(
s1
);

204 
	`‰ì
(
s0
);

207 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

208 
	`∑r£c_d©a_‰ì
(
dcB™d
.
m©
);

210 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

211 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcB™d
);

213 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

215  
ªt
;

216 
	}
}

218 
	$d∂asma_dmax
–
a
, 
b
 ) {

219 i‡–
a
 < 
b
 ) {

220  
b
;

222  
a
;

224 
	}
}

229 
	$check_sﬁuti⁄
(
N
, c⁄° *
E1
, c⁄° *
E2
)

231 
öfo_sﬁuti⁄
, 
i
;

232 
ªsid
;

233 
maxtmp
;

234 
maxñ
 = 
	`Ábs
–Ábs(
E1
[0]Ë- fabs(
E2
[0]) );

235 
maxeig
 = 
	`d∂asma_dmax
–
	`Ábs
(
E1
[0]), fabs(
E2
[0]) );

236 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

238 
i
 = 1; i < 
N
; i++){

239 
ªsid
 = 
	`Ábs
(Ábs(
E1
[
i
])-Ábs(
E2
[i]));

240 
maxtmp
 = 
	`d∂asma_dmax
(
	`Ábs
(
E1
[
i
]), fabs(
E2
[i]));

243 
maxeig
 = 
	`d∂asma_dmax
(
maxtmp
, maxeig);

244 
maxñ
 = 
	`d∂asma_dmax
(
ªsid
, maxel );

247 
maxñ
 = maxñ / (
maxeig
 * 
N
 * 
ïs
);

248 
	`¥ötf
(" ======================================================\n");

249 
	`¥ötf
(" | S - söguœrcompuãd | / (|S| * N *ÉpsË: %ê\n", 
maxñ
 );

250 
	`¥ötf
(" ======================================================\n");

252 i‡–
	`i¢™
(
maxñ
Ë|| 
	`isöf
(maxel) || (maxel > 100) ) {

253 
	`¥ötf
("-- The singular valuesáre suspicious ! \n");

254 
öfo_sﬁuti⁄
 = 1;

257 
	`¥ötf
("-- The singular valuesáre CORRECT ! \n");

258 
öfo_sﬁuti⁄
 = 0;

260  
öfo_sﬁuti⁄
;

261 
	}
}

	@testing_zgetrf_1d.c

10 
	~"comm⁄.h
"

11 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

13 
check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

14 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

15 
∑r£c_tûed_m©rix_dc_t
 *
dcB
,

16 
∑r£c_tûed_m©rix_dc_t
 *
dcX
 );

18 
check_övî£
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

19 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

20 
∑r£c_tûed_m©rix_dc_t
 *
dcInvA
,

21 
∑r£c_tûed_m©rix_dc_t
 *
dcI
 );

23 
	$maö
(
¨gc
, ** 
¨gv
)

25 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

26 
ù¨am
[
IPARAM_SIZEOF
];

27 
öfo
 = 0;

28 
ªt
 = 0;

31 
	`ù¨am_deÁu…_Á˘o
(
ù¨am
);

32 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 40, 200, 200);

33 
ù¨am
[
IPARAM_P
] = 1;

34 
ù¨am
[
IPARAM_LDA
] = -'m';

35 
ù¨am
[
IPARAM_LDB
] = -'m';

36 
ù¨am
[
IPARAM_NGPUS
] = 
DPLASMA_ERR_NOT_SUPPORTED
;

39 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

40 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

41 
	`PASTE_CODE_FLOPS
(
FLOPS_ZGETRF
, ((
DagDoubÀ_t
)
M
,(DagDoubÀ_t)
N
));

43 
LDA
 = 
	`max
(
M
, LDA);

45 i‡–
M
 !
N
 && 
check
 ) {

46 
	`Ârötf
(
°dîr
, "Check is impossible if M != N\n");

47 
check
 = 0;

50 i‡–
P
 > 1 ) {

51 
	`Ârötf
(
°dîr
, "This function cannot be used withá 2D block cyclic distribution forÇow\n");

56 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

57 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

58 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

59 
M
, 
N
, 
KP
, 
KQ
, 
P
));

60 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcIPIV
, 1,

61 
two_dim_block_cy˛ic
, (&
dcIPIV
, 
m©rix_I¡egî
, 
m©rix_Tûe
,

62 
nodes
, 
ønk
, 1, 
NB
, 1, 
	`d∂asma_imö
(
M
, 
N
), 0, 0,

63 1, 
	`d∂asma_imö
(
M
, 
N
), 
KP
, 
KQ
, 
P
));

65 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA0
, 
check
,

66 
two_dim_block_cy˛ic
, (&
dcA0
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

67 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

68 
M
, 
N
, 
KP
, 
KQ
, 
P
));

70 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB
, 
check
,

71 
two_dim_block_cy˛ic
, (&
dcB
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

72 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

73 
M
, 
NRHS
, 
KP
, 
KQ
, 
P
));

74 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcX
, 
check
,

75 
two_dim_block_cy˛ic
, (&
dcX
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

76 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

77 
M
, 
NRHS
, 
KP
, 
KQ
, 
P
));

79 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcInvA
, 
check_öv
,

80 
two_dim_block_cy˛ic
, (&
dcInvA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

81 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

82 
M
, 
N
, 
KP
, 
KQ
, 
P
));

83 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcI
, 
check_öv
,

84 
two_dim_block_cy˛ic
, (&
dcI
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

85 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

86 
M
, 
N
, 
KP
, 
KQ
, 
P
));

89 i‡–
check
 ) {

90 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, 
øndom_£ed
+1);

91 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

92 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

93 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
 );

95 i‡–
check_öv
 ) {

96 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcI
);

97 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcInvA
);

100 
t
;

101 
t
 = 0;Å < 
ƒuns
;Å++) {

103 if(
loud
 > 2Ë
	`¥ötf
("+++ Generate matrices ... ");

104 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
øndom_£ed
);

106 if–
check
 && 
t
 =
ƒuns
-1 )

107 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

108 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

109 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
 );

110 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

112 
	`∑r£c_devi˚s_ªÀa£_mem‹y
();

115 if(
loud
 > 2Ë
	`¥ötf
("+++ Computing getrf ... ");

117 
	`PASTE_CODE_ENQUEUE_PROGRESS_DESTRUCT_KERNEL
(
∑r£c
, 
zgërf_1d
,

118 ((
∑r£c_tûed_m©rix_dc_t
*)&
dcA
,

119 (
∑r£c_tûed_m©rix_dc_t
*)&
dcIPIV
, &
öfo
),

120 
	`d∂asma_zgërf_1d_De°ru˘
–
PARSEC_zgërf_1d
 ));

122 if(
loud
 > 2Ë
	`¥ötf
("Done.\n");

124 
	`∑r£c_devi˚s_ª£t_lﬂd
(
∑r£c
);

127 i‡–
öfo
 != 0 ) {

128 if–
ønk
 =0 && 
loud
 ) 
	`¥ötf
("-- Fa˘‹iz©i⁄ i†su•iciou†(öfÿ%dË! \n", 
öfo
 );

129 
ªt
 |= 1;

131 i‡–
check
 ) {

135 
	`d∂asma_zgërs
(
∑r£c
, 
d∂asmaNoTøns
,

136 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

137 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcIPIV
,

138 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
 );

141 
ªt
 |
	`check_sﬁuti⁄
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

142 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

143 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

144 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
);

149 i‡–
check_öv
 ) {

150 
	`d∂asma_zgërs
(
∑r£c
, 
d∂asmaNoTøns
,

151 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

152 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcIPIV
,

153 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcInvA
 );

156 
ªt
 |
	`check_övî£
(
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

157 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

158 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcInvA
,

159 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcI
);

163 i‡–
check
 ) {

164 
	`∑r£c_d©a_‰ì
(
dcA0
.
m©
);

165 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA0
);

166 
	`∑r£c_d©a_‰ì
(
dcB
.
m©
);

167 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcB
);

168 
	`∑r£c_d©a_‰ì
(
dcX
.
m©
);

169 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcX
);

170 i‡–
check_öv
 ) {

171 
	`∑r£c_d©a_‰ì
(
dcInvA
.
m©
);

172 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcInvA
);

173 
	`∑r£c_d©a_‰ì
(
dcI
.
m©
);

174 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcI
);

178 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

179 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

180 
	`∑r£c_d©a_‰ì
(
dcIPIV
.
m©
);

181 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcIPIV
);

183 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

185  
ªt
;

186 
	}
}

188 
	$check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

189 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

190 
∑r£c_tûed_m©rix_dc_t
 *
dcB
,

191 
∑r£c_tûed_m©rix_dc_t
 *
dcX
 )

193 
öfo_sﬁuti⁄
;

194 
Rn‹m
 = 0.0;

195 
An‹m
 = 0.0;

196 
Bn‹m
 = 0.0;

197 
Xn‹m
, 
ªsu…
;

198 
m
 = 
dcB
->m;

199 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

201 
An‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcA
);

202 
Bn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcB
);

203 
Xn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcX
);

206 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaNoTøns
, d∂asmaNoTøns, -1.0, 
dcA
, 
dcX
, 1.0, 
dcB
);

208 
Rn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcB
);

210 
ªsu…
 = 
Rn‹m
 / ( ( 
An‹m
 * 
Xn‹m
 + 
Bn‹m
 ) * 
m
 * 
ïs
 ) ;

212 i‡–
loud
 > 2 ) {

213 
	`¥ötf
("============\n");

214 
	`¥ötf
("CheckingÅhe Residual ofÅhe solution \n");

215 i‡–
loud
 > 3 )

216 
	`¥ötf
( "-- ||A||_oo = %e, ||X||_oo = %e, ||B||_oo= %e, ||A X - B||_oo = %e\n",

217 
An‹m
, 
Xn‹m
, 
Bn‹m
, 
Rn‹m
 );

218 
	`¥ötf
("-- ||Ax-B||_oo/((||A||_oo||x||_oo+||B||_oo).N.ïsË%ê\n", 
ªsu…
);

221 i‡–
	`i¢™
(
Xn‹m
Ë|| 
	`isöf
(Xn‹mË|| i¢™(
ªsu…
) || isinf(result) || (result > 60.0) ) {

222 if–
loud
 ) 
	`¥ötf
("-- Solution is suspicious ! \n");

223 
öfo_sﬁuti⁄
 = 1;

226 if–
loud
 ) 
	`¥ötf
("-- Solution is CORRECT ! \n");

227 
öfo_sﬁuti⁄
 = 0;

230  
öfo_sﬁuti⁄
;

231 
	}
}

233 
	$check_övî£
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

234 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

235 
∑r£c_tûed_m©rix_dc_t
 *
dcInvA
,

236 
∑r£c_tûed_m©rix_dc_t
 *
dcI
 )

238 
öfo_sﬁuti⁄
;

239 
An‹m
 = 0.0;

240 
InvAn‹m
 = 0.0;

241 
Rn‹m
, 
ªsu…
;

242 
m
 = 
dcA
->m;

243 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

245 
An‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcA
 );

246 
InvAn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcInvA
);

249 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaNoTøns
, d∂asmaNoTøns, -1.0, 
dcA
, 
dcInvA
, 1.0, 
dcI
);

251 
Rn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcI
);

253 
ªsu…
 = 
Rn‹m
 / ( ( 
An‹m
 * 
InvAn‹m
 ) * 
m
 * 
ïs
 ) ;

255 i‡–
loud
 > 2 ) {

256 
	`¥ötf
("============\n");

257 
	`¥ötf
("CheckingÅhe Residual ofÅhe solution \n");

258 i‡–
loud
 > 3 )

259 
	`¥ötf
( "-- ||A||_oo = %e, ||A^{-1}||_oo = %e, ||A A^{-1} - I||_oo = %e\n",

260 
An‹m
, 
InvAn‹m
, 
Rn‹m
 );

261 
	`¥ötf
("-- ||AA^{-1}-I||_oo/((||A||_oo||A^{-1}||_oo).N.ïsË%ê\n", 
ªsu…
);

264 i‡–
	`i¢™
(
Rn‹m
Ë|| 
	`isöf
(Rn‹mË|| i¢™(
ªsu…
) || isinf(result) || (result > 60.0) ) {

265 if–
loud
 ) 
	`¥ötf
("-- Solution is suspicious ! \n");

266 
öfo_sﬁuti⁄
 = 1;

269 if–
loud
 ) 
	`¥ötf
("-- Solution is CORRECT ! \n");

270 
öfo_sﬁuti⁄
 = 0;

273  
öfo_sﬁuti⁄
;

274 
	}
}

	@testing_zgetrf_incpiv.c

10 
	~"comm⁄.h
"

11 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

13 
check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

14 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

15 
∑r£c_tûed_m©rix_dc_t
 *
dcB
,

16 
∑r£c_tûed_m©rix_dc_t
 *
dcX
 );

18 
check_övî£
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

19 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

20 
∑r£c_tûed_m©rix_dc_t
 *
dcInvA
,

21 
∑r£c_tûed_m©rix_dc_t
 *
dcI
 );

23 
	$maö
(
¨gc
, ** 
¨gv
)

25 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

26 
ù¨am
[
IPARAM_SIZEOF
];

27 
öfo
 = 0;

28 
ªt
 = 0;

31 
	`ù¨am_deÁu…_Á˘o
(
ù¨am
);

32 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 40, 200, 200);

33 
ù¨am
[
IPARAM_KP
] = 4;

34 
ù¨am
[
IPARAM_LDA
] = -'m';

35 
ù¨am
[
IPARAM_LDB
] = -'m';

38 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

39 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

40 
	`PASTE_CODE_FLOPS
(
FLOPS_ZGETRF
, ((
DagDoubÀ_t
)
M
,(DagDoubÀ_t)
N
));

42 
LDA
 = 
	`max
(
M
, LDA);

44 i‡–
M
 !
N
 && 
check
 ) {

45 
	`Ârötf
(
°dîr
, "Check is impossible if M != N\n");

46 
check
 = 0;

50 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

51 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

52 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

53 
M
, 
N
, 
KP
, 
KQ
, 
P
));

54 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcL
, 1,

55 
two_dim_block_cy˛ic
, (&
dcL
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

56 
nodes
, 
ønk
, 
IB
, 
NB
, 
MT
*IB, 
N
, 0, 0,

57 
MT
*
IB
, 
N
, 
KP
, 
KQ
, 
P
));

58 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcIPIV
, 1,

59 
two_dim_block_cy˛ic
, (&
dcIPIV
, 
m©rix_I¡egî
, 
m©rix_Tûe
,

60 
nodes
, 
ønk
, 
MB
, 1, 
M
, 
NT
, 0, 0,

61 
M
, 
NT
, 
KP
, 
KQ
, 
P
));

62 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA0
, 
check
,

63 
two_dim_block_cy˛ic
, (&
dcA0
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

64 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

65 
M
, 
N
, 
KP
, 
KQ
, 
P
));

67 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB
, 
check
,

68 
two_dim_block_cy˛ic
, (&
dcB
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

69 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

70 
M
, 
NRHS
, 
KP
, 
KQ
, 
P
));

71 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcX
, 
check
,

72 
two_dim_block_cy˛ic
, (&
dcX
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

73 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

74 
M
, 
NRHS
, 
KP
, 
KQ
, 
P
));

76 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcInvA
, 
check_öv
,

77 
two_dim_block_cy˛ic
, (&
dcInvA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

78 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

79 
M
, 
N
, 
KP
, 
KQ
, 
P
));

80 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcI
, 
check_öv
,

81 
two_dim_block_cy˛ic
, (&
dcI
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

82 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

83 
M
, 
N
, 
KP
, 
KQ
, 
P
));

86 if(
loud
 > 2Ë
	`¥ötf
("+++ Generate matrices ... ");

87 
	`d∂asma_z∂tmg
–
∑r£c
, 
m©rix_öô
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
øndom_£ed
 );

88 i‡–
check
 ) {

89 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

90 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

91 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
 );

92 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, 
øndom_£ed
 + 1 );

93 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

94 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

95 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
 );

97 i‡–
check_öv
 ) {

98 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcI
);

99 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcInvA
);

101 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

104 if(
loud
 > 2Ë
	`¥ötf
("+++ Computing getrf_incpiv ... ");

105 
	`PASTE_CODE_ENQUEUE_KERNEL
(
∑r£c
, 
zgërf_ö˝iv
,

106 ((
∑r£c_tûed_m©rix_dc_t
*)&
dcA
,

107 (
∑r£c_tûed_m©rix_dc_t
*)&
dcL
,

108 (
∑r£c_tûed_m©rix_dc_t
*)&
dcIPIV
,

109 &
öfo
));

111 
	`PASTE_CODE_PROGRESS_KERNEL
(
∑r£c
, 
zgërf_ö˝iv
);

112 
	`d∂asma_zgërf_ö˝iv_De°ru˘
–
PARSEC_zgërf_ö˝iv
 );

113 if(
loud
 > 2Ë
	`¥ötf
("Done.\n");

115 i‡–
öfo
 != 0 ) {

116 if–
ønk
 =0 && 
loud
 ) 
	`¥ötf
("-- Fa˘‹iz©i⁄ i†su•iciou†(öfÿ%dË! \n", 
öfo
 );

117 
ªt
 |= 1;

119 i‡–
check
 ) {

123 
	`d∂asma_zgërs_ö˝iv
–
∑r£c
, 
d∂asmaNoTøns
,

124 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

125 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcL
,

126 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcIPIV
,

127 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
 );

130 
ªt
 |
	`check_sﬁuti⁄
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

131 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

132 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

133 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
);

138 i‡–
check_öv
 ) {

139 
	`d∂asma_zgërs_ö˝iv
–
∑r£c
, 
d∂asmaNoTøns
,

140 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

141 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcL
,

142 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcIPIV
,

143 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcInvA
 );

146 
ªt
 |
	`check_övî£
(
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

147 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

148 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcInvA
,

149 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcI
);

153 i‡–
check
 ) {

154 
	`∑r£c_d©a_‰ì
(
dcA0
.
m©
);

155 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA0
);

156 
	`∑r£c_d©a_‰ì
(
dcB
.
m©
);

157 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcB
);

158 
	`∑r£c_d©a_‰ì
(
dcX
.
m©
);

159 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcX
);

160 i‡–
check_öv
 ) {

161 
	`∑r£c_d©a_‰ì
(
dcInvA
.
m©
);

162 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcInvA
);

163 
	`∑r£c_d©a_‰ì
(
dcI
.
m©
);

164 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcI
);

168 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

169 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

170 
	`∑r£c_d©a_‰ì
(
dcL
.
m©
);

171 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcL
);

172 
	`∑r£c_d©a_‰ì
(
dcIPIV
.
m©
);

173 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcIPIV
);

175 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

177  
ªt
;

178 
	}
}

180 
	$check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

181 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

182 
∑r£c_tûed_m©rix_dc_t
 *
dcB
,

183 
∑r£c_tûed_m©rix_dc_t
 *
dcX
 )

185 
öfo_sﬁuti⁄
;

186 
Rn‹m
 = 0.0;

187 
An‹m
 = 0.0;

188 
Bn‹m
 = 0.0;

189 
Xn‹m
, 
ªsu…
;

190 
m
 = 
dcB
->m;

191 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

193 
An‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcA
);

194 
Bn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcB
);

195 
Xn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcX
);

198 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaNoTøns
, d∂asmaNoTøns, -1.0, 
dcA
, 
dcX
, 1.0, 
dcB
);

200 
Rn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcB
);

202 
ªsu…
 = 
Rn‹m
 / ( ( 
An‹m
 * 
Xn‹m
 + 
Bn‹m
 ) * 
m
 * 
ïs
 ) ;

204 i‡–
loud
 > 2 ) {

205 
	`¥ötf
("============\n");

206 
	`¥ötf
("CheckingÅhe Residual ofÅhe solution \n");

207 i‡–
loud
 > 3 )

208 
	`¥ötf
( "-- ||A||_oo = %e, ||X||_oo = %e, ||B||_oo= %e, ||A X - B||_oo = %e\n",

209 
An‹m
, 
Xn‹m
, 
Bn‹m
, 
Rn‹m
 );

210 
	`¥ötf
("-- ||Ax-B||_oo/((||A||_oo||x||_oo+||B||_oo).N.ïsË%ê\n", 
ªsu…
);

213 i‡–
	`i¢™
(
Xn‹m
Ë|| 
	`isöf
(Xn‹mË|| i¢™(
ªsu…
) || isinf(result) || (result > 60.0) ) {

214 if–
loud
 ) 
	`¥ötf
("-- Solution is suspicious ! \n");

215 
öfo_sﬁuti⁄
 = 1;

218 if–
loud
 ) 
	`¥ötf
("-- Solution is CORRECT ! \n");

219 
öfo_sﬁuti⁄
 = 0;

222  
öfo_sﬁuti⁄
;

223 
	}
}

225 
	$check_övî£
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

226 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

227 
∑r£c_tûed_m©rix_dc_t
 *
dcInvA
,

228 
∑r£c_tûed_m©rix_dc_t
 *
dcI
 )

230 
öfo_sﬁuti⁄
;

231 
An‹m
 = 0.0;

232 
InvAn‹m
 = 0.0;

233 
Rn‹m
, 
ªsu…
;

234 
m
 = 
dcA
->m;

235 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

237 
An‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcA
 );

238 
InvAn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcInvA
);

241 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaNoTøns
, d∂asmaNoTøns, -1.0, 
dcA
, 
dcInvA
, 1.0, 
dcI
);

243 
Rn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcI
);

245 
ªsu…
 = 
Rn‹m
 / ( ( 
An‹m
 * 
InvAn‹m
 ) * 
m
 * 
ïs
 ) ;

247 i‡–
loud
 > 2 ) {

248 
	`¥ötf
("============\n");

249 
	`¥ötf
("CheckingÅhe Residual ofÅhe solution \n");

250 i‡–
loud
 > 3 )

251 
	`¥ötf
( "-- ||A||_oo = %e, ||A^{-1}||_oo = %e, ||A A^{-1} - I||_oo = %e\n",

252 
An‹m
, 
InvAn‹m
, 
Rn‹m
 );

253 
	`¥ötf
("-- ||AA^{-1}-I||_oo/((||A||_oo||A^{-1}||_oo).N.ïsË%ê\n", 
ªsu…
);

256 i‡–
	`i¢™
(
Rn‹m
Ë|| 
	`isöf
(Rn‹mË|| i¢™(
ªsu…
) || isinf(result) || (result > 60.0) ) {

257 if–
loud
 ) 
	`¥ötf
("-- Solution is suspicious ! \n");

258 
öfo_sﬁuti⁄
 = 1;

261 if–
loud
 ) 
	`¥ötf
("-- Solution is CORRECT ! \n");

262 
öfo_sﬁuti⁄
 = 0;

265  
öfo_sﬁuti⁄
;

266 
	}
}

	@testing_zgetrf_incpiv_dtd.c

10 
	~"comm⁄.h
"

11 
	~"d∂asma/ty≥s.h
"

12 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

13 
	~"∑r£c/öãrÁ˚s/su≥rsˇœr/ö£π_fun˘i⁄.h
"

15 
	eªgi⁄s
 {

16 
	mTILE_FULL
,

17 
	mTILE_RECTANGLE
,

18 
	mL_TILE_RECTANGLE
,

22 
	$∑r£c_c‹e_gërf_ö˝iv
(
∑r£c_executi⁄_°ªam_t
 *
es
, 
∑r£c_èsk_t
 * 
this_èsk
)

24 ()
es
;

25 
m
;

26 
n
;

27 
ib
;

28 
d∂asma_com∂ex64_t
 *
A
;

29 
lda
;

30 *
IPIV
;

31 
check_öfo
;

32 *
öfo
;

34 
	`∑r£c_dtd_u≈ack_¨gs
(
this_èsk
, &
m
, &
n
, &
ib
, &
A
, &
lda
, &
IPIV
,

35 &
check_öfo
, &
öfo
);

37 
	`CORE_zgërf_ö˝iv
(
m
, 
n
, 
ib
, 
A
, 
lda
, 
IPIV
, 
öfo
);

39 i‡(*
öfo
 !0 && 
check_öfo
)

40 
	`¥ötf
("Getrf_incpiv something is wrong\n");

42  
PARSEC_HOOK_RETURN_DONE
;

43 
	}
}

46 
	$∑r£c_c‹e_gessm
(
∑r£c_executi⁄_°ªam_t
 *
es
, 
∑r£c_èsk_t
 * 
this_èsk
)

48 ()
es
;

49 
m
;

50 
n
;

51 
k
;

52 
ib
;

53 *
IPIV
;

54 
d∂asma_com∂ex64_t
 *
L
;

55 
ldl
;

56 
d∂asma_com∂ex64_t
 *
D
;

57 
ldd
;

58 
d∂asma_com∂ex64_t
 *
A
;

59 
lda
;

61 
	`∑r£c_dtd_u≈ack_¨gs
(
this_èsk
, &
m
, &
n
, &
k
, &
ib
, &
IPIV
, &
L
, &
ldl
,

62 &
D
, &
ldd
, &
A
, &
lda
);

64 
	`CORE_zgessm
(
m
, 
n
, 
k
, 
ib
, 
IPIV
, 
D
, 
ldd
, 
A
, 
lda
);

66  
PARSEC_HOOK_RETURN_DONE
;

67 
	}
}

70 
	$∑r£c_c‹e_t°rf
(
∑r£c_executi⁄_°ªam_t
 *
es
, 
∑r£c_èsk_t
 * 
this_èsk
)

72 ()
es
;

73 
m
;

74 
n
;

75 
ib
;

76 
nb
;

77 
d∂asma_com∂ex64_t
 *
U
;

78 
ldu
;

79 
d∂asma_com∂ex64_t
 *
A
;

80 
lda
;

81 
d∂asma_com∂ex64_t
 *
L
;

82 
ldl
;

83 *
IPIV
;

84 
d∂asma_com∂ex64_t
 *
WORK
;

85 
ldw‹k
;

86 *
check_öfo
;

87 *
öfo
;

89 
	`∑r£c_dtd_u≈ack_¨gs
(
this_èsk
, &
m
, &
n
, &
ib
, &
nb
, &
U
, &
ldu
, &
A
, &
lda
, &
L
,

90 &
ldl
, &
IPIV
, &
WORK
, &
ldw‹k
, &
check_öfo
, &
öfo
);

92 
	`CORE_zt°rf
(
m
, 
n
, 
ib
, 
nb
, 
U
, 
ldu
, 
A
, 
lda
, 
L
, 
ldl
, 
IPIV
, 
WORK
, 
ldw‹k
, 
öfo
);

94 i‡(*
öfo
 !0 && 
check_öfo
)

95 
	`¥ötf
("Gtstrf something is wrong\n");

97  
PARSEC_HOOK_RETURN_DONE
;

98 
	}
}

101 
	$∑r£c_c‹e_ssssm
(
∑r£c_executi⁄_°ªam_t
 *
es
, 
∑r£c_èsk_t
 * 
this_èsk
)

103 ()
es
;

104 
m1
;

105 
n1
;

106 
m2
;

107 
n2
;

108 
k
;

109 
ib
;

110 
d∂asma_com∂ex64_t
 *
A1
;

111 
lda1
;

112 
d∂asma_com∂ex64_t
 *
A2
;

113 
lda2
;

114 
d∂asma_com∂ex64_t
 *
L1
;

115 
ldl1
;

116 
d∂asma_com∂ex64_t
 *
L2
;

117 
ldl2
;

118 *
IPIV
;

120 
	`∑r£c_dtd_u≈ack_¨gs
(
this_èsk
, &
m1
, &
n1
, &
m2
, &
n2
, &
k
, &
ib
, &
A1
, &
lda1
, &
A2
,

121 &
lda2
, &
L1
, &
ldl1
, &
L2
, &
ldl2
, &
IPIV
);

123 
	`CORE_zssssm
(
m1
, 
n1
, 
m2
, 
n2
, 
k
, 
ib
, 
A1
, 
lda1
, 
A2
, 
lda2
, 
L1
, 
ldl1
, 
L2
, 
ldl2
, 
IPIV
);

125  
PARSEC_HOOK_RETURN_DONE
;

126 
	}
}

128 
check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

129 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

130 
∑r£c_tûed_m©rix_dc_t
 *
dcB
,

131 
∑r£c_tûed_m©rix_dc_t
 *
dcX
 );

133 
check_övî£
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

134 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

135 
∑r£c_tûed_m©rix_dc_t
 *
dcInvA
,

136 
∑r£c_tûed_m©rix_dc_t
 *
dcI
 );

138 
	$maö
(
¨gc
, ** 
¨gv
)

140 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

141 
ù¨am
[
IPARAM_SIZEOF
];

142 
öfo
 = 0;

143 
ªt
 = 0;

146 
	`ù¨am_deÁu…_Á˘o
(
ù¨am
);

147 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 40, 200, 200);

148 
ù¨am
[
IPARAM_KP
] = 4;

149 
ù¨am
[
IPARAM_LDA
] = -'m';

150 
ù¨am
[
IPARAM_LDB
] = -'m';

153 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

154 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

155 
	`PASTE_CODE_FLOPS
(
FLOPS_ZGETRF
, ((
DagDoubÀ_t
)
M
,(DagDoubÀ_t)
N
));

157 
LDA
 = 
	`max
(
M
, LDA);

159 i‡–
M
 !
N
 && 
check
 ) {

160 
	`Ârötf
(
°dîr
, "Check is impossible if M != N\n");

161 
check
 = 0;

165 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

166 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

167 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

168 
M
, 
N
, 
KP
, 
KQ
, 
P
));

171 
two_dim_block_cy˛ic_t
 *
__dcA
 = &
dcA
;

172 
	`∑r£c_dtd_d©a_cﬁÀ˘i⁄_öô
((
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcA
);

174 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcL
, 1,

175 
two_dim_block_cy˛ic
, (&
dcL
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

176 
nodes
, 
ønk
, 
IB
, 
NB
, 
MT
*IB, 
N
, 0, 0,

177 
MT
*
IB
, 
N
, 
KP
, 
KQ
, 
P
));

180 
two_dim_block_cy˛ic_t
 *
__dcL
 = &
dcL
;

181 
	`∑r£c_dtd_d©a_cﬁÀ˘i⁄_öô
((
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcL
);

183 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcIPIV
, 1,

184 
two_dim_block_cy˛ic
, (&
dcIPIV
, 
m©rix_I¡egî
, 
m©rix_Tûe
,

185 
nodes
, 
ønk
, 
MB
, 1, 
M
, 
NT
, 0, 0,

186 
M
, 
NT
, 
KP
, 
KQ
, 
P
));

189 
two_dim_block_cy˛ic_t
 *
__dcIPIV
 = &
dcIPIV
;

190 
	`∑r£c_dtd_d©a_cﬁÀ˘i⁄_öô
((
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcIPIV
);

192 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA0
, 
check
,

193 
two_dim_block_cy˛ic
, (&
dcA0
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

194 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

195 
M
, 
N
, 
KP
, 
KQ
, 
P
));

197 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB
, 
check
,

198 
two_dim_block_cy˛ic
, (&
dcB
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

199 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

200 
M
, 
NRHS
, 
KP
, 
KQ
, 
P
));

201 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcX
, 
check
,

202 
two_dim_block_cy˛ic
, (&
dcX
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

203 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

204 
M
, 
NRHS
, 
KP
, 
KQ
, 
P
));

206 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcInvA
, 
check_öv
,

207 
two_dim_block_cy˛ic
, (&
dcInvA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

208 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

209 
M
, 
N
, 
KP
, 
KQ
, 
P
));

210 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcI
, 
check_öv
,

211 
two_dim_block_cy˛ic
, (&
dcI
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

212 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

213 
M
, 
N
, 
KP
, 
KQ
, 
P
));

216 if(
loud
 > 2Ë
	`¥ötf
("+++ Generate matrices ... ");

217 
	`d∂asma_z∂tmg
–
∑r£c
, 
m©rix_öô
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
øndom_£ed
 );

218 i‡–
check
 ) {

219 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

220 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

221 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
 );

222 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, 
øndom_£ed
 + 1 );

223 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

224 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

225 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
 );

227 i‡–
check_öv
 ) {

228 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcI
);

229 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcInvA
);

231 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

234 
∑r£c_èskpoﬁ_t
 *
dtd_ç
 = 
	`∑r£c_dtd_èskpoﬁ_√w
();

237 
k
, 
m
, 
n
;

238 
ldak
, 
ldam
;

239 
ãmpkm
, 
ãmpkn
, 
ãmpmm
, 
ãm≤n
;

240 
ib
 = 
dcL
.
su≥r
.
mb
;

241 
möMNT
 = 
	`mö
(
dcA
.
su≥r
.
mt
, dcA.su≥r.
¡
);

242 
check_öfo
;

243 
™b
, 
nb
, 
ldl
;

247 
	`d∂asma_add2¨ía_tûe
–&
∑r£c_dtd_¨ías_d©©y≥s
[
TILE_FULL
],

248 
dcA
.
su≥r
.
mb
*dcA.su≥r.
nb
*(
d∂asma_com∂ex64_t
),

249 
PARSEC_ARENA_ALIGNMENT_SSE
,

250 
∑r£c_d©©y≥_doubÀ_com∂ex_t
, 
dcA
.
su≥r
.
mb
 );

253 
	`d∂asma_add2¨ía_ª˘™gÀ
–&
∑r£c_dtd_¨ías_d©©y≥s
[
TILE_RECTANGLE
],

254 
dcA
.
su≥r
.
mb
*(),

255 
PARSEC_ARENA_ALIGNMENT_SSE
,

256 
∑r£c_d©©y≥_öt_t
, 
dcA
.
su≥r
.
mb
, 1, -1 );

259 
	`d∂asma_add2¨ía_ª˘™gÀ
–&
∑r£c_dtd_¨ías_d©©y≥s
[
L_TILE_RECTANGLE
],

260 
dcL
.
su≥r
.
mb
*dcL.su≥r.
nb
*(
d∂asma_com∂ex64_t
),

261 
PARSEC_ARENA_ALIGNMENT_SSE
,

262 
∑r£c_d©©y≥_doubÀ_com∂ex_t
, 
dcL
.
su≥r
.
mb
, dcL.su≥r.
nb
, -1);

265 
	`∑r£c_c⁄ãxt_add_èskpoﬁ
–
∑r£c
, 
dtd_ç
 );

267 
	`SYNC_TIME_START
();

272 
	`∑r£c_c⁄ãxt_°¨t
–
∑r£c
 );

275  
k
 = 0; k < 
möMNT
; k++ ) {

276 
ãmpkm
 = 
k
 =
dcA
.
su≥r
.
mt
-1 ? (dcA.su≥r.
m
)-k*(dcA.su≥r.
mb
) : dcA.super.mb;

277 
ãmpkn
 = 
k
 =
dcA
.
su≥r
.
¡
-1 ? (dcA.su≥r.
n
)-k*(dcA.su≥r.
nb
) : dcA.super.nb;

278 
ldak
 = 
	`BLKLDD
((
∑r£c_tûed_m©rix_dc_t
*)&
dcA
, 
k
);

279 
check_öfo
 = 
k
 =
dcA
.
su≥r
.
mt
-1;

281 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
–
dtd_ç
, 
∑r£c_c‹e_gërf_ö˝iv
, 0, "getrf_incpiv",

282 (), &
ãmpkm
, 
VALUE
,

283 (), &
ãmpkn
, 
VALUE
,

284 (), &
ib
, 
VALUE
,

285 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, k), 
INOUT
 | 
TILE_FULL
 | 
AFFINITY
,

286 (), &
ldak
, 
VALUE
,

287 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
IPIV
, 
k
, k), 
OUTPUT
 | 
TILE_RECTANGLE
,

288 (), &
check_öfo
, 
VALUE
,

289 (*), &
öfo
, 
REF
,

290 
PARSEC_DTD_ARG_END
 );

292  
n
 = 
k
+1;Ç < 
dcA
.
su≥r
.
¡
;Ç++ ) {

293 
ãm≤n
 = 
n
 =
dcA
.
su≥r
.
¡
-1 ? (dcA.su≥r.n)-n*(dcA.su≥r.
nb
) : dcA.super.nb;

294 
ldl
 = 
dcL
.
su≥r
.
mb
;

296 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
–
dtd_ç
, 
∑r£c_c‹e_gessm
, 0, "gessm",

297 (), &
ãmpkm
, 
VALUE
,

298 (), &
ãm≤n
, 
VALUE
,

299 (), &
ãmpkm
, 
VALUE
,

300 (), &
ib
, 
VALUE
,

301 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
IPIV
, 
k
, k), 
INPUT
 | 
TILE_RECTANGLE
,

302 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
L
, 
k
, k), 
INPUT
 | 
L_TILE_RECTANGLE
,

303 (), &
ldl
, 
VALUE
,

304 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, k), 
INPUT
 | 
TILE_FULL
,

305 (), &
ldak
, 
VALUE
,

306 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, 
n
), 
INOUT
 | 
TILE_FULL
 | 
AFFINITY
,

307 (), &
ldak
, 
VALUE
,

308 
PARSEC_DTD_ARG_END
 );

310 
	`∑r£c_dtd_d©a_Êush
–
dtd_ç
, 
	`PARSEC_DTD_TILE_OF
(
L
, 
k
, k) );

311 
	`∑r£c_dtd_d©a_Êush
–
dtd_ç
, 
	`PARSEC_DTD_TILE_OF
(
IPIV
, 
k
, k) );

313  
m
 = 
k
+1; m < 
dcA
.
su≥r
.
mt
; m++ ) {

314 
ãmpmm
 = 
m
 =
dcA
.
su≥r
.
mt
-1 ? (dcA.su≥r.m)-m*(dcA.su≥r.
mb
) : dcA.super.mb;

315 
ldam
 = 
	`BLKLDD
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
, 
m
);

316 
nb
 = 
dcL
.
su≥r
.nb;

317 
ldl
 = 
dcL
.
su≥r
.
mb
;

318 
check_öfo
 = 
m
 =
dcA
.
su≥r
.
mt
-1;

320 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
–
dtd_ç
, 
∑r£c_c‹e_t°rf
, 0, "tstrf",

321 (), &
ãmpmm
, 
VALUE
,

322 (), &
ãmpkn
, 
VALUE
,

323 (), &
ib
, 
VALUE
,

324 (), &
nb
, 
VALUE
,

325 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, k), 
INOUT
 | 
TILE_FULL
,

326 (), &
ldak
, 
VALUE
,

327 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
m
, 
k
), 
INOUT
 | 
TILE_FULL
 | 
AFFINITY
,

328 (), &
ldam
, 
VALUE
,

329 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
L
, 
m
, 
k
), 
OUTPUT
 | 
L_TILE_RECTANGLE
,

330 (), &
ldl
, 
VALUE
,

331 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
IPIV
, 
m
, 
k
), 
OUTPUT
 | 
TILE_RECTANGLE
,

332 (
d∂asma_com∂ex64_t
)*
ib
*
nb
, 
NULL
, 
SCRATCH
,

333 (), &
nb
, 
VALUE
,

334 (), &
check_öfo
, 
VALUE
,

335 (*), &
öfo
, 
REF
,

336 
PARSEC_DTD_ARG_END
 );

338  
n
 = 
k
+1;Ç < 
dcA
.
su≥r
.
¡
;Ç++ ) {

339 
ãm≤n
 = 
n
 =
dcA
.
su≥r
.
¡
-1 ? (dcA.su≥r.n)-n*(dcA.su≥r.
nb
) : dcA.super.nb;

340 
™b
 = 
dcA
.
su≥r
.
nb
;

341 
ldl
 = 
dcL
.
su≥r
.
mb
;

343 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
–
dtd_ç
, 
∑r£c_c‹e_ssssm
, 0, "ssssm",

344 (), &
™b
, 
VALUE
,

345 (), &
ãm≤n
, 
VALUE
,

346 (), &
ãmpmm
, 
VALUE
,

347 (), &
ãm≤n
, 
VALUE
,

348 (), &
™b
, 
VALUE
,

349 (), &
ib
, 
VALUE
,

350 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, 
n
), 
INOUT
 | 
TILE_FULL
,

351 (), &
ldak
, 
VALUE
,

352 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
m
, 
n
), 
INOUT
 | 
TILE_FULL
 | 
AFFINITY
,

353 (), &
ldam
, 
VALUE
,

354 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
L
, 
m
, 
k
), 
INPUT
 | 
L_TILE_RECTANGLE
,

355 (), &
ldl
, 
VALUE
,

356 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
m
, 
k
), 
INPUT
 | 
TILE_FULL
,

357 (), &
ldam
, 
VALUE
,

358 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
IPIV
, 
m
, 
k
), 
INPUT
 | 
TILE_RECTANGLE
,

359 
PARSEC_DTD_ARG_END
 );

361 
	`∑r£c_dtd_d©a_Êush
–
dtd_ç
, 
	`PARSEC_DTD_TILE_OF
(
L
, 
m
, 
k
) );

362 
	`∑r£c_dtd_d©a_Êush
–
dtd_ç
, 
	`PARSEC_DTD_TILE_OF
(
IPIV
, 
m
, 
k
) );

364  
n
 = 
k
+1;Ç < 
dcA
.
su≥r
.
¡
;Ç++ ) {

365 
	`∑r£c_dtd_d©a_Êush
–
dtd_ç
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, 
n
));

367  
m
 = 
k
+1; m < 
dcA
.
su≥r
.
mt
; m++ ) {

368 
	`∑r£c_dtd_d©a_Êush
–
dtd_ç
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
m
, 
k
) );

370 
	`∑r£c_dtd_d©a_Êush
–
dtd_ç
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, k) );

373 
	`∑r£c_dtd_d©a_Êush_Æl
–
dtd_ç
, (
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcA
 );

374 
	`∑r£c_dtd_d©a_Êush_Æl
–
dtd_ç
, (
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcL
 );

375 
	`∑r£c_dtd_d©a_Êush_Æl
–
dtd_ç
, (
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcIPIV
 );

378 
	`∑r£c_dtd_èskpoﬁ_waô
–
dtd_ç
 );

381 
	`∑r£c_c⁄ãxt_waô
–
∑r£c
 );

385 
	`SYNC_TIME_PRINT
(
ønk
, ("\tPxQ= %3d %-3d NB= %4d N= %7d : %14f gflops\n",

386 
P
, 
Q
, 
NB
, 
N
,

387 
gÊ›s
=(
Ê›s
/1e9)/
sync_time_ñ≠£d
));

390 
	`∑r£c_èskpoﬁ_‰ì
–
dtd_ç
 );

392 i‡–
öfo
 != 0 ) {

393 if–
ønk
 =0 && 
loud
 ) 
	`¥ötf
("-- Fa˘‹iz©i⁄ i†su•iciou†(öfÿ%dË! \n", 
öfo
 );

394 
ªt
 |= 1;

396 i‡–
check
 ) {

400 
	`d∂asma_zgërs_ö˝iv
–
∑r£c
, 
d∂asmaNoTøns
,

401 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

402 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcL
,

403 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcIPIV
,

404 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
 );

407 
ªt
 |
	`check_sﬁuti⁄
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

408 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

409 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

410 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
);

415 i‡–
check_öv
 ) {

416 
	`d∂asma_zgërs_ö˝iv
–
∑r£c
, 
d∂asmaNoTøns
,

417 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

418 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcL
,

419 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcIPIV
,

420 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcInvA
 );

423 
ªt
 |
	`check_övî£
(
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

424 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

425 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcInvA
,

426 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcI
);

430 i‡–
check
 ) {

431 
	`∑r£c_d©a_‰ì
(
dcA0
.
m©
);

432 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA0
);

433 
	`∑r£c_d©a_‰ì
(
dcB
.
m©
);

434 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcB
);

435 
	`∑r£c_d©a_‰ì
(
dcX
.
m©
);

436 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcX
);

437 i‡–
check_öv
 ) {

438 
	`∑r£c_d©a_‰ì
(
dcInvA
.
m©
);

439 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcInvA
);

440 
	`∑r£c_d©a_‰ì
(
dcI
.
m©
);

441 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcI
);

446 
	`d∂asma_m©rix_dñ2¨ía
–&
∑r£c_dtd_¨ías_d©©y≥s
[
TILE_FULL
] );

447 
	`d∂asma_m©rix_dñ2¨ía
–&
∑r£c_dtd_¨ías_d©©y≥s
[
TILE_RECTANGLE
] );

448 
	`d∂asma_m©rix_dñ2¨ía
–&
∑r£c_dtd_¨ías_d©©y≥s
[
L_TILE_RECTANGLE
] );

450 
	`∑r£c_dtd_d©a_cﬁÀ˘i⁄_föi
–(
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcA
 );

451 
	`∑r£c_dtd_d©a_cﬁÀ˘i⁄_föi
–(
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcL
 );

452 
	`∑r£c_dtd_d©a_cﬁÀ˘i⁄_föi
–(
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcIPIV
 );

454 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

455 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

456 
	`∑r£c_d©a_‰ì
(
dcL
.
m©
);

457 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcL
);

458 
	`∑r£c_d©a_‰ì
(
dcIPIV
.
m©
);

459 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcIPIV
);

461 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

463  
ªt
;

464 
	}
}

466 
	$check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

467 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

468 
∑r£c_tûed_m©rix_dc_t
 *
dcB
,

469 
∑r£c_tûed_m©rix_dc_t
 *
dcX
 )

471 
öfo_sﬁuti⁄
;

472 
Rn‹m
 = 0.0;

473 
An‹m
 = 0.0;

474 
Bn‹m
 = 0.0;

475 
Xn‹m
, 
ªsu…
;

476 
m
 = 
dcB
->m;

477 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

479 
An‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcA
);

480 
Bn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcB
);

481 
Xn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcX
);

484 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaNoTøns
, d∂asmaNoTøns, -1.0, 
dcA
, 
dcX
, 1.0, 
dcB
);

486 
Rn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcB
);

488 
ªsu…
 = 
Rn‹m
 / ( ( 
An‹m
 * 
Xn‹m
 + 
Bn‹m
 ) * 
m
 * 
ïs
 ) ;

490 i‡–
loud
 > 2 ) {

491 
	`¥ötf
("============\n");

492 
	`¥ötf
("CheckingÅhe Residual ofÅhe solution \n");

493 i‡–
loud
 > 3 )

494 
	`¥ötf
( "-- ||A||_oo = %e, ||X||_oo = %e, ||B||_oo= %e, ||A X - B||_oo = %e\n",

495 
An‹m
, 
Xn‹m
, 
Bn‹m
, 
Rn‹m
 );

496 
	`¥ötf
("-- ||Ax-B||_oo/((||A||_oo||x||_oo+||B||_oo).N.ïsË%ê\n", 
ªsu…
);

499 i‡–
	`i¢™
(
Xn‹m
Ë|| 
	`isöf
(Xn‹mË|| i¢™(
ªsu…
) || isinf(result) || (result > 60.0) ) {

500 if–
loud
 ) 
	`¥ötf
("-- Solution is suspicious ! \n");

501 
öfo_sﬁuti⁄
 = 1;

504 if–
loud
 ) 
	`¥ötf
("-- Solution is CORRECT ! \n");

505 
öfo_sﬁuti⁄
 = 0;

508  
öfo_sﬁuti⁄
;

509 
	}
}

511 
	$check_övî£
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

512 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

513 
∑r£c_tûed_m©rix_dc_t
 *
dcInvA
,

514 
∑r£c_tûed_m©rix_dc_t
 *
dcI
 )

516 
öfo_sﬁuti⁄
;

517 
An‹m
 = 0.0;

518 
InvAn‹m
 = 0.0;

519 
Rn‹m
, 
ªsu…
;

520 
m
 = 
dcA
->m;

521 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

523 
An‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcA
 );

524 
InvAn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcInvA
);

527 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaNoTøns
, d∂asmaNoTøns, -1.0, 
dcA
, 
dcInvA
, 1.0, 
dcI
);

529 
Rn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcI
);

531 
ªsu…
 = 
Rn‹m
 / ( ( 
An‹m
 * 
InvAn‹m
 ) * 
m
 * 
ïs
 ) ;

533 i‡–
loud
 > 2 ) {

534 
	`¥ötf
("============\n");

535 
	`¥ötf
("CheckingÅhe Residual ofÅhe solution \n");

536 i‡–
loud
 > 3 )

537 
	`¥ötf
( "-- ||A||_oo = %e, ||A^{-1}||_oo = %e, ||A A^{-1} - I||_oo = %e\n",

538 
An‹m
, 
InvAn‹m
, 
Rn‹m
 );

539 
	`¥ötf
("-- ||AA^{-1}-I||_oo/((||A||_oo||A^{-1}||_oo).N.ïsË%ê\n", 
ªsu…
);

542 i‡–
	`i¢™
(
Rn‹m
Ë|| 
	`isöf
(Rn‹mË|| i¢™(
ªsu…
) || isinf(result) || (result > 60.0) ) {

543 if–
loud
 ) 
	`¥ötf
("-- Solution is suspicious ! \n");

544 
öfo_sﬁuti⁄
 = 1;

547 if–
loud
 ) 
	`¥ötf
("-- Solution is CORRECT ! \n");

548 
öfo_sﬁuti⁄
 = 0;

551  
öfo_sﬁuti⁄
;

552 
	}
}

	@testing_zgetrf_nopiv.c

10 
	~"comm⁄.h
"

11 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

13 
check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

14 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

15 
∑r£c_tûed_m©rix_dc_t
 *
dcB
,

16 
∑r£c_tûed_m©rix_dc_t
 *
dcX
 );

18 
check_övî£
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

19 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

20 
∑r£c_tûed_m©rix_dc_t
 *
dcInvA
,

21 
∑r£c_tûed_m©rix_dc_t
 *
dcI
 );

23 
	$maö
(
¨gc
, ** 
¨gv
)

25 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

26 
ù¨am
[
IPARAM_SIZEOF
];

27 
öfo
 = 0;

28 
ªt
 = 0;

29 
PLASMA_íum
 
u∂o
 = 
PœsmaUµîLowî
;

32 
	`ù¨am_deÁu…_Á˘o
(
ù¨am
);

33 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 40, 200, 200);

34 
ù¨am
[
IPARAM_LDA
] = -'m';

35 
ù¨am
[
IPARAM_LDB
] = -'m';

38 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

39 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

40 
	`PASTE_CODE_FLOPS
(
FLOPS_ZGETRF
, ((
DagDoubÀ_t
)
M
,(DagDoubÀ_t)
N
));

42 
LDA
 = 
	`max
(
M
, LDA);

44 i‡–
M
 !
N
 && 
check
 ) {

45 
	`Ârötf
(
°dîr
, "Check is impossible if M != N\n");

46 
check
 = 0;

50 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

51 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

52 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

53 
M
, 
N
, 
KP
, 
KQ
, 
P
));

55 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA0
, 
check
,

56 
two_dim_block_cy˛ic
, (&
dcA0
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

57 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

58 
M
, 
N
, 
KP
, 
KQ
, 
P
));

60 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB
, 
check
,

61 
two_dim_block_cy˛ic
, (&
dcB
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

62 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

63 
M
, 
NRHS
, 
KP
, 
KQ
, 
P
));

64 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcX
, 
check
,

65 
two_dim_block_cy˛ic
, (&
dcX
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

66 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

67 
M
, 
NRHS
, 
KP
, 
KQ
, 
P
));

69 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcInvA
, 
check_öv
,

70 
two_dim_block_cy˛ic
, (&
dcInvA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

71 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

72 
M
, 
N
, 
KP
, 
KQ
, 
P
));

73 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcI
, 
check_öv
,

74 
two_dim_block_cy˛ic
, (&
dcI
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

75 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

76 
M
, 
N
, 
KP
, 
KQ
, 
P
));

79 i‡–
check
 ) {

80 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, 
øndom_£ed
+1);

81 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

82 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

83 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
 );

85 i‡–
check_öv
 ) {

86 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcI
);

87 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcInvA
);

90 
t
;

91 
t
 = 0;Å < 
ƒuns
;Å++) {

93 if(
loud
 > 2Ë
	`¥ötf
("+++ Generate matrices ... ");

94 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
øndom_£ed
);

96 i‡–
check
 && 
t
 =
ƒuns
-1 )

97 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

98 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

99 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
 );

100 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

102 
	`∑r£c_devi˚s_ªÀa£_mem‹y
();

105 if(
loud
 > 2Ë
	`¥ötf
("+++ Computing getrf ... ");

107 
	`PASTE_CODE_ENQUEUE_PROGRESS_DESTRUCT_KERNEL
(
∑r£c
, 
zgërf_n›iv
,

108 ((
∑r£c_tûed_m©rix_dc_t
*)&
dcA
, &
öfo
),

109 
	`d∂asma_zgërf_n›iv_De°ru˘
–
PARSEC_zgërf_n›iv
 ));

111 if(
loud
 > 2Ë
	`¥ötf
("Done.\n");

113 
	`∑r£c_devi˚s_ª£t_lﬂd
(
∑r£c
);

117 i‡–
öfo
 != 0 ) {

118 if–
ønk
 =0 && 
loud
 ) 
	`¥ötf
("-- Fa˘‹iz©i⁄ i†su•iciou†(öfÿ%dË! \n", 
öfo
 );

119 
ªt
 |= 1;

121 i‡–
check
 ) {

122 
	`d∂asma_zåsm
–
∑r£c
, 
d∂asmaLe·
, 
d∂asmaLowî
, 
d∂asmaNoTøns
, 
d∂asmaUnô
, 1.0,

123 (
∑r£c_tûed_m©rix_dc_t
*)&
dcA
,

124 (
∑r£c_tûed_m©rix_dc_t
*)&
dcX
);

125 
	`d∂asma_zåsm
–
∑r£c
, 
d∂asmaLe·
, 
d∂asmaUµî
, 
d∂asmaNoTøns
, 
d∂asmaN⁄Unô
, 1.0,

126 (
∑r£c_tûed_m©rix_dc_t
*)&
dcA
,

127 (
∑r£c_tûed_m©rix_dc_t
*)&
dcX
);

130 
ªt
 |
	`check_sﬁuti⁄
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

131 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

132 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

133 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
);

138 i‡–
check_öv
 ) {

139 
	`d∂asma_zåsm
–
∑r£c
, 
d∂asmaLe·
, 
d∂asmaLowî
, 
d∂asmaNoTøns
, 
d∂asmaUnô
, 1.0,

140 (
∑r£c_tûed_m©rix_dc_t
*)&
dcA
,

141 (
∑r£c_tûed_m©rix_dc_t
*)&
dcInvA
);

142 
	`d∂asma_zåsm
–
∑r£c
, 
d∂asmaLe·
, 
d∂asmaUµî
, 
d∂asmaNoTøns
, 
d∂asmaN⁄Unô
, 1.0,

143 (
∑r£c_tûed_m©rix_dc_t
*)&
dcA
,

144 (
∑r£c_tûed_m©rix_dc_t
*)&
dcInvA
);

147 
ªt
 |
	`check_övî£
(
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

148 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

149 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcInvA
,

150 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcI
);

154 i‡–
check
 ) {

155 
	`∑r£c_d©a_‰ì
(
dcA0
.
m©
);

156 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA0
);

157 
	`∑r£c_d©a_‰ì
(
dcB
.
m©
);

158 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcB
);

159 
	`∑r£c_d©a_‰ì
(
dcX
.
m©
);

160 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcX
);

161 i‡–
check_öv
 ) {

162 
	`∑r£c_d©a_‰ì
(
dcInvA
.
m©
);

163 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcInvA
);

164 
	`∑r£c_d©a_‰ì
(
dcI
.
m©
);

165 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcI
);

169 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

170 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

172 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

174  
ªt
;

175 
	}
}

177 
	$check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

178 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

179 
∑r£c_tûed_m©rix_dc_t
 *
dcB
,

180 
∑r£c_tûed_m©rix_dc_t
 *
dcX
 )

182 
öfo_sﬁuti⁄
;

183 
Rn‹m
 = 0.0;

184 
An‹m
 = 0.0;

185 
Bn‹m
 = 0.0;

186 
Xn‹m
, 
ªsu…
;

187 
m
 = 
dcB
->m;

188 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

190 
An‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcA
);

191 
Bn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcB
);

192 
Xn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcX
);

195 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaNoTøns
, d∂asmaNoTøns, -1.0, 
dcA
, 
dcX
, 1.0, 
dcB
);

197 
Rn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcB
);

199 
ªsu…
 = 
Rn‹m
 / ( ( 
An‹m
 * 
Xn‹m
 + 
Bn‹m
 ) * 
m
 * 
ïs
 ) ;

201 i‡–
loud
 > 2 ) {

202 
	`¥ötf
("============\n");

203 
	`¥ötf
("CheckingÅhe Residual ofÅhe solution \n");

204 i‡–
loud
 > 3 )

205 
	`¥ötf
( "-- ||A||_oo = %e, ||X||_oo = %e, ||B||_oo= %e, ||A X - B||_oo = %e\n",

206 
An‹m
, 
Xn‹m
, 
Bn‹m
, 
Rn‹m
 );

207 
	`¥ötf
("-- ||Ax-B||_oo/((||A||_oo||x||_oo+||B||_oo).N.ïsË%ê\n", 
ªsu…
);

210 i‡–
	`i¢™
(
Xn‹m
Ë|| 
	`isöf
(Xn‹mË|| i¢™(
ªsu…
) || isinf(result) || (result > 60.0) ) {

211 if–
loud
 ) 
	`¥ötf
("-- Solution is suspicious ! \n");

212 
öfo_sﬁuti⁄
 = 1;

215 if–
loud
 ) 
	`¥ötf
("-- Solution is CORRECT ! \n");

216 
öfo_sﬁuti⁄
 = 0;

219  
öfo_sﬁuti⁄
;

220 
	}
}

222 
	$check_övî£
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

223 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

224 
∑r£c_tûed_m©rix_dc_t
 *
dcInvA
,

225 
∑r£c_tûed_m©rix_dc_t
 *
dcI
 )

227 
öfo_sﬁuti⁄
;

228 
An‹m
 = 0.0;

229 
InvAn‹m
 = 0.0;

230 
Rn‹m
, 
ªsu…
;

231 
m
 = 
dcA
->m;

232 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

234 
An‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcA
 );

235 
InvAn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcInvA
);

238 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaNoTøns
, d∂asmaNoTøns, -1.0, 
dcA
, 
dcInvA
, 1.0, 
dcI
);

240 
Rn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcI
);

242 
ªsu…
 = 
Rn‹m
 / ( ( 
An‹m
 * 
InvAn‹m
 ) * 
m
 * 
ïs
 ) ;

244 i‡–
loud
 > 2 ) {

245 
	`¥ötf
("============\n");

246 
	`¥ötf
("CheckingÅhe Residual ofÅhe solution \n");

247 i‡–
loud
 > 3 )

248 
	`¥ötf
( "-- ||A||_oo = %e, ||A^{-1}||_oo = %e, ||A A^{-1} - I||_oo = %e\n",

249 
An‹m
, 
InvAn‹m
, 
Rn‹m
 );

250 
	`¥ötf
("-- ||AA^{-1}-I||_oo/((||A||_oo||A^{-1}||_oo).N.ïsË%ê\n", 
ªsu…
);

253 i‡–
	`i¢™
(
Rn‹m
Ë|| 
	`isöf
(Rn‹mË|| i¢™(
ªsu…
) || isinf(result) || (result > 60.0) ) {

254 if–
loud
 ) 
	`¥ötf
("-- Solution is suspicious ! \n");

255 
öfo_sﬁuti⁄
 = 1;

258 if–
loud
 ) 
	`¥ötf
("-- Solution is CORRECT ! \n");

259 
öfo_sﬁuti⁄
 = 0;

262  
öfo_sﬁuti⁄
;

263 
	}
}

	@testing_zgetrf_ptgpanel.c

10 
	~"comm⁄.h
"

11 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

14 
check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

15 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

16 
∑r£c_tûed_m©rix_dc_t
 *
dcB
,

17 
∑r£c_tûed_m©rix_dc_t
 *
dcX
 );

19 
d∂asma_ùröt
–
∑r£c_c⁄ãxt_t
 *
∑r£c
,

20 
d∂asma_íum_t
 
u∂o
,

21 
∑r£c_tûed_m©rix_dc_t
 *
A
);

23 
	$maö
(
¨gc
, ** 
¨gv
)

25 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

26 
ù¨am
[
IPARAM_SIZEOF
];

27 
öfo
 = 0;

28 
ªt
 = 0;

31 
	`ù¨am_deÁu…_Á˘o
(
ù¨am
);

32 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 40, 200, 200);

33 
ù¨am
[
IPARAM_LDA
] = -'m';

34 
ù¨am
[
IPARAM_LDB
] = -'m';

35 
ù¨am
[
IPARAM_NGPUS
] = 
DPLASMA_ERR_NOT_SUPPORTED
;

38 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

39 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

40 
	`PASTE_CODE_FLOPS
(
FLOPS_ZGETRF
, ((
DagDoubÀ_t
)
M
, (DagDoubÀ_t)
N
));

42 
LDA
 = 
	`d∂asma_imax
–LDA, 
MT
 * 
MB
 );

44 i‡–
M
 !
N
 && 
check
 ) {

45 
	`Ârötf
(
°dîr
, "Check is impossible if M != N\n");

46 
check
 = 0;

50 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

51 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

52 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

53 
M
, 
N
, 
KP
, 
KQ
, 
P
));

55 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcIPIV
, 1,

56 
two_dim_block_cy˛ic
, (&
dcIPIV
, 
m©rix_I¡egî
, 
m©rix_Tûe
,

57 
nodes
, 
ønk
, 1, 
NB
, 
P
, 
	`d∂asma_imö
(
M
, 
N
), 0, 0,

58 
P
, 
	`d∂asma_imö
(
M
, 
N
), 
KP
, 
KQ
, P));

60 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA0
, 
check
,

61 
two_dim_block_cy˛ic
, (&
dcA0
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

62 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

63 
M
, 
N
, 
KP
, 
KQ
, 
P
));

65 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB
, 
check
,

66 
two_dim_block_cy˛ic
, (&
dcB
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

67 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

68 
N
, 
NRHS
, 
KP
, 
KQ
, 
P
));

70 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcX
, 
check
,

71 
two_dim_block_cy˛ic
, (&
dcX
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

72 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

73 
N
, 
NRHS
, 
KP
, 
KQ
, 
P
));

76 i‡–
check
 ) {

77 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, 
øndom_£ed
+1);

78 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

79 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

80 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
 );

83 
t
;

84 
t
 = 0;Å < 
ƒuns
;Å++) {

86 if(
loud
 > 2Ë
	`¥ötf
("+++ Generate matrices ... ");

87 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
øndom_£ed
);

89 if–
check
 && 
t
 =
ƒuns
-1 )

90 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

91 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

92 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
 );

93 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

95 
	`∑r£c_devi˚s_ªÀa£_mem‹y
();

98 if(
loud
 > 2Ë
	`¥ötf
("+++ Computing getrf ... ");

100 
	`PASTE_CODE_ENQUEUE_PROGRESS_DESTRUCT_KERNEL
(
∑r£c
, 
zgërf_±g∑√l
,

101 ((
∑r£c_tûed_m©rix_dc_t
*)&
dcA
,

102 (
∑r£c_tûed_m©rix_dc_t
*)&
dcIPIV
, &
öfo
),

103 
	`d∂asma_zgërf_±g∑√l_De°ru˘
–
PARSEC_zgërf_±g∑√l
 ));

105 if(
loud
 > 2Ë
	`¥ötf
("Done.\n");

107 
	`∑r£c_devi˚s_ª£t_lﬂd
(
∑r£c
);

110 i‡–
öfo
 != 0 ) {

111 if–
ønk
 =0 && 
loud
 ) 
	`¥ötf
("-- Fa˘‹iz©i⁄ i†su•iciou†(öfÿ%dË! \n", 
öfo
 );

112 
ªt
 |= 1;

114 i‡–
check
 ) {

115 
	`d∂asma_zåsm∂_±g∑√l
(
∑r£c
,

116 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

117 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcIPIV
,

118 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
);

120 
	`d∂asma_zåsm
(
∑r£c
, 
d∂asmaLe·
, 
d∂asmaUµî
, 
d∂asmaNoTøns
, 
d∂asmaN⁄Unô
,

121 1.0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

122 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
);

125 
ªt
 |
	`check_sﬁuti⁄
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

126 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

127 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

128 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
);

131 i‡–
check
 ) {

132 
	`∑r£c_d©a_‰ì
(
dcA0
.
m©
);

133 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA0
);

134 
	`∑r£c_d©a_‰ì
(
dcB
.
m©
);

135 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcB
);

136 
	`∑r£c_d©a_‰ì
(
dcX
.
m©
);

137 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcX
);

140 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

141 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

142 
	`∑r£c_d©a_‰ì
(
dcIPIV
.
m©
);

143 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcIPIV
);

145 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

147  
ªt
;

148 
	}
}

152 
	$check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

153 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

154 
∑r£c_tûed_m©rix_dc_t
 *
dcB
,

155 
∑r£c_tûed_m©rix_dc_t
 *
dcX
 )

157 
öfo_sﬁuti⁄
;

158 
Rn‹m
 = 0.0;

159 
An‹m
 = 0.0;

160 
Bn‹m
 = 0.0;

161 
Xn‹m
, 
ªsu…
;

162 
m
 = 
dcB
->m;

163 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

165 
An‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcA
);

166 
Bn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcB
);

167 
Xn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcX
);

170 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaNoTøns
, d∂asmaNoTøns, -1.0, 
dcA
, 
dcX
, 1.0, 
dcB
);

172 
Rn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcB
);

174 
ªsu…
 = 
Rn‹m
 / ( ( 
An‹m
 * 
Xn‹m
 + 
Bn‹m
 ) * 
m
 * 
ïs
 ) ;

176 i‡–
loud
 > 2 ) {

177 
	`¥ötf
("============\n");

178 
	`¥ötf
("CheckingÅhe Residual ofÅhe solution \n");

179 i‡–
loud
 > 3 )

180 
	`¥ötf
( "-- ||A||_oo = %e, ||X||_oo = %e, ||B||_oo= %e, ||A X - B||_oo = %e\n",

181 
An‹m
, 
Xn‹m
, 
Bn‹m
, 
Rn‹m
 );

183 
	`¥ötf
("-- ||Ax-B||_oo/((||A||_oo||x||_oo+||B||_oo).N.ïsË%ê\n", 
ªsu…
);

186 i‡–
	`i¢™
(
Xn‹m
Ë|| 
	`isöf
(Xn‹mË|| i¢™(
ªsu…
) || isinf(result) || (result > 60.0) ) {

187 if–
loud
 ) 
	`¥ötf
("-- Solution is suspicious ! \n");

188 
öfo_sﬁuti⁄
 = 1;

191 if–
loud
 ) 
	`¥ötf
("-- Solution is CORRECT ! \n");

192 
öfo_sﬁuti⁄
 = 0;

195  
öfo_sﬁuti⁄
;

196 
	}
}

	@testing_zgetrf_qrf.c

10 
	~"comm⁄.h
"

11 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

13 
check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

14 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

15 
∑r£c_tûed_m©rix_dc_t
 *
dcB
,

16 
∑r£c_tûed_m©rix_dc_t
 *
dcX
 );

18 
check_övî£
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

19 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

20 
∑r£c_tûed_m©rix_dc_t
 *
dcInvA
,

21 
∑r£c_tûed_m©rix_dc_t
 *
dcI
 );

23 #i‡
deföed
(
PARSEC_HAVE_LCI
)

24 
	$lci_max_›
(*
d°
, *
§c
, 
size_t
 
cou¡
)

26 *
d
 = 
d°
;

27 *
s
 = 
§c
;

28 
size_t
 
c
 = 
cou¡
 / ();

29 
size_t
 
i
 = 0; i < 
c
; i++) {

30 i‡(
s
[
i
] > 
d
[i])

31 
d
[
i
] = 
s
[i];

33 
	}
}

36 
	$maö
(
¨gc
, ** 
¨gv
)

38 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

39 
ù¨am
[
IPARAM_SIZEOF
];

40 *
lu_èb
;

41 
öfo
 = 0;

42 
i
, 
ªt
 = 0;

43 
d∂asma_qπªe_t
 
qπªe
;

44 
Æpha
;

47 
	`ù¨am_deÁu…_Á˘o
(
ù¨am
);

48 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 40, 200, 200);

49 
ù¨am
[
IPARAM_KP
] = 1;

50 
ù¨am
[
IPARAM_KQ
] = 1;

51 
ù¨am
[
IPARAM_LDA
] = -'m';

52 
ù¨am
[
IPARAM_LDB
] = -'m';

55 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

58 
ù¨am
[
IPARAM_KP
] = 1;

59 
ù¨am
[
IPARAM_KQ
] = 1;

61 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

62 
	`PASTE_CODE_FLOPS
(
FLOPS_ZGETRF
, ((
DagDoubÀ_t
)
M
,(DagDoubÀ_t)
N
));

64 
LDA
 = 
	`max
(
M
, LDA);

65 
LDB
 = 
	`max
(
M
, LDB);

67 i‡–
M
 !
N
 && 
check
 ) {

68 
	`Ârötf
(
°dîr
, "Check is impossible if M != N\n");

69 
check
 = 0;

73 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

74 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

75 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

76 
M
, 
N
, 
KP
, 
KQ
, 
P
));

77 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcTS
, 1,

78 
two_dim_block_cy˛ic
, (&
dcTS
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

79 
nodes
, 
ønk
, 
IB
, 
NB
, 
MT
*IB, 
N
, 0, 0,

80 
MT
*
IB
, 
N
, 
KP
, 
KQ
, 
P
));

81 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcTT
, 1,

82 
two_dim_block_cy˛ic
, (&
dcTT
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

83 
nodes
, 
ønk
, 
IB
, 
NB
, 
MT
*IB, 
N
, 0, 0,

84 
MT
*
IB
, 
N
, 
KP
, 
KQ
, 
P
));

85 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcIPIV
, 1,

86 
two_dim_block_cy˛ic
, (&
dcIPIV
, 
m©rix_I¡egî
, 
m©rix_Tûe
,

87 
nodes
, 
ønk
, 
MB
, 1, 
M
, 
NT
, 0, 0,

88 
M
, 
NT
, 
KP
, 
KQ
, 
P
));

89 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA0
, 
check
,

90 
two_dim_block_cy˛ic
, (&
dcA0
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

91 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

92 
M
, 
N
, 
KP
, 
KQ
, 
P
));

94 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB
, 
check
,

95 
two_dim_block_cy˛ic
, (&
dcB
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

96 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

97 
M
, 
NRHS
, 
KP
, 
KQ
, 
P
));

98 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcX
, 
check
,

99 
two_dim_block_cy˛ic
, (&
dcX
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

100 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

101 
M
, 
NRHS
, 
KP
, 
KQ
, 
P
));

103 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcInvA
, 
check_öv
,

104 
two_dim_block_cy˛ic
, (&
dcInvA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

105 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

106 
M
, 
N
, 
KP
, 
KQ
, 
P
));

107 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcI
, 
check_öv
,

108 
two_dim_block_cy˛ic
, (&
dcI
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

109 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

110 
M
, 
N
, 
KP
, 
KQ
, 
P
));

112 
lu_èb
 = (*)
	`mÆloc
–
	`d∂asma_imö
(
MT
, 
NT
)*() );

113 
i
=0; i< 
	`d∂asma_imö
(
MT
, 
NT
); i++)

114 
lu_èb
[
i
] = -1;

117 if(
loud
 > 2Ë
	`¥ötf
("+++ Generate matrices ... ");

118 
	`d∂asma_z∂tmg
–
∑r£c
, 
m©rix_öô
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
øndom_£ed
 );

119 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 0., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTS
);

120 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 0., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTT
);

121 
	`d∂asma_hqr_öô
–&
qπªe
,

122 
d∂asmaNoTøns
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

123 
ù¨am
[
IPARAM_LOWLVL_TREE
],

124 
ù¨am
[
IPARAM_HIGHLVL_TREE
],

125 
ù¨am
[
IPARAM_QR_TS_SZE
],

126 
P
,

129 i‡–
check
 ) {

130 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

131 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

132 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
 );

133 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, 
øndom_£ed
+1 );

134 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

135 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

136 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
 );

138 i‡–
check_öv
 ) {

139 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcI
);

140 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcInvA
);

142 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

145 if(
loud
 > 2Ë
	`¥ötf
("+++ Computing getrf_qrf ... ");

146 
	`PASTE_CODE_ENQUEUE_KERNEL
(
∑r£c
, 
zgërf_qrf
,

147 (&
qπªe
,

148 (
∑r£c_tûed_m©rix_dc_t
*)&
dcA
,

149 (
∑r£c_tûed_m©rix_dc_t
*)&
dcIPIV
,

150 (
∑r£c_tûed_m©rix_dc_t
*)&
dcTS
,

151 (
∑r£c_tûed_m©rix_dc_t
*)&
dcTT
,

152 
ù¨am
[
IPARAM_QR_HLVL_SZE
], 
Æpha
, 
lu_èb
,

153 &
öfo
));

155 
	`PASTE_CODE_PROGRESS_KERNEL
(
∑r£c
, 
zgërf_qrf
);

156 
	`d∂asma_zgërf_qrf_De°ru˘
–
PARSEC_zgërf_qrf
 );

157 if(
loud
 > 2Ë
	`¥ötf
("Done.\n");

161 #i‡
	`deföed
(
PARSEC_HAVE_MPI
)

163 *
lu_èb2
 = (*)
	`mÆloc
–
MT
*() );

164 
	`MPI_AŒªdu˚
 ( 
lu_èb
, 
lu_èb2
, 
MT
, 
MPI_INT
, 
MPI_MAX
, 
MPI_COMM_WORLD
);

165 
	`mem˝y
–
lu_èb
, 
lu_èb2
, 
MT
*() );

166 
	`‰ì
(
lu_èb2
);

168 #ñi‡
	`deföed
(
PARSEC_HAVE_LCI
)

170 *
lu_èb2
 = (*)
	`mÆloc
–
MT
*() );

171 
	`lc_Æªdu˚
–
lu_èb
, 
lu_èb2
, 
MT
*(), 
lci_max_›
, *
lci_globÆ_ï
);

172 
	`mem˝y
–
lu_èb
, 
lu_èb2
, 
MT
*() );

173 
	`‰ì
(
lu_èb2
);

177 
i
, 
nblu
, 
nbqr
;

178 
nblu
 = 0;

179 
nbqr
 = 
	`d∂asma_imö
(
MT
, 
NT
);

180 
i
=0; i<
nbqr
; i++) {

181 
nblu
 +
lu_èb
[
i
];

183 
nbqr
 -
nblu
;

186 i‡(
ønk
 =0 && 
loud
) {

187 
	`¥ötf
("[%d] LU/QRÑï¨tôi⁄: %d(%.2fËLU / %d(%.2fËQR \n", 
ønk
,

188 
nblu
, 100. * (Íblu / ()“blu+
nbqr
),

189 
nbqr
, 100. * (Íbq∏/ ()(
nblu
+nbqr));

190 
	`¥ötf
("[%d]Üu_èb: ", 
ønk
);

191 
i
=0; i<
	`d∂asma_imö
(
MT
, 
NT
); i++) {

192 
	`¥ötf
("%d ", 
lu_èb
[
i
]);

194 
	`¥ötf
("\n");

198 i‡–
öfo
 != 0 ) {

199 if–
ønk
 =0 && 
loud
 ) 
	`¥ötf
("-- Fa˘‹iz©i⁄ i†su•iciou†(öfÿ%dË! \n", 
öfo
 );

200 
ªt
 |= 1;

202 i‡–
check
 ) {

206 
	`d∂asma_zåsm∂_qrf
–
∑r£c
, &
qπªe
,

207 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

208 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcIPIV
,

209 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
,

210 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTS
,

211 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTT
,

212 
lu_èb
);

213 
	`d∂asma_zåsm
(
∑r£c
, 
d∂asmaLe·
, 
d∂asmaUµî
, 
d∂asmaNoTøns
, 
d∂asmaN⁄Unô
, 1.0,

214 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

215 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
);

218 
ªt
 |
	`check_sﬁuti⁄
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

219 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

220 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

221 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
);

226 i‡–
check_öv
 ) {

227 
	`d∂asma_zåsm∂_qrf
–
∑r£c
, &
qπªe
,

228 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

229 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcIPIV
,

230 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcInvA
,

231 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTS
,

232 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTT
,

233 
lu_èb
);

234 
	`d∂asma_zåsm
(
∑r£c
, 
d∂asmaLe·
, 
d∂asmaUµî
, 
d∂asmaNoTøns
, 
d∂asmaN⁄Unô
, 1.0,

235 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

236 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcInvA
);

239 
ªt
 |
	`check_övî£
(
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

240 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

241 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcInvA
,

242 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcI
);

246 i‡–
check
 ) {

247 
	`∑r£c_d©a_‰ì
(
dcA0
.
m©
);

248 
	`∑r£c_d©a_cﬁÀ˘i⁄_de°roy
–(
∑r£c_d©a_cﬁÀ˘i⁄_t
*)&
dcA0
);

249 
	`∑r£c_d©a_‰ì
(
dcB
.
m©
);

250 
	`∑r£c_d©a_cﬁÀ˘i⁄_de°roy
–(
∑r£c_d©a_cﬁÀ˘i⁄_t
*)&
dcB
);

251 
	`∑r£c_d©a_‰ì
(
dcX
.
m©
);

252 
	`∑r£c_d©a_cﬁÀ˘i⁄_de°roy
–(
∑r£c_d©a_cﬁÀ˘i⁄_t
*)&
dcX
);

253 i‡–
check_öv
 ) {

254 
	`∑r£c_d©a_‰ì
(
dcInvA
.
m©
);

255 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcInvA
);

256 
	`∑r£c_d©a_‰ì
(
dcI
.
m©
);

257 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcI
);

261 
	`d∂asma_hqr_föÆize
–&
qπªe
 );

263 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

264 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

265 
	`∑r£c_d©a_‰ì
(
dcTS
.
m©
);

266 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcTS
);

267 
	`∑r£c_d©a_‰ì
(
dcTT
.
m©
);

268 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcTT
);

269 
	`∑r£c_d©a_‰ì
(
dcIPIV
.
m©
);

270 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcIPIV
);

271 
	`‰ì
(
lu_èb
);

273 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

274  
ªt
;

275 
	}
}

277 
	$check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

278 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

279 
∑r£c_tûed_m©rix_dc_t
 *
dcB
,

280 
∑r£c_tûed_m©rix_dc_t
 *
dcX
 )

282 
öfo_sﬁuti⁄
;

283 
Rn‹m
 = 0.0;

284 
An‹m
 = 0.0;

285 
Bn‹m
 = 0.0;

286 
Xn‹m
, 
ªsu…
;

287 
m
 = 
dcB
->m;

288 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

290 
An‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcA
);

291 
Bn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcB
);

292 
Xn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcX
);

295 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaNoTøns
, d∂asmaNoTøns, -1.0, 
dcA
, 
dcX
, 1.0, 
dcB
);

297 
Rn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcB
);

299 
ªsu…
 = 
Rn‹m
 / ( ( 
An‹m
 * 
Xn‹m
 + 
Bn‹m
 ) * 
m
 * 
ïs
 ) ;

301 i‡–
loud
 > 2 ) {

302 
	`¥ötf
("============\n");

303 
	`¥ötf
("CheckingÅhe Residual ofÅhe solution \n");

304 i‡–
loud
 > 3 )

305 
	`¥ötf
( "-- ||A||_oo = %e, ||X||_oo = %e, ||B||_oo= %e, ||A X - B||_oo = %e\n",

306 
An‹m
, 
Xn‹m
, 
Bn‹m
, 
Rn‹m
 );

307 
	`¥ötf
("-- ||Ax-B||_oo/((||A||_oo||x||_oo+||B||_oo).N.ïsË%ê\n", 
ªsu…
);

310 i‡–
	`i¢™
(
Xn‹m
Ë|| 
	`isöf
(Xn‹mË|| i¢™(
ªsu…
) || isinf(result) || (result > 60.0) ) {

311 if–
loud
 ) 
	`¥ötf
("-- Solution with b is suspicious ! \n");

312 
öfo_sﬁuti⁄
 = 1;

315 if–
loud
 ) 
	`¥ötf
("-- Solution with b is CORRECT ! \n");

316 
öfo_sﬁuti⁄
 = 0;

319  
öfo_sﬁuti⁄
;

320 
	}
}

322 
	$check_övî£
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

323 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

324 
∑r£c_tûed_m©rix_dc_t
 *
dcInvA
,

325 
∑r£c_tûed_m©rix_dc_t
 *
dcI
 )

327 
öfo_sﬁuti⁄
;

328 
An‹m
 = 0.0;

329 
InvAn‹m
 = 0.0;

330 
Rn‹m
, 
ªsu…
;

331 
m
 = 
dcA
->m;

332 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

334 
An‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcA
 );

335 
InvAn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcInvA
);

338 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaNoTøns
, d∂asmaNoTøns, -1.0, 
dcA
, 
dcInvA
, 1.0, 
dcI
);

340 
Rn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcI
);

342 
ªsu…
 = 
Rn‹m
 / ( ( 
An‹m
 * 
InvAn‹m
 ) * 
m
 * 
ïs
 ) ;

344 i‡–
loud
 > 2 ) {

345 
	`¥ötf
("============\n");

346 
	`¥ötf
("CheckingÅhe Residual ofÅhe solution \n");

347 i‡–
loud
 > 3 )

348 
	`¥ötf
( "-- ||A||_oo = %e, ||A^{-1}||_oo = %e, ||A A^{-1} - I||_oo = %e\n",

349 
An‹m
, 
InvAn‹m
, 
Rn‹m
 );

350 
	`¥ötf
("-- ||AA^{-1}-I||_oo/((||A||_oo||A^{-1}||_oo).N.ïsË%ê\n", 
ªsu…
);

353 i‡–
	`i¢™
(
Rn‹m
Ë|| 
	`isöf
(Rn‹mË|| i¢™(
ªsu…
) || isinf(result) || (result > 60.0) ) {

354 if–
loud
 ) 
	`¥ötf
("-- Solution with I is suspicious ! \n");

355 
öfo_sﬁuti⁄
 = 1;

358 if–
loud
 ) 
	`¥ötf
("-- Solution with I is CORRECT ! \n");

359 
öfo_sﬁuti⁄
 = 0;

362  
öfo_sﬁuti⁄
;

363 
	}
}

	@testing_zhbrdt.c

10 
	~"comm⁄.h
"

11 
	~"∑r£c/d©a_di°/m©rix/sym_two_dim_ª˘™gÀ_cy˛ic.h
"

12 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

13 
	~"∑r£c/d©a_öã∫Æ.h
"

16 
	#FADDS_ZHBRDT
(
__n
Ë(-1)

	)

17 
	#FMULS_ZHBRDT
(
__n
Ë(-1)

	)

19 
	$maö
(
¨gc
, *
¨gv
[])

21 
∑r£c_c⁄ãxt_t
 *
∑r£c
;

22 
ù¨am
[
IPARAM_SIZEOF
];

25 
	`ù¨am_deÁu…_Á˘o
(
ù¨am
);

26 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 48, 144, 144);

27 
ù¨am
[
IPARAM_NGPUS
] = 
DPLASMA_ERR_NOT_SUPPORTED
;

29 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

30 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

31 if(
P
 != 1)

32 
	`Ârötf
(
°dîr
, "!!! Thi†Æg‹ôhm w‹k†⁄á b™d 1D m©rix. ThêvÆuêo‡P=%d ha†bì¿ovîridí,Åhêa˘uÆ grid i†%dx%d\n", 
P
, 1, 
nodes
);

34 
	`PASTE_CODE_FLOPS_COUNT
(
FADDS_ZHBRDT
, 
FMULS_ZHBRDT
, ((
DagDoubÀ_t
)
N
));

43 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

44 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

45 
nodes
, 
ønk
, 
MB
+1, 
NB
+2, MB+1, (NB+2)*
NT
, 0, 0,

46 
MB
+1, (
NB
+2)*
NT
, 1, 
KQ
, 1 ));

48 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 3872);

50 
	`PASTE_CODE_ENQUEUE_KERNEL
(
∑r£c
, 
zhbrdt
,

51 ((
∑r£c_tûed_m©rix_dc_t
*)&
dcA
));

53 
	`PASTE_CODE_PROGRESS_KERNEL
(
∑r£c
, 
zhbrdt
);

55 if–
check
 ) {

56 
	`¥ötf
( "No check implemented yet.\n" );

58 #i‡
	`deföed
(
PARSEC_HAVE_MPI
)

61 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA˝y
, 1,

62 
two_dim_block_cy˛ic
, (&
dcA˝y
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

63 
nodes
, 
ønk
, 
MB
+1, 
NB
+2, MB+1, (NB+2)*
NT
,

64 0, 0, 
MB
+1, (
NB
+2)*
NT
, 1, 
KQ
, 1));

65 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA˝y
, 3872);

68 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcLA˝y
, 1,

69 
two_dim_block_cy˛ic
, (&
dcLA˝y
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

70 1, 
ønk
, 
MB
+1, 
NB
+2, MB+1, (NB+2)*
NT
,

71 0, 0, 
MB
+1, (
NB
+2)*
NT
, 1, 1, 1));

74 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcLA
, 1,

75 
two_dim_block_cy˛ic
, (&
dcLA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

76 1, 
ønk
, 2, 
NB
, 2, NB*
NT
,

77 0, 0, 2, 
NB
*
NT
, 1, 1, 1));

78 if(
ønk
 == 0) {

79 
t
 = 0;Å < 
NT
;Å++)

81 
r§c
 = 
dcA
.
su≥r
.su≥r.
	`ønk_of
(&dcA.su≥r.su≥r, 0, 
t
);

82 if(
r§c
 == 0)

84 
d∂asma_com∂ex64_t
* 
d©aö
 = 
	`∑r£c_d©a_c›y_gë_±r
(
	`∑r£c_d©a_gë_c›y
(
dcA
.
su≥r
.su≥r.
	`d©a_of
(&dcA.su≥r.su≥r, 0, 
t
), 0));

85 
d∂asma_com∂ex64_t
* 
d©aout
 = 
	`∑r£c_d©a_c›y_gë_±r
(
	`∑r£c_d©a_gë_c›y
(
dcLA
.
su≥r
.su≥r.
	`d©a_of
(&
dcA
.su≥r.su≥r, 0, 
t
), 0));

86 
n
 = 0;Ç < 
NB
;Ç++)

87 
m
 = 0; m < 2; m++)

89 
d©aout
[
m
+
n
*2] = 
d©aö
[m+n*(
MB
+1)];

94 
d∂asma_com∂ex64_t
* 
d©aout
 = 
	`∑r£c_d©a_c›y_gë_±r
(
	`∑r£c_d©a_gë_c›y
(
dcLA
.
su≥r
.su≥r.
	`d©a_of
(&dcLA.su≥r.su≥r, 0, 
t
), 0));

95 
	`MPI_Recv
(
d©aout
, 2*
NB
, 
∑r£c_d©©y≥_doubÀ_com∂ex_t
, 
r§c
, 
t
, 
MPI_COMM_WORLD
, 
MPI_STATUS_IGNORE
);

101 
MPI_D©©y≥
 
bidügb™d_dâ
;

102 
	`MPI_Ty≥_ve˘‹
(
NB
, 2, 
MB
+1, 
∑r£c_d©©y≥_doubÀ_com∂ex_t
, &
bidügb™d_dâ
);

104 
t
 = 0;Å < 
NT
;Å++) {

105 if(
dcA
.
su≥r
.su≥r.
	`ønk_of
(&dcA.su≥r.su≥r, 0, 
t
Ë=(
uöt32_t
)
ønk
)

107 
d∂asma_com∂ex64_t
* 
d©aö
 = 
	`∑r£c_d©a_c›y_gë_±r
(
	`∑r£c_d©a_gë_c›y
(
dcA
.
su≥r
.su≥r.
	`d©a_of
(&dcA.su≥r.su≥r, 0, 
t
), 0));

108 
	`MPI_Síd
(
d©aö
, 1, 
bidügb™d_dâ
, 0, 
t
, 
MPI_COMM_WORLD
);

114 
	`d∂asma_zhbrdt_De°ru˘
–
PARSEC_zhbrdt
 );

116 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

117 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

119 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

121  
EXIT_SUCCESS
;

122 
	}
}

128 
	$check_sﬁuti⁄
(
N
, *
E1
, *
E2
, 
ïs
)

130 
öfo_sﬁuti⁄
, 
i
;

131 *
ResiduÆ
 = (*)
	`mÆloc
(
N
*());

132 
maxtmp
;

133 
maxñ
 = 
	`Ábs
(Ábs(
E1
[0])-Ábs(
E2
[0]));

134 
maxeig
 = 
	`d∂asma_fmax
(
	`Ábs
(
E1
[0]), fabs(
E2
[0]));

135 
i
 = 1; i < 
N
; i++){

136 
ResiduÆ
[
i
] = 
	`Ábs
(Ábs(
E1
[i])-Ábs(
E2
[i]));

137 
maxtmp
 = 
	`d∂asma_fmax
(
	`Ábs
(
E1
[
i
]), fabs(
E2
[i]));

138 
maxeig
 = 
	`d∂asma_fmax
(
maxtmp
, maxeig);

140 i‡(
maxñ
 < 
ResiduÆ
[
i
])

141 
maxñ
 = 
ResiduÆ
[
i
];

146 
	`¥ötf
(" ======================================================\n");

147 
	`¥ötf
(" | D -Éigcompuãd | / (|D| uÕË : %15.3E \n", 
maxñ
/(
maxeig
*
ïs
) );

148 
	`¥ötf
(" ======================================================\n");

151 
	`¥ötf
("============\n");

152 
	`¥ötf
("CheckingÅheÉigenvalues of A\n");

153 i‡(
	`i¢™
(
maxñ
 / 
ïs
Ë|| 
	`isöf
(maxñ /ÉpsË|| ((maxñ / (
maxeig
*eps)) > 1000.0) ) {

156 
	`¥ötf
("-- TheÉigenvaluesáre suspicious ! \n");

157 
öfo_sﬁuti⁄
 = 1;

160 
	`¥ötf
("-- TheÉigenvaluesáre CORRECT ! \n");

161 
öfo_sﬁuti⁄
 = 0;

164 
	`‰ì
(
ResiduÆ
);

165  
öfo_sﬁuti⁄
;

166 
	}
}

	@testing_zhebut.c

10 
	~"comm⁄.h
"

11 
	~"Ê›s.h
"

12 
	~"∑r£c/d©a_di°/m©rix/sym_two_dim_ª˘™gÀ_cy˛ic.h
"

13 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

15 #i‡
deföed
(
CHECK_B
)

16 
check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
, 
d∂asma_íum_t
 
u∂o
,

17 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

18 
∑r£c_tûed_m©rix_dc_t
 *
dcB
,

19 
∑r£c_tûed_m©rix_dc_t
 *
dcX
 );

22 
check_övî£
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
, 
d∂asma_íum_t
 
u∂o
,

23 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

24 
∑r£c_tûed_m©rix_dc_t
 *
dcInvA
,

25 
∑r£c_tûed_m©rix_dc_t
 *
dcI
 );

27 
	$maö
(
¨gc
, ** 
¨gv
)

29 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

30 
ù¨am
[
IPARAM_SIZEOF
];

31 
ªt
 = 0;

32 
d∂asma_íum_t
 
u∂o
 = 
d∂asmaLowî
;

33 
d∂asma_com∂ex64_t
 *
U_but_vec
;

34 
DagDoubÀ_t
 
time_buâîÊy
, 
time_Á˘o
, 
time_tŸÆ
;

37 
	`ù¨am_deÁu…_Á˘o
(
ù¨am
);

38 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 0, 180, 180);

41 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

42 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

43 
	`PASTE_CODE_FLOPS
(
FLOPS_ZHETRF
, ((
DagDoubÀ_t
)
N
));

46 
LDA
 = 
	`max
–LDA, 
N
 );

47 
LDB
 = 
	`max
–LDB, 
N
 );

48 
KP
 = 1;

49 
KQ
 = 1;

51 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

52 
sym_two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
,

53 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

54 
N
, N, 
P
, 
u∂o
));

56 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA0
, 
check
,

57 
sym_two_dim_block_cy˛ic
, (&
dcA0
, 
m©rix_Com∂exDoubÀ
,

58 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

59 
N
, N, 
P
, 
u∂o
));

61 #i‡
	`deföed
(
CHECK_B
)

62 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB
, 
check
,

63 
two_dim_block_cy˛ic
, (&
dcB
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

64 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

65 
N
, 
NRHS
, 
KP
, 
KQ
, 
P
));

67 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcX
, 
check
,

68 
two_dim_block_cy˛ic
, (&
dcX
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

69 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

70 
N
, 
NRHS
, 
KP
, 
KQ
, 
P
));

73 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcInvA
, 
check_öv
,

74 
two_dim_block_cy˛ic
, (&
dcInvA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

75 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

76 
N
, N, 
KP
, 
KQ
, 
P
));

78 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcI
, 
check_öv
,

79 
two_dim_block_cy˛ic
, (&
dcI
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

80 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

81 
N
, N, 
KP
, 
KQ
, 
P
));

84 if(
loud
 > 2Ë
	`¥ötf
("+++ Generate matrices ... ");

85 
	`d∂asma_z∂ghe
–
∑r£c
, ()(0), 
u∂o
,

86 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 1358);

88 if–
check
 ){

89 
	`d∂asma_zœ˝y
–
∑r£c
, 
u∂o
,

90 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

91 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
);

93 #i‡
	`deföed
(
CHECK_B
)

94 
	`d∂asma_z∂∫t
–
∑r£c
, 0,

95 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, 3872);

97 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

98 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

99 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
);

101 i‡(
check_öv
) {

102 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcInvA
);

103 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcI
);

106 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

109 if(
loud
 > 2Ë
	`¥ötf
("+++ Computing Butterfly ... \n");

110 
	`SYNC_TIME_START
();

111 i‡(
loud
Ë
	`TIME_START
();

113 
ªt
 = 
	`d∂asma_zhebut
(
∑r£c
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, &
U_but_vec
, 
buâîÊy_Àvñ
);

114 if–
ªt
 < 0 )

115  
ªt
;

117 
	`SYNC_TIME_PRINT
(
ønk
, ("zhebuàcompuèti⁄ N%d NB%d\n", 
N
, 
NB
));

120 
time_buâîÊy
 = 
sync_time_ñ≠£d
;

121 if(
loud
 > 2Ë
	`¥ötf
("... Done\n");

124 if(
loud
 > 2Ë
	`¥ötf
("+++ Computing Factorization ... \n");

125 
	`SYNC_TIME_START
();

126 
	`d∂asma_zhërf
(
∑r£c
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
);

128 
	`SYNC_TIME_PRINT
(
ønk
, ("zhër‡compuèti⁄ N%d NB%d : %‡gÊ›s\n", 
N
, 
NB
,

129 (
gÊ›s
 = (
Ê›s
/1e9)/(
sync_time_ñ≠£d
))));

130 if(
loud
 > 2Ë
	`¥ötf
(" ... Done.\n");

132 
time_Á˘o
 = 
sync_time_ñ≠£d
;

133 
time_tŸÆ
 = 
time_buâîÊy
 + 
time_Á˘o
;

135 if(0 =
ønk
) {

136 
	`¥ötf
( "zhebut+zhetrf computation : %f gflops (%02.2f%% / %02.2f%%)\n",

137 (
gÊ›s
 = (
Ê›s
/1e9)/(
time_tŸÆ
)),

138 
time_buâîÊy
 / 
time_tŸÆ
 * 100.,

139 
time_Á˘o
 / 
time_tŸÆ
 * 100.);

141 ()
gÊ›s
;

143 if(
check
) {

145 #i‡
	`deföed
(
CHECK_B
)

146 
	`d∂asma_zhërs
(
∑r£c
, 
u∂o
,

147 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

148 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
,

149 
U_but_vec
, 
buâîÊy_Àvñ
);

152 
ªt
 |
	`check_sﬁuti⁄
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0, 
u∂o
,

153 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

154 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

155 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
);

157 
	`∑r£c_d©a_‰ì
(
dcB
.
m©
);

158 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcB
);

160 
	`∑r£c_d©a_‰ì
(
dcX
.
m©
);

161 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcX
);

164 i‡(
check_öv
) {

166 
	`Ârötf
(
°dîr
, "Start hetrs\n");

167 
	`d∂asma_zhërs
(
∑r£c
, 
u∂o
,

168 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

169 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcInvA
,

170 
U_but_vec
, 
buâîÊy_Àvñ
);

172 
	`Ârötf
(
°dîr
, "Start check_inv\n");

174 
ªt
 |
	`check_övî£
(
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0, 
u∂o
,

175 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

176 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcInvA
,

177 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcI
);

179 
	`∑r£c_d©a_‰ì
(
dcInvA
.
m©
);

180 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcInvA
);

182 
	`∑r£c_d©a_‰ì
(
dcI
.
m©
);

183 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcI
);

187 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

188 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

190 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

192  
ªt
;

193 
	}
}

195 #i‡
deföed
(
CHECK_B
)

199 
	$check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
, 
d∂asma_íum_t
 
u∂o
,

200 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

201 
∑r£c_tûed_m©rix_dc_t
 *
dcB
,

202 
∑r£c_tûed_m©rix_dc_t
 *
dcX
 )

204 
öfo_sﬁuti⁄
;

205 
Rn‹m
 = 0.0;

206 
An‹m
 = 0.0;

207 
Bn‹m
 = 0.0;

208 
Xn‹m
, 
ªsu…
;

209 
N
 = 
dcB
->
m
;

210 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

212 
An‹m
 = 
	`d∂asma_zœnhe
(
∑r£c
, 
d∂asmaInfN‹m
, 
u∂o
, 
dcA
);

213 
Bn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcB
);

214 
Xn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcX
);

217 
	`d∂asma_zhemm
–
∑r£c
, 
d∂asmaLe·
, 
u∂o
, -1.0, 
dcA
, 
dcX
, 1.0, 
dcB
);

219 
Rn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcB
);

221 
ªsu…
 = 
Rn‹m
 / ( ( 
An‹m
 * 
Xn‹m
 + 
Bn‹m
 ) * 
N
 * 
ïs
 ) ;

223 i‡–
loud
 > 2 ) {

224 
	`¥ötf
("============\n");

225 
	`¥ötf
("CheckingÅhe Residual ofÅhe solution \n");

226 i‡–
loud
 > 3 )

227 
	`¥ötf
( "-- ||A||_oo = %e, ||X||_oo = %e, ||B||_oo= %e, ||A X - B||_oo = %e\n",

228 
An‹m
, 
Xn‹m
, 
Bn‹m
, 
Rn‹m
 );

230 
	`¥ötf
("-- ||Ax-B||_oo/((||A||_oo||x||_oo+||B||_oo).N.ïsË%ê\n", 
ªsu…
);

233 i‡–
	`i¢™
(
Xn‹m
Ë|| 
	`isöf
(Xn‹mË|| i¢™(
ªsu…
) || isinf(result) || (result > 60.0) ) {

234 if–
loud
 ) 
	`¥ötf
("-- Solution is suspicious ! \n");

235 
öfo_sﬁuti⁄
 = 1;

238 if–
loud
 ) 
	`¥ötf
("-- Solution is CORRECT ! \n");

239 
öfo_sﬁuti⁄
 = 0;

242  
öfo_sﬁuti⁄
;

243 
	}
}

246 
	$check_övî£
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
, 
d∂asma_íum_t
 
u∂o
,

247 
∑r£c_tûed_m©rix_dc_t
 *
dcA
,

248 
∑r£c_tûed_m©rix_dc_t
 *
dcInvA
,

249 
∑r£c_tûed_m©rix_dc_t
 *
dcI
 )

251 
öfo_sﬁuti⁄
;

252 
An‹m
 = 0.0;

253 
InvAn‹m
 = 0.0;

254 
Rn‹m
, 
ªsu…
;

255 
m
 = 
dcA
->m;

256 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

258 
An‹m
 = 
	`d∂asma_zœnhe
(
∑r£c
, 
d∂asmaInfN‹m
, 
u∂o
, 
dcA
);

259 
InvAn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcInvA
);

262 
	`d∂asma_zhemm
–
∑r£c
, 
d∂asmaLe·
, 
u∂o
, -1.0, 
dcA
, 
dcInvA
, 1.0, 
dcI
);

264 
Rn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaInfN‹m
, 
dcI
);

266 
ªsu…
 = 
Rn‹m
 / ( ( 
An‹m
 * 
InvAn‹m
 ) * 
m
 * 
ïs
 ) ;

268 i‡–
loud
 > 2 ) {

269 
	`¥ötf
("============\n");

270 
	`¥ötf
("CheckingÅhe Residual ofÅhe solution \n");

271 i‡–
loud
 > 3 )

272 
	`¥ötf
( "-- ||A||_oo = %e, ||A^{-1}||_oo = %e, ||A A^{-1} - I||_oo = %e\n",

273 
An‹m
, 
InvAn‹m
, 
Rn‹m
 );

275 
	`¥ötf
("-- ||AA^{-1}-I||_oo/((||A||_oo||A^{-1}||_oo).N.ïsË%ê\n", 
ªsu…
);

278 i‡–
	`i¢™
(
Rn‹m
Ë|| 
	`isöf
(Rn‹mË|| i¢™(
ªsu…
) || isinf(result) || (result > 60.0) ) {

279 if–
loud
 ) 
	`¥ötf
("-- Solution is suspicious ! \n");

280 
öfo_sﬁuti⁄
 = 1;

283 if–
loud
 ) 
	`¥ötf
("-- Solution is CORRECT ! \n");

284 
öfo_sﬁuti⁄
 = 0;

287  
öfo_sﬁuti⁄
;

288 
	}
}

	@testing_zheev.c

9 
	~"comm⁄.h
"

10 
	~"Ê›s.h
"

11 
	~"∑r£c/d©a_di°/m©rix/sym_two_dim_ª˘™gÀ_cy˛ic.h
"

12 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

13 
	~"∑r£c/d©a_di°/m©rix/düg_b™d_to_ª˘.h
"

14 
	~"d∂asma/ty≥s.h
"

15 
	~"œ∑cke.h
"

18 
	#FADDS_ZHEEV
(
__n
Ë(((__nË* (-8.0 / 3.0 + (__nË* (1.0 + 2.0 / 3.0 * (__n)))Ë- 4.0)

	)

19 
	#FMULS_ZHEEV
(
__n
Ë(((__nË* (-1.0 / 6.0 + (__nË* (5.0 / 2.0 + 2.0 / 3.0 * (__n)))Ë- 15.0)

	)

21 #unde‡
PRINTF_HEAVY


23 
check_sﬁuti⁄
(
N
, *
E1
, *
E2
, 
ïs
);

25 
	$maö
(
¨gc
, *
¨gv
[])

27 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

28 
ù¨am
[
IPARAM_SIZEOF
];

29 
d∂asma_íum_t
 
u∂o
 = 
d∂asmaLowî
;

30 
j
;

31 
rc
;

34 
	`ù¨am_deÁu…_Á˘o
(
ù¨am
);

35 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 40, 120, 120);

38 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

39 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

40 
	`PASTE_CODE_FLOPS_COUNT
(
FADDS_ZHEEV
, 
FMULS_ZHEEV
, ((
DagDoubÀ_t
)
N
));

43 
LDA
 = 
	`d∂asma_imax
–LDA, 
N
 );

44 
LDB
 = 
	`d∂asma_imax
–LDB, 
N
 );

46 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

47 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

48 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

49 
N
, N, 
KP
, KP, 
P
));

50 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcT
, 1,

51 
two_dim_block_cy˛ic
, (&
dcT
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

52 
nodes
, 
ønk
, 
IB
, 
NB
, 
MT
*IB, 
N
, 0, 0,

53 
MT
*
IB
, 
N
, 
KP
, KP, 
P
));

56 
	`d∂asma_z∂ghe
–
∑r£c
, ()
N
, 
u∂o
,

57 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 3872);

58 #ifde‡
PRINTF_HEAVY


59 
	`¥ötf
("########### A (initial,Åile storage)\n");

60 
	`d∂asma_z¥öt
–
∑r£c
, 
u∂o
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
 );

64 
	`PASTE_CODE_ENQUEUE_KERNEL
(
∑r£c
, 
zhîbt
,

65 (
u∂o
, 
IB
,

66 (
∑r£c_tûed_m©rix_dc_t
*)&
dcA
,

67 (
∑r£c_tûed_m©rix_dc_t
*)&
dcT
));

68 
	`PASTE_CODE_PROGRESS_KERNEL
(
∑r£c
, 
zhîbt
);

69 #ifde‡
PRINTF_HEAVY


70 
	`¥ötf
("########### A (reducedÅo band form)\n");

71 
	`d∂asma_z¥öt
–
∑r£c
, 
u∂o
, &
dcA
);

74 
fö
;

77 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcBAND
, 1,

78 
two_dim_block_cy˛ic
, (&
dcBAND
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

79 
nodes
, 
ønk
, 
MB
+1, 
NB
+2, MB+1, (NB+2)*(
NT
+1), 0, 0,

80 
MB
+1, (
NB
+2)*(
NT
+1), 1, 
KQ
, 1 ));

81 
	`SYNC_TIME_START
();

82 
∑r£c_düg_b™d_to_ª˘_èskpoﬁ_t
* 
PARSEC_düg_b™d_to_ª˘
 = 
	`∑r£c_düg_b™d_to_ª˘_√w
((
sym_two_dim_block_cy˛ic_t
*)&
dcA
, &
dcBAND
,

83 
MT
, 
NT
, 
MB
, 
NB
, (
d∂asma_com∂ex64_t
));

84 
∑r£c_¨ía_d©©y≥_t
* 
adt
 = &
PARSEC_düg_b™d_to_ª˘
->
¨ías_d©©y≥s
[
PARSEC_düg_b™d_to_ª˘_DEFAULT_ARENA
];

85 
	`d∂asma_add2¨ía_tûe
(
adt
,

86 
MB
*
NB
*(
d∂asma_com∂ex64_t
),

87 
PARSEC_ARENA_ALIGNMENT_SSE
,

88 
∑r£c_d©©y≥_doubÀ_com∂ex_t
, 
MB
);

89 
rc
 = 
	`∑r£c_c⁄ãxt_add_èskpoﬁ
(
∑r£c
, (
∑r£c_èskpoﬁ_t
*)
PARSEC_düg_b™d_to_ª˘
);

90 
	`PARSEC_CHECK_ERROR
(
rc
, "parsec_context_add_taskpool");

91 
rc
 = 
	`∑r£c_c⁄ãxt_°¨t
(
∑r£c
);

92 
	`PARSEC_CHECK_ERROR
(
rc
, "parsec_context_start");

93 
rc
 = 
	`∑r£c_c⁄ãxt_waô
(
∑r£c
);

94 
	`PARSEC_CHECK_ERROR
(
rc
, "parsec_context_wait");

95 
	`SYNC_TIME_PRINT
(
ønk
, ( "düg_b™d_to_ª˘ N%d NB = %d : %‡s\n", 
N
, 
NB
, 
sync_time_ñ≠£d
));

96 #ifde‡
PRINTF_HEAVY


97 
	`¥ötf
("########### BAND (converted from A)\n");

98 
	`d∂asma_z¥öt
(
∑r£c
, 
d∂asmaUµîLowî
, &
dcBAND
);

102 
	`PASTE_CODE_ENQUEUE_KERNEL
(
∑r£c
, 
zhbrdt
, ((
∑r£c_tûed_m©rix_dc_t
*)&
dcBAND
));

103 
	`PASTE_CODE_PROGRESS_KERNEL
(
∑r£c
, 
zhbrdt
);

105 if–
check
 ) {

106 
d∂asma_com∂ex64_t
 *
A0
 = (d∂asma_com∂ex64_à*)
	`mÆloc
(
LDA
*
N
*(dplasma_complex64_t));

107 *
W0
 = (*)
	`mÆloc
(
N
*());

108 
d∂asma_com∂ex64_t
* 
b™d
;

109 *
D
 = (*)
	`mÆloc
(
N
*());

110 *
E
 = (*)
	`mÆloc
(
N
*());

111 
INFO
;

114 
	`SYNC_TIME_START
();

115 if–
P
*
Q
 > 1 ) {

119 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcW
, 1,

120 
two_dim_block_cy˛ic
, (&
dcW
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

121 
nodes
, 
ønk
, 2, 
N
, 1, 1, 0, 0, 2, N, 1, 1, 1));

123 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcW
, 1,

124 
two_dim_block_cy˛ic
, (&
dcW
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

125 1, 
ønk
, 
MB
+1, 
NB
+2, MB+1, (NB+2)*
NT
, 0, 0,

126 
MB
+1, (
NB
+2)*
NT
, 1, 1, 1 ));

128 
	`d∂asma_zœ˝y
(
∑r£c
, 
d∂asmaUµîLowî
, &
dcBAND
.
su≥r
, &
dcW
.super);

129 
b™d
 = 
dcW
.
m©
;

132 
b™d
 = 
dcBAND
.
m©
;

135 if–0 =
ønk
 ) {

137 
k
, 
sizóª«
 = (
MB
+1)*(
NB
+2);

139  
k
=0; k<
NT
-1; k++ ) {

140  
j
=0; j<
NB
; j++ ) {

141 if–(
k
*
NB
)+
j
 >
N
 ) ;

142 
D
[(
k
*
NB
)+
j
] = 
	`¸ól
(
b™d
[(k*
sizóª«
)+ (
MB
+1)*j]);

143 
E
[(
k
*
NB
)+
j
] = 
	`¸ól
(
b™d
[(k*
sizóª«
)+ (
MB
+1)*j+1]);

146  
j
=0; j<
NB
-1; j++ ) {

147 if–(
k
*
NB
)+
j
 >
N
 ) ;

148 
D
[(
k
*
NB
)+
j
] = 
	`¸ól
(
b™d
[(k*
sizóª«
)+ (
MB
+1)*j]);

149 
E
[(
k
*
NB
)+
j
] = 
	`¸ól
(
b™d
[(k*
sizóª«
)+ (
MB
+1)*j+1]);

151 if–(
k
*
NB
)+
j
 < 
N
 ) 
D
[(k*NB)+j] = 
	`¸ól
(
b™d
[(k*
sizóª«
)+ (
MB
+1)*j]);

153 #ifde‡
PRINTF_HEAVY


154 
	`¥ötf
("############################\n"

156 
i
 = 0; i < 
N
; i++) {

157 
	`¥ötf
("% 11.4g ", 
D
[
i
]);

159 
	`¥ötf
("\nE= ");

160 
i
 = 0; i < 
N
-1; i++) {

161 
	`¥ötf
("% 11.4g ", 
E
[
i
]);

163 
	`¥ötf
("\n");

166 
	`LAPACK_d°îf
–&
N
, 
D
, 
E
, &
INFO
);

167 
	`as£π
–0 =
INFO
 );

169 
	`SYNC_TIME_PRINT
–
ønk
, ("Dplasma Stage3: dsterf\n"));

173 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA0t
, 1,

174 
two_dim_block_cy˛ic
, (&
dcA0t
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

175 1, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

176 
N
, N, 1, 1, 1));

178 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0.0, 0.0, &
dcA0t
.
su≥r
);

179 
	`d∂asma_z∂ghe
–
∑r£c
, ()
N
, 
u∂o
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0t
, 3872);

181 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA0
, 1,

182 
two_dim_block_cy˛ic
, (&
dcA0
, 
m©rix_Com∂exDoubÀ
, 
m©rix_L≠ack
,

183 1, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

184 
N
, N, 1, 1, 1));

185 
	`d∂asma_zœ˝y
–
∑r£c
, 
u∂o
, &
dcA0t
.
su≥r
, &
dcA0
.super);

186 
	`∑r£c_d©a_‰ì
(
dcA0t
.
m©
);

187 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA0t
);

188 #ifde‡
PRINTF_HEAVY


189 
	`¥ötf
("########### A0 (initial,Üapack storage)\n");

190 
	`d∂asma_z¥öt
–
∑r£c
, 
u∂o
, &
dcA0
 );

192 if–0 =
ønk
 ) {

193 
A0
 = 
dcA0
.
m©
;

195 
	`TIME_START
();

196 
	`LAPACKE_zhìv
–
LAPACK_COL_MAJOR
,

197 
	`d∂asma_œ∑ck_c⁄°
(
d∂asmaNoVec
), d∂asma_œ∑ck_c⁄°(
u∂o
),

198 
N
, 
A0
, 
LDA
, 
W0
);

199 
	`TIME_PRINT
(
ønk
, ("LAPACK HEEV\n"));

201 #ifde‡
PRINTF_HEAVY


202 
	`¥ötf
("########### A0 (after LAPACK directÉignesolver)\n");

203 
	`d∂asma_z¥öt
–
∑r£c
, 
u∂o
, &
dcA0
 );

205 
	`∑r£c_d©a_‰ì
(
dcA0
.
m©
);

206 
	`∑r£c_tûed_m©rix_dc_de°roy
–&
dcA0
.
su≥r
 );

207 if–0 =
ønk
 ) {

208 #ifde‡
PRINTF_HEAVY


209 
	`¥ötf
("\n###############\nDPLASMA Eignevalues\n");

210 
i
 = 0; i < 
N
; i++) {

211 
	`¥ötf
("% .14e", 
D
[
i
]);

213 
	`¥ötf
("\nLAPACK Eigenvalues\n");

214 
i
 = 0; i < 
N
; i++) {

215 
	`¥ötf
("% .14ê", 
W0
[
i
]);

217 
	`¥ötf
("\n");

219 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

220 
	`¥ötf
("\n");

221 
	`¥ötf
("------ TESTS FOR PLASMA ZHEEV ROUTINE ------- \n");

222 
	`¥ötf
(" Sizêo‡thêM©rix %d by %d\n", 
N
, N);

223 
	`¥ötf
("\n");

224 
	`¥ötf
(" The matrix A isÑandomly generated forÉachÅest.\n");

225 
	`¥ötf
("============\n");

226 
	`¥ötf
(" Thêªœtivêmachöê¥ecisi⁄ (ïsËi†tÿbê%ê\n",
ïs
);

227 
	`¥ötf
(" ComputationalÅestsÖass if scaledÑesidualsáreÜessÅhan 60.\n");

230 
öfo_sﬁuti⁄
 = 
	`check_sﬁuti⁄
(
N
, 
W0
, 
D
, 
ïs
);

232 i‡(
öfo_sﬁuti⁄
 == 0) {

233 
	`¥ötf
("***************************************************\n");

234 
	`¥ötf
(" ---- TESTING ZHEEV ..................... PASSED !\n");

235 
	`¥ötf
("***************************************************\n");

238 
	`¥ötf
("************************************************\n");

239 
	`¥ötf
(" - TESTING ZHEEV ..................... FAILED !\n");

240 
	`¥ötf
("************************************************\n");

243 
	`‰ì
(
W0
); fªe(
D
); fªe(
E
);

246 
	`d∂asma_zhîbt_De°ru˘
–
PARSEC_zhîbt
 );

247 
	`∑r£c_èskpoﬁ_‰ì
–&
PARSEC_düg_b™d_to_ª˘
->
su≥r
 );

248 
	`d∂asma_zhbrdt_De°ru˘
–
PARSEC_zhbrdt
 );

250 
	`∑r£c_d©a_‰ì
(
dcBAND
.
m©
);

251 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

252 
	`∑r£c_d©a_‰ì
(
dcT
.
m©
);

253 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcBAND
);

254 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

255 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcT
);

256 
fö
:

257 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

259  
EXIT_SUCCESS
;

260 
	}
}

263 
	~"m©h.h
"

268 
	$check_sﬁuti⁄
(
N
, *
E1
, *
E2
, 
ïs
)

270 
öfo_sﬁuti⁄
, 
i
;

271 
ªsid
;

272 
maxtmp
;

273 
maxñ
 = 
	`Ábs
–Ábs(
E1
[0]Ë- fabs(
E2
[0]) );

274 
maxeig
 = 
	`fmax
–
	`Ábs
(
E1
[0]), fabs(
E2
[0]) );

275 
i
 = 1; i < 
N
; i++){

276 
ªsid
 = 
	`Ábs
(Ábs(
E1
[
i
])-Ábs(
E2
[i]));

277 
maxtmp
 = 
	`fmax
(
	`Ábs
(
E1
[
i
]), fabs(
E2
[i]));

280 
maxeig
 = 
	`fmax
(
maxtmp
, maxeig);

281 
maxñ
 = 
	`fmax
(
ªsid
, maxel );

284 
maxñ
 = maxñ / (
maxeig
 * 
N
 * 
ïs
);

285 
	`¥ötf
(" ======================================================\n");

286 
	`¥ötf
(" | D -Éigcompuãd | / (|D| * N *ÉpsË: %15.3E \n", 
maxñ
 );

287 
	`¥ötf
(" ======================================================\n");

289 i‡–
	`i¢™
(
maxñ
Ë|| 
	`isöf
(maxel) || (maxel > 100) ) {

290 
	`¥ötf
("-- TheÉigenvaluesáre suspicious ! \n");

291 
öfo_sﬁuti⁄
 = 1;

294 
	`¥ötf
("-- TheÉigenvaluesáre CORRECT ! \n");

295 
öfo_sﬁuti⁄
 = 0;

297  
öfo_sﬁuti⁄
;

298 
	}
}

	@testing_zhemm.c

10 
	~"comm⁄.h
"

11 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

12 
	~"∑r£c/d©a_di°/m©rix/sym_two_dim_ª˘™gÀ_cy˛ic.h
"

14 
check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

15 
d∂asma_íum_t
 
side
, d∂asma_íum_à
u∂o
,

16 
d∂asma_com∂ex64_t
 
Æpha
, 
Am
, 
An
, 
A£ed
,

17 
d∂asma_com∂ex64_t
 
bëa
, 
M
, 
N
, 
B£ed
, 
C£ed
,

18 
two_dim_block_cy˛ic_t
 *
dcCföÆ
 );

20 
	$maö
(
¨gc
, ** 
¨gv
)

22 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

23 
ù¨am
[
IPARAM_SIZEOF
];

24 
ªt
 = 0;

25 
A£ed
 = 3872;

26 
B£ed
 = 4674;

27 
C£ed
 = 2873;

28 
d∂asma_com∂ex64_t
 
Æpha
 = 3.5 - 
I
 * 4.2;

29 
d∂asma_com∂ex64_t
 
bëa
 = -2.8 + 
I
 * 0.7;

32 
	`ù¨am_deÁu…_gemm
(
ù¨am
);

33 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 0, 200, 200);

34 
ù¨am
[
IPARAM_NGPUS
] = 
DPLASMA_ERR_NOT_SUPPORTED
;

37 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

38 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

40 
LDB
 = 
	`max
(LDB, 
M
);

41 
LDC
 = 
	`max
(LDC, 
M
);

43 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB
, 1,

44 
two_dim_block_cy˛ic
, (&
dcB
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

45 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
N
, 0, 0,

46 
M
, 
N
, 
KP
, 
KQ
, 
P
));

48 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC
, 1,

49 
two_dim_block_cy˛ic
, (&
dcC
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

50 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

51 
M
, 
N
, 
KP
, 
KQ
, 
P
));

53 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC2
, 
check
,

54 
two_dim_block_cy˛ic
, (&
dcC2
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

55 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

56 
M
, 
N
, 
KP
, 
KQ
, 
P
));

58 i‡(
loud
 > 2Ë
	`¥ötf
("Generate matrices ... ");

59 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, 
B£ed
);

60 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
, 
C£ed
);

61 i‡(
check
)

62 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC2
, 
C£ed
);

63 i‡(
loud
 > 2Ë
	`¥ötf
("Done\n");

65 if(!
check
)

67 
d∂asma_íum_t
 
side
 = 
d∂asmaLe·
;

68 
d∂asma_íum_t
 
u∂o
 = 
d∂asmaLowî
;

69 
Am
 = ( 
side
 =
d∂asmaLe·
 ? 
M
 : 
N
 );

70 
LDA
 = 
	`max
(LDA, 
Am
);

72 
	`PASTE_CODE_FLOPS
(
FLOPS_ZHEMM
, (
side
, (
DagDoubÀ_t
)
M
, (DagDoubÀ_t)
N
));

74 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

75 
sym_two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
,

76 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
Am
, 0, 0,

77 
Am
, Am, 
P
, 
u∂o
));

80 if(
loud
 > 2Ë
	`¥ötf
("+++ Generate matrices ... ");

81 
	`d∂asma_z∂ghe
–
∑r£c
, 0., 
u∂o
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
A£ed
);

82 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

85 
	`PASTE_CODE_ENQUEUE_KERNEL
(
∑r£c
, 
zhemm
,

86 (
side
, 
u∂o
,

87 
Æpha
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

88 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

89 
bëa
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
));

92 
	`PASTE_CODE_PROGRESS_KERNEL
(
∑r£c
, 
zhemm
);

94 
	`d∂asma_zhemm_De°ru˘
–
PARSEC_zhemm
 );

96 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

97 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

101 
s
, 
u
;

102 
öfo_sﬁuti⁄
;

104 
s
=0; s<2; s++) {

106 
Am
 = ( 
side
[
s
] =
d∂asmaLe·
 ? 
M
 : 
N
 );

107 
LDA
 = 
	`max
(LDA, 
Am
);

109 
u
=0; u<2; u++) {

111 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

112 
sym_two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
,

113 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
Am
, 0, 0,

114 
Am
, Am, 
P
, 
u∂o
[
u
]));

116 i‡(
loud
 > 2Ë
	`¥ötf
("Generate matrices ... ");

117 
	`d∂asma_z∂ghe
–
∑r£c
, 0., 
u∂o
[
u
], (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
A£ed
);

118 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

119 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC2
, (∑r£c_tûed_m©rix_dc_à*)&
dcC
 );

120 i‡(
loud
 > 2Ë
	`¥ötf
("Done\n");

123 i‡(
loud
 > 2Ë
	`¥ötf
("Compute ... ... ");

124 
	`d∂asma_zhemm
(
∑r£c
, 
side
[
s
], 
u∂o
[
u
],

125 
Æpha
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

126 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

127 
bëa
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

128 i‡(
loud
 > 2Ë
	`¥ötf
("Done\n");

131 
öfo_sﬁuti⁄
 = 
	`check_sﬁuti⁄
(
∑r£c
, 
ønk
 =0 ? 
loud
 : 0,

132 
side
[
s
], 
u∂o
[
u
],

133 
Æpha
, 
Am
, Am, 
A£ed
,

134 
bëa
, 
M
, 
N
, 
B£ed
, 
C£ed
,

135 &
dcC
);

137 i‡–
ønk
 == 0 ) {

138 i‡(
öfo_sﬁuti⁄
 == 0) {

139 
	`¥ötf
(" ---- TESTING ZHEMM (%s, %s) ...... PASSED !\n",

140 
side°r
[
s
], 
u∂o°r
[
u
]);

143 
	`¥ötf
(" ---- TESTING ZHEMM (%s, %s) ... FAILED !\n",

144 
side°r
[
s
], 
u∂o°r
[
u
]);

145 
ªt
 |= 1;

147 
	`¥ötf
("***************************************************\n");

150 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

151 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

155 
	`∑r£c_d©a_‰ì
(
dcC2
.
m©
);

156 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcC2
);

159 
	`∑r£c_d©a_‰ì
(
dcB
.
m©
);

160 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcB
);

161 
	`∑r£c_d©a_‰ì
(
dcC
.
m©
);

162 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcC
);

164 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

166  
ªt
;

167 
	}
}

177 
	$check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

178 
d∂asma_íum_t
 
side
, d∂asma_íum_à
u∂o
,

179 
d∂asma_com∂ex64_t
 
Æpha
, 
Am
, 
An
, 
A£ed
,

180 
d∂asma_com∂ex64_t
 
bëa
, 
M
, 
N
, 
B£ed
, 
C£ed
,

181 
two_dim_block_cy˛ic_t
 *
dcCföÆ
 )

183 
öfo_sﬁuti⁄
 = 1;

184 
An‹m
, 
Bn‹m
, 
Cöôn‹m
, 
Cd∂asm™‹m
, 
Cœ∑ckn‹m
, 
Rn‹m
;

185 
ïs
, 
ªsu…
;

186 
MB
 = 
dcCföÆ
->
su≥r
.
mb
;

187 
NB
 = 
dcCföÆ
->
su≥r
.
nb
;

188 
LDA
 = 
Am
;

189 
LDC
 = 
M
;

190 
LDB
 = 
LDC
;

191 
ønk
 = 
dcCföÆ
->
su≥r
.su≥r.
myønk
;

193 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

195 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

196 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_L≠ack
,

197 1, 
ønk
, 
MB
, 
NB
, 
LDA
, 
An
, 0, 0,

198 
Am
, 
An
, 1, 1, 1));

199 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB
, 1,

200 
two_dim_block_cy˛ic
, (&
dcB
, 
m©rix_Com∂exDoubÀ
, 
m©rix_L≠ack
,

201 1, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

202 
M
, 
N
, 1, 1, 1));

203 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC
, 1,

204 
two_dim_block_cy˛ic
, (&
dcC
, 
m©rix_Com∂exDoubÀ
, 
m©rix_L≠ack
,

205 1, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

206 
M
, 
N
, 1, 1, 1));

208 
	`d∂asma_z∂ghe
–
∑r£c
, 0., 
d∂asmaUµîLowî
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
A£ed
);

209 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, 
B£ed
 );

210 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
, 
C£ed
 );

212 
An‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcA
 );

213 
Bn‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcB
 );

214 
Cöôn‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcC
 );

215 
Cd∂asm™‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)
dcCföÆ
 );

217 i‡–
ønk
 == 0 ) {

218 
	`cbœs_zhemm
(
CbœsCﬁMaj‹
,

219 (
CBLAS_SIDE
)
side
, (
CBLAS_UPLO
)
u∂o
,

220 
M
, 
N
,

221 
	`CBLAS_SADDR
(
Æpha
), 
dcA
.
m©
, 
LDA
,

222 
dcB
.
m©
, 
LDB
,

223 
	`CBLAS_SADDR
(
bëa
), 
dcC
.
m©
, 
LDC
);

226 
Cœ∑ckn‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcC
 );

228 
	`d∂asma_zgódd
–
∑r£c
, 
d∂asmaNoTøns
, -1.0, (
∑r£c_tûed_m©rix_dc_t
*)
dcCföÆ
,

229 1.0, (
∑r£c_tûed_m©rix_dc_t
*)&
dcC
 );

231 
Rn‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaMaxN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcC
 );

233 
ªsu…
 = 
Rn‹m
 / (
Cœ∑ckn‹m
 * 
	`max
(
M
,
N
Ë* 
ïs
);

235 i‡–
ønk
 == 0 ) {

236 i‡–
loud
 > 2 ) {

237 
	`¥ötf
(" ||A||_inf = %e, ||B||_inf = %e, ||C||_inf = %e\n"

239 
An‹m
, 
Bn‹m
, 
Cöôn‹m
, 
Cœ∑ckn‹m
, 
Cd∂asm™‹m
, 
Rn‹m
, 
ªsu…
);

242 i‡–
	`isöf
(
Cœ∑ckn‹m
Ë|| isöf(
Cd∂asm™‹m
) ||

243 
	`i¢™
(
ªsu…
Ë|| 
	`isöf
(result) || (result > 10.0) ) {

244 
öfo_sﬁuti⁄
 = 1;

247 
öfo_sﬁuti⁄
 = 0;

251 #i‡
	`deföed
(
PARSEC_HAVE_MPI
)

252 
	`MPI_Bˇ°
(&
öfo_sﬁuti⁄
, 1, 
MPI_INT
, 0, 
MPI_COMM_WORLD
);

253 #ñi‡
	`deföed
(
PARSEC_HAVE_LCI
)

254 
	`lc_bˇ°
(&
öfo_sﬁuti⁄
, (), 0, *
lci_globÆ_ï
);

257 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

258 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

259 
	`∑r£c_d©a_‰ì
(
dcB
.
m©
);

260 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcB
);

261 
	`∑r£c_d©a_‰ì
(
dcC
.
m©
);

262 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcC
);

264  
öfo_sﬁuti⁄
;

265 
	}
}

	@testing_zher2k.c

10 
	~"comm⁄.h
"

11 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

12 
	~"∑r£c/d©a_di°/m©rix/sym_two_dim_ª˘™gÀ_cy˛ic.h
"

14 
check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

15 
d∂asma_íum_t
 
u∂o
, d∂asma_íum_à
å™s
,

16 
d∂asma_com∂ex64_t
 
Æpha
, 
Am
, 
An
, 
A£ed
, 
B£ed
,

17 
bëa
, 
M
, 
N
, 
C£ed
,

18 
sym_two_dim_block_cy˛ic_t
 *
dcCföÆ
 );

20 
	$maö
(
¨gc
, ** 
¨gv
)

22 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

23 
ù¨am
[
IPARAM_SIZEOF
];

24 
ªt
 = 0;

25 
A£ed
 = 3872;

26 
B£ed
 = 4674;

27 
C£ed
 = 2873;

28 
d∂asma_com∂ex64_t
 
Æpha
 = 3.5 - 
I
 * 4.2;

29 
bëa
 = -2.8;

32 
	`ù¨am_deÁu…_gemm
(
ù¨am
);

33 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 0, 200, 200);

34 
ù¨am
[
IPARAM_NGPUS
] = 
DPLASMA_ERR_NOT_SUPPORTED
;

37 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

38 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

40 
M
 = 
N
;

41 
LDC
 = 
	`d∂asma_imax
(LDC, 
N
);

43 if(!
check
)

45 
d∂asma_íum_t
 
u∂o
 = 
d∂asmaLowî
;

46 
d∂asma_íum_t
 
å™s
 = 
d∂asmaNoTøns
;

47 
Am
, 
An
;

49 
Am
 = (
å™s
 =
d∂asmaNoTøns
Ë? 
N
 : 
K
;

50 
An
 = (
å™s
 =
d∂asmaNoTøns
Ë? 
K
 : 
N
;

52 
	`PASTE_CODE_FLOPS
(
FLOPS_ZHER2K
, ((
DagDoubÀ_t
)
K
, (DagDoubÀ_t)
N
));

54 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

55 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

56 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
An
, 0, 0,

57 
Am
, 
An
, 
KP
, 
KQ
, 
P
));

59 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB
, 1,

60 
two_dim_block_cy˛ic
, (&
dcB
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

61 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
An
, 0, 0,

62 
Am
, 
An
, 
KP
, 
KQ
, 
P
));

64 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC
, 1,

65 
sym_two_dim_block_cy˛ic
, (&
dcC
, 
m©rix_Com∂exDoubÀ
,

66 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

67 
N
, N, 
P
, 
u∂o
));

70 if(
loud
 > 2Ë
	`¥ötf
("+++ Generate matrices ... ");

71 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
A£ed
);

72 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, 
B£ed
);

73 
	`d∂asma_z∂ghe
–
∑r£c
, 0., 
u∂o
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
, 
C£ed
);

74 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

77 
	`PASTE_CODE_ENQUEUE_KERNEL
(
∑r£c
, 
zhî2k
,

78 (
u∂o
, 
å™s
,

79 
Æpha
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

80 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

81 
bëa
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
));

84 
	`PASTE_CODE_PROGRESS_KERNEL
(
∑r£c
, 
zhî2k
);

86 
	`d∂asma_zhî2k_De°ru˘
–
PARSEC_zhî2k
 );

88 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

89 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

90 
	`∑r£c_d©a_‰ì
(
dcB
.
m©
);

91 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcB
);

92 
	`∑r£c_d©a_‰ì
(
dcC
.
m©
);

93 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcC
);

97 
u
, 
t
;

98 
öfo_sﬁuti⁄
;

100 
u
=0; u<2; u++) {

102 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC
, 1,

103 
sym_two_dim_block_cy˛ic
, (&
dcC
, 
m©rix_Com∂exDoubÀ
,

104 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

105 
N
, N, 
P
, 
u∂o
[
u
]));

107 
t
=0;Å<2;Å++) {

108 #i‡
	`deföed
(
PRECISION_z
Ë|| deföed(
PRECISION_c
)

109 i‡(
t
==1)Å++;

112 
Am
 = ( 
å™s
[
t
] =
d∂asmaNoTøns
 ? 
N
 : 
K
 );

113 
An
 = ( 
å™s
[
t
] =
d∂asmaNoTøns
 ? 
K
 : 
N
 );

114 
LDA
 = 
	`max
(LDA, 
Am
);

116 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

117 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

118 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
An
, 0, 0,

119 
Am
, 
An
, 
KP
, 
KQ
, 
P
));

121 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB
, 1,

122 
two_dim_block_cy˛ic
, (&
dcB
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

123 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
An
, 0, 0,

124 
Am
, 
An
, 
KP
, 
KQ
, 
P
));

126 i‡(
loud
 > 2Ë
	`¥ötf
("Generate matrices ... ");

127 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
A£ed
);

128 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, 
B£ed
);

129 
	`d∂asma_z∂ghe
–
∑r£c
, 0., 
u∂o
[
u
], (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
, 
C£ed
);

130 i‡(
loud
 > 2Ë
	`¥ötf
("Done\n");

133 i‡(
loud
 > 2Ë
	`¥ötf
("Compute ... ... ");

134 
	`d∂asma_zhî2k
(
∑r£c
, 
u∂o
[
u
], 
å™s
[
t
],

135 
Æpha
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

136 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

137 
bëa
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

138 i‡(
loud
 > 2Ë
	`¥ötf
("Done\n");

141 
öfo_sﬁuti⁄
 = 
	`check_sﬁuti⁄
(
∑r£c
, 
ønk
 =0 ? 
loud
 : 0,

142 
u∂o
[
u
], 
å™s
[
t
],

143 
Æpha
, 
Am
, 
An
, 
A£ed
, 
B£ed
,

144 
bëa
, 
N
, N, 
C£ed
,

145 &
dcC
);

147 i‡–
ønk
 == 0 ) {

148 i‡(
öfo_sﬁuti⁄
 == 0) {

149 
	`¥ötf
(" ---- TESTING ZHER2K (%s, %s) ...... PASSED !\n",

150 
u∂o°r
[
u
], 
å™s°r
[
t
]);

153 
	`¥ötf
(" ---- TESTING ZHER2K (%s, %s) ... FAILED !\n",

154 
u∂o°r
[
u
], 
å™s°r
[
t
]);

155 
ªt
 |= 1;

157 
	`¥ötf
("***************************************************\n");

160 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

161 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

162 
	`∑r£c_d©a_‰ì
(
dcB
.
m©
);

163 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcB
);

165 
	`∑r£c_d©a_‰ì
(
dcC
.
m©
);

166 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcC
);

170 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

172  
ªt
;

173 
	}
}

183 
	$check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

184 
d∂asma_íum_t
 
u∂o
, d∂asma_íum_à
å™s
,

185 
d∂asma_com∂ex64_t
 
Æpha
, 
Am
, 
An
, 
A£ed
, 
B£ed
,

186 
bëa
, 
M
, 
N
, 
C£ed
,

187 
sym_two_dim_block_cy˛ic_t
 *
dcCföÆ
 )

189 
öfo_sﬁuti⁄
 = 1;

190 
An‹m
, 
Bn‹m
, 
Cöôn‹m
, 
Cd∂asm™‹m
, 
Cœ∑ckn‹m
, 
Rn‹m
;

191 
ïs
, 
ªsu…
;

192 
MB
 = 
dcCföÆ
->
su≥r
.
mb
;

193 
NB
 = 
dcCföÆ
->
su≥r
.
nb
;

194 
LDA
 = 
Am
;

195 
LDC
 = 
M
;

196 
ønk
 = 
dcCföÆ
->
su≥r
.su≥r.
myønk
;

198 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

200 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

201 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_L≠ack
,

202 1, 
ønk
, 
MB
, 
NB
, 
LDA
, 
An
, 0, 0,

203 
Am
, 
An
, 1, 1, 1));

204 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB
, 1,

205 
two_dim_block_cy˛ic
, (&
dcB
, 
m©rix_Com∂exDoubÀ
, 
m©rix_L≠ack
,

206 1, 
ønk
, 
MB
, 
NB
, 
LDA
, 
An
, 0, 0,

207 
Am
, 
An
, 1, 1, 1));

208 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC
, 1,

209 
two_dim_block_cy˛ic
, (&
dcC
, 
m©rix_Com∂exDoubÀ
, 
m©rix_L≠ack
,

210 1, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

211 
M
, 
N
, 1, 1, 1));

213 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
A£ed
);

214 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, 
B£ed
);

215 
	`d∂asma_z∂ghe
–
∑r£c
, 0., 
d∂asmaUµîLowî
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
, 
C£ed
 );

217 
An‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcA
 );

218 
Bn‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcB
 );

219 
Cöôn‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcC
 );

220 
Cd∂asm™‹m
 = 
	`d∂asma_zœnhe
–
∑r£c
, 
d∂asmaInfN‹m
, 
u∂o
, (
∑r£c_tûed_m©rix_dc_t
*)
dcCföÆ
 );

222 i‡–
ønk
 == 0 ) {

223 
	`cbœs_zhî2k
(
CbœsCﬁMaj‹
,

224 (
CBLAS_UPLO
)
u∂o
, (
CBLAS_TRANSPOSE
)
å™s
,

225 
N
, (
å™s
 =
d∂asmaNoTøns
Ë? 
An
 : 
Am
,

226 
	`CBLAS_SADDR
(
Æpha
), 
dcA
.
m©
, 
LDA
,

227 
dcB
.
m©
, 
LDA
,

228 
bëa
, 
dcC
.
m©
, 
LDC
);

231 
Cœ∑ckn‹m
 = 
	`d∂asma_zœnhe
–
∑r£c
, 
d∂asmaInfN‹m
, 
u∂o
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcC
 );

233 
	`d∂asma_zåadd
–
∑r£c
, 
u∂o
, 
d∂asmaNoTøns
,

234 -1.0, (
∑r£c_tûed_m©rix_dc_t
*)
dcCföÆ
,

235 1.0, (
∑r£c_tûed_m©rix_dc_t
*)&
dcC
 );

237 
Rn‹m
 = 
	`d∂asma_zœnhe
–
∑r£c
, 
d∂asmaMaxN‹m
, 
u∂o
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcC
 );

239 
ªsu…
 = 
Rn‹m
 / (
Cœ∑ckn‹m
 * 
	`max
(
M
,
N
Ë* 
ïs
);

241 i‡–
ønk
 == 0 ) {

242 i‡–
loud
 > 2 ) {

243 
	`¥ötf
(" ||A||_inf = %e, ||B||_inf = %e, ||C||_inf = %e\n"

245 
An‹m
, 
Bn‹m
, 
Cöôn‹m
, 
Cœ∑ckn‹m
, 
Cd∂asm™‹m
, 
Rn‹m
, 
ªsu…
);

248 i‡–
	`isöf
(
Cœ∑ckn‹m
Ë|| isöf(
Cd∂asm™‹m
) ||

249 
	`i¢™
(
ªsu…
Ë|| 
	`isöf
(result) || (result > 10.0) ) {

250 
öfo_sﬁuti⁄
 = 1;

253 
öfo_sﬁuti⁄
 = 0;

257 #i‡
	`deföed
(
PARSEC_HAVE_MPI
)

258 
	`MPI_Bˇ°
(&
öfo_sﬁuti⁄
, 1, 
MPI_INT
, 0, 
MPI_COMM_WORLD
);

259 #ñi‡
	`deföed
(
PARSEC_HAVE_LCI
)

260 
	`lc_bˇ°
(&
öfo_sﬁuti⁄
, (), 0, *
lci_globÆ_ï
);

263 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

264 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

265 
	`∑r£c_d©a_‰ì
(
dcB
.
m©
);

266 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcB
);

267 
	`∑r£c_d©a_‰ì
(
dcC
.
m©
);

268 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcC
);

270  
öfo_sﬁuti⁄
;

271 
	}
}

	@testing_zherk.c

10 
	~"comm⁄.h
"

11 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

12 
	~"∑r£c/d©a_di°/m©rix/sym_two_dim_ª˘™gÀ_cy˛ic.h
"

14 
check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

15 
d∂asma_íum_t
 
u∂o
, d∂asma_íum_à
å™s
,

16 
Æpha
, 
Am
, 
An
, 
A£ed
,

17 
bëa
, 
M
, 
N
, 
C£ed
,

18 
sym_two_dim_block_cy˛ic_t
 *
dcCföÆ
 );

20 
	$maö
(
¨gc
, ** 
¨gv
)

22 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

23 
ù¨am
[
IPARAM_SIZEOF
];

24 
ªt
 = 0;

25 
A£ed
 = 3872;

26 
C£ed
 = 2873;

27 
Æpha
 = 3.5;

28 
bëa
 = -2.8;

31 
	`ù¨am_deÁu…_gemm
(
ù¨am
);

32 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 0, 200, 200);

33 
ù¨am
[
IPARAM_NGPUS
] = 
DPLASMA_ERR_NOT_SUPPORTED
;

36 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

37 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

39 
M
 = 
N
;

40 
LDC
 = 
	`max
(LDC, 
N
);

42 if(!
check
)

44 
d∂asma_íum_t
 
u∂o
 = 
d∂asmaLowî
;

45 
d∂asma_íum_t
 
å™s
 = 
d∂asmaNoTøns
;

46 
Am
 = ( 
å™s
 =
d∂asmaNoTøns
 ? 
N
 : 
K
 );

47 
An
 = ( 
å™s
 =
d∂asmaNoTøns
 ? 
K
 : 
N
 );

48 
LDA
 = 
	`max
(LDA, 
Am
);

50 
	`PASTE_CODE_FLOPS
(
FLOPS_ZHERK
, ((
DagDoubÀ_t
)
K
, (DagDoubÀ_t)
N
));

52 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

53 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

54 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
An
, 0, 0,

55 
Am
, 
An
, 
KP
, 
KQ
, 
P
));

57 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC
, 1,

58 
sym_two_dim_block_cy˛ic
, (&
dcC
, 
m©rix_Com∂exDoubÀ
,

59 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

60 
N
, N, 
P
, 
u∂o
));

63 if(
loud
 > 2Ë
	`¥ötf
("+++ Generate matrices ... ");

64 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
A£ed
);

65 
	`d∂asma_z∂ghe
–
∑r£c
, 0., 
u∂o
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
, 
C£ed
);

66 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

69 
	`PASTE_CODE_ENQUEUE_KERNEL
(
∑r£c
, 
zhîk
,

70 (
u∂o
, 
å™s
,

71 
Æpha
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

72 
bëa
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
));

75 
	`PASTE_CODE_PROGRESS_KERNEL
(
∑r£c
, 
zhîk
);

77 
	`d∂asma_zhîk_De°ru˘
–
PARSEC_zhîk
 );

79 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

80 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

81 
	`∑r£c_d©a_‰ì
(
dcC
.
m©
);

82 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcC
);

86 
u
, 
t
;

87 
öfo_sﬁuti⁄
;

89 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC2
, 
check
,

90 
two_dim_block_cy˛ic
, (&
dcC2
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

91 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

92 
N
, N, 
KP
, 
KQ
, 
P
));

94 i‡(
loud
 > 2Ë
	`¥ötf
("Generate matrices ... ");

95 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC2
, 
C£ed
);

96 i‡(
loud
 > 2Ë
	`¥ötf
("Done\n");

98 
u
=0; u<2; u++) {

99 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC
, 1,

100 
sym_two_dim_block_cy˛ic
, (&
dcC
, 
m©rix_Com∂exDoubÀ
,

101 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

102 
N
, N, 
P
, 
u∂o
[
u
]));

104 
t
=0;Å<2;Å++) {

105 #i‡
	`deföed
(
PRECISION_z
Ë|| deföed(
PRECISION_c
)

106 i‡(
t
==1)Å++;

109 
Am
 = ( 
å™s
[
t
] =
d∂asmaNoTøns
 ? 
N
 : 
K
 );

110 
An
 = ( 
å™s
[
t
] =
d∂asmaNoTøns
 ? 
K
 : 
N
 );

111 
LDA
 = 
	`max
(LDA, 
Am
);

113 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

114 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

115 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
An
, 0, 0,

116 
Am
, 
An
, 
KP
, 
KQ
, 
P
));

118 i‡(
loud
 > 2Ë
	`¥ötf
("Generate matrices ... ");

119 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
A£ed
);

120 
	`d∂asma_zœ˝y
–
∑r£c
, 
u∂o
[
u
],

121 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC2
, (∑r£c_tûed_m©rix_dc_à*)&
dcC
 );

122 i‡(
loud
 > 2Ë
	`¥ötf
("Done\n");

125 i‡(
loud
 > 2Ë
	`¥ötf
("Compute ... ... ");

126 
	`d∂asma_zhîk
(
∑r£c
, 
u∂o
[
u
], 
å™s
[
t
],

127 
Æpha
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

128 
bëa
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

129 i‡(
loud
 > 2Ë
	`¥ötf
("Done\n");

132 
öfo_sﬁuti⁄
 = 
	`check_sﬁuti⁄
(
∑r£c
, 
ønk
 =0 ? 
loud
 : 0,

133 
u∂o
[
u
], 
å™s
[
t
],

134 
Æpha
, 
Am
, 
An
, 
A£ed
,

135 
bëa
, 
N
, N, 
C£ed
,

136 &
dcC
);

138 i‡–
ønk
 == 0 ) {

139 i‡(
öfo_sﬁuti⁄
 == 0) {

140 
	`¥ötf
(" ---- TESTING ZHERK (%s, %s) ...... PASSED !\n",

141 
u∂o°r
[
u
], 
å™s°r
[
t
]);

144 
	`¥ötf
(" ---- TESTING ZHERK (%s, %s) ... FAILED !\n",

145 
u∂o°r
[
u
], 
å™s°r
[
t
]);

146 
ªt
 |= 1;

148 
	`¥ötf
("***************************************************\n");

151 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

152 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

154 
	`∑r£c_d©a_‰ì
(
dcC
.
m©
);

155 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcC
);

158 
	`∑r£c_d©a_‰ì
(
dcC2
.
m©
);

159 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcC2
);

162 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

164  
ªt
;

165 
	}
}

175 
	$check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

176 
d∂asma_íum_t
 
u∂o
, d∂asma_íum_à
å™s
,

177 
Æpha
, 
Am
, 
An
, 
A£ed
,

178 
bëa
, 
M
, 
N
, 
C£ed
,

179 
sym_two_dim_block_cy˛ic_t
 *
dcCföÆ
 )

181 
öfo_sﬁuti⁄
 = 1;

182 
An‹m
, 
Cöôn‹m
, 
Cd∂asm™‹m
, 
Cœ∑ckn‹m
, 
Rn‹m
;

183 
ïs
, 
ªsu…
;

184 
MB
 = 
dcCföÆ
->
su≥r
.
mb
;

185 
NB
 = 
dcCföÆ
->
su≥r
.
nb
;

186 
LDA
 = 
Am
;

187 
LDC
 = 
M
;

188 
ønk
 = 
dcCföÆ
->
su≥r
.su≥r.
myønk
;

190 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

192 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

193 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_L≠ack
,

194 1, 
ønk
, 
MB
, 
NB
, 
LDA
, 
An
, 0, 0,

195 
Am
, 
An
, 1, 1, 1));

196 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC
, 1,

197 
two_dim_block_cy˛ic
, (&
dcC
, 
m©rix_Com∂exDoubÀ
, 
m©rix_L≠ack
,

198 1, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

199 
M
, 
N
, 1, 1, 1));

201 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
A£ed
);

202 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
, 
C£ed
 );

204 
An‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcA
 );

205 
Cöôn‹m
 = 
	`d∂asma_zœnhe
–
∑r£c
, 
d∂asmaInfN‹m
, 
u∂o
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcC
 );

206 
Cd∂asm™‹m
 = 
	`d∂asma_zœnhe
–
∑r£c
, 
d∂asmaInfN‹m
, 
u∂o
, (
∑r£c_tûed_m©rix_dc_t
*)
dcCföÆ
 );

208 i‡–
ønk
 == 0 ) {

209 
	`cbœs_zhîk
(
CbœsCﬁMaj‹
,

210 (
CBLAS_UPLO
)
u∂o
, (
CBLAS_TRANSPOSE
)
å™s
,

211 
N
, (
å™s
 =
d∂asmaNoTøns
Ë? 
An
 : 
Am
,

212 
Æpha
, 
dcA
.
m©
, 
LDA
,

213 
bëa
, 
dcC
.
m©
, 
LDC
);

216 
Cœ∑ckn‹m
 = 
	`d∂asma_zœnhe
–
∑r£c
, 
d∂asmaInfN‹m
, 
u∂o
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcC
 );

218 
	`d∂asma_zåadd
–
∑r£c
, 
u∂o
, 
d∂asmaNoTøns
,

219 -1.0, (
∑r£c_tûed_m©rix_dc_t
*)
dcCföÆ
,

220 1.0, (
∑r£c_tûed_m©rix_dc_t
*)&
dcC
 );

222 
Rn‹m
 = 
	`d∂asma_zœnhe
–
∑r£c
, 
d∂asmaMaxN‹m
, 
u∂o
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcC
 );

224 
ªsu…
 = 
Rn‹m
 / (
Cœ∑ckn‹m
 * 
	`max
(
M
,
N
Ë* 
ïs
);

226 i‡–
ønk
 == 0 ) {

227 i‡–
loud
 > 2 ) {

228 
	`¥ötf
(" ||A||_inf = %e, ||C||_inf = %e\n"

230 
An‹m
, 
Cöôn‹m
, 
Cœ∑ckn‹m
, 
Cd∂asm™‹m
, 
Rn‹m
, 
ªsu…
);

233 i‡–
	`isöf
(
Cœ∑ckn‹m
Ë|| isöf(
Cd∂asm™‹m
) ||

234 
	`i¢™
(
ªsu…
Ë|| 
	`isöf
(result) || (result > 10.0) ) {

235 
öfo_sﬁuti⁄
 = 1;

238 
öfo_sﬁuti⁄
 = 0;

242 #i‡
	`deföed
(
PARSEC_HAVE_MPI
)

243 
	`MPI_Bˇ°
(&
öfo_sﬁuti⁄
, 1, 
MPI_INT
, 0, 
MPI_COMM_WORLD
);

244 #ñi‡
	`deföed
(
PARSEC_HAVE_LCI
)

245 
	`lc_bˇ°
(&
öfo_sﬁuti⁄
, (), 0, *
lci_globÆ_ï
);

248 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

249 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

250 
	`∑r£c_d©a_‰ì
(
dcC
.
m©
);

251 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcC
);

253  
öfo_sﬁuti⁄
;

254 
	}
}

	@testing_zlange.c

10 
	~"comm⁄.h
"

11 
	~"∑r£c/d©a_di°/m©rix/sym_two_dim_ª˘™gÀ_cy˛ic.h
"

12 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

14 
	$maö
(
¨gc
, ** 
¨gv
)

16 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

17 *
w‹k
 = 
NULL
;

18 
ªsu…
;

19 
n‹mœp
 = 0.0;

20 
n‹mdag
 = 0.0;

21 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

22 
ù¨am
[
IPARAM_SIZEOF
];

23 
An
, 
i
, 
u
, 
ªt
 = 0;

26 
	`ù¨am_deÁu…_Á˘o
(
ù¨am
);

27 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 40, 200, 200);

28 
ù¨am
[
IPARAM_LDA
] = -'m';

29 
ù¨am
[
IPARAM_LDB
] = -'m';

31 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

32 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

34 
An
 = 
	`d∂asma_imax
(
M
, 
N
);

35 
LDA
 = 
	`max
–LDA, 
M
 );

38 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA0
, 1,

39 
two_dim_block_cy˛ic
, (&
dcA0
, 
m©rix_Com∂exDoubÀ
, 
m©rix_L≠ack
,

40 1, 
ønk
, 
MB
, 
NB
, 
LDA
, 
An
, 0, 0,

41 
M
, 
An
, 
KP
, 
KQ
, 1));

43 if–
ønk
 == 0 ) {

44 
w‹k
 = (*)
	`mÆloc
–
	`max
(
M
,
N
) * ());

51 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

52 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

53 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

54 
M
, 
N
, 
KP
, 
KQ
, 
P
));

57 if(
loud
 > 2Ë
	`¥ötf
("+++ Generate matrices ... ");

58 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
, 3872);

59 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 3872);

60 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

62 
i
=0; i<4; i++) {

63 i‡–
ønk
 == 0 ) {

64 
	`¥ötf
("***************************************************\n");

66 if(
loud
 > 2Ë
	`¥ötf
("+++ ComputögÇ‹m %†... ", 
n‹ms°r
[
i
]);

67 
n‹mdag
 = 
	`d∂asma_zœnge
(
∑r£c
, 
n‹ms
[
i
],

68 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
);

70 i‡–
ønk
 == 0 ) {

71 
n‹mœp
 = 
	`LAPACKE_zœnge_w‹k
(
LAPACK_COL_MAJOR
, 
n‹ms°r
[
i
][0], 
M
, 
N
,

72 (
d∂asma_com∂ex64_t
*)(
dcA0
.
m©
), dcA0.
su≥r
.
lm
, 
w‹k
);

74 if(
loud
 > 2Ë
	`¥ötf
("Done.\n");

76 i‡–
loud
 > 3 ) {

77 
	`¥ötf
( "%d: TheÇorm %s of A is %e\n",

78 
ønk
, 
n‹ms°r
[
i
], 
n‹mdag
);

81 i‡–
ønk
 == 0 ) {

82 
ªsu…
 = 
	`Ábs
(
n‹mdag
 - 
n‹mœp
Ë/ (n‹mœ∞* 
ïs
) ;

84 i‡–
loud
 > 3 ) {

85 
	`¥ötf
( "%d: TheÇorm %s of A is %e (LAPACK)\n",

86 
ønk
, 
n‹ms°r
[
i
], 
n‹mœp
);

89 
n‹ms
[
i
]) {

90 
d∂asmaMaxN‹m
:

93 
d∂asmaInfN‹m
:

95 
ªsu…
 =Ñesu… / ()
N
;

97 
d∂asmaO√N‹m
:

99 
ªsu…
 =Ñesu… / ()
M
;

101 
d∂asmaFrobíiusN‹m
:

103 
ªsu…
 =Ñesu… / (()
M
 * ()
N
);

107 i‡–
ªsu…
 < 1. ) {

108 
	`¥ötf
(" ----- TESTING ZLANGE (%sË... SUCCESS !\n", 
n‹ms°r
[
i
]);

110 
	`¥ötf
(" Ndag = %e, Nœ∞%e\n", 
n‹mdag
, 
n‹mœp
 );

111 
	`¥ötf
(" | Ndag - Nœ∞| / Nœ∞%e\n", 
ªsu…
);

112 
	`¥ötf
(" ----- TESTING ZLANGE (%sË... FAILED !\n", 
n‹ms°r
[
i
]);

113 
ªt
 |= 1;

118 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

119 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

126 
d
;

129 if(
loud
 > 2Ë
	`¥ötf
("+++ Generate matrices ... ");

130 
	`d∂asma_z∂∫t
–
∑r£c
, 0., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
, 3872);

131 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

134 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

135 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

136 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

137 
M
, 
N
, 
KP
, 
KQ
, 
P
));

139 
u
=0; u<2; u++) {

140 
	`d∂asma_z∂∫t
–
∑r£c
, 0., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 3872);

142 
d
=0; d<2; d++) {

143 
i
=0; i<4; i++) {

144 i‡–
ønk
 == 0 ) {

145 
	`¥ötf
("***************************************************\n");

147 if(
loud
 > 2Ë
	`¥ötf
("+++ ComputögÇ‹m %†... ", 
n‹ms°r
[
i
]);

148 
n‹mdag
 = 
	`d∂asma_zœ¡r
(
∑r£c
, 
n‹ms
[
i
], 
u∂o
[
u
], 
düg
[
d
],

149 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
);

151 i‡–
ønk
 == 0 ) {

152 
n‹mœp
 = 
	`LAPACKE_zœ¡r_w‹k
(
LAPACK_COL_MAJOR
, 
n‹ms°r
[
i
][0], 
u∂o°r
[
u
][0], 
düg°r
[
d
][0], 
M
, 
N
,

153 (
d∂asma_com∂ex64_t
*)(
dcA0
.
m©
), dcA0.
su≥r
.
lm
, 
w‹k
);

155 if(
loud
 > 2Ë
	`¥ötf
("Done.\n");

157 i‡–
loud
 > 3 ) {

158 
	`¥ötf
( "%d: TheÇorm %s of A is %e\n",

159 
ønk
, 
n‹ms°r
[
i
], 
n‹mdag
);

162 i‡–
ønk
 == 0 ) {

163 
ªsu…
 = 
	`Ábs
(
n‹mdag
 - 
n‹mœp
Ë/ (n‹mœ∞* 
ïs
);

165 i‡–
loud
 > 3 ) {

166 
	`¥ötf
( "%d: TheÇorm %s of A is %e (LAPACK)\n",

167 
ønk
, 
n‹ms°r
[
i
], 
n‹mœp
);

170 
n‹ms
[
i
]) {

171 
d∂asmaMaxN‹m
:

174 
d∂asmaInfN‹m
:

176 
ªsu…
 =Ñesu… / ()
N
;

178 
d∂asmaO√N‹m
:

180 
ªsu…
 =Ñesu… / ()
M
;

182 
d∂asmaFrobíiusN‹m
:

184 
ªsu…
 =Ñesu… / (()
M
 * ()
N
);

188 i‡–
ªsu…
 < 1. ) {

189 
	`¥ötf
(" ----- TESTING ZLANTR (%s, %s, %s) ... SUCCESS !\n",

190 
n‹ms°r
[
i
], 
u∂o°r
[
u
], 
düg°r
[
d
]);

192 
	`¥ötf
(" ----- TESTING ZLANTR (%s, %s, %s) ... FAILED !\n",

193 
n‹ms°r
[
i
], 
u∂o°r
[
u
], 
düg°r
[
d
]);

194 
	`¥ötf
(" | Ndag - Nœ∞| / Nœ∞%e\n", 
n‹mdag
);

195 
ªt
 |= 1;

201 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

202 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

206 
N
 = 
M
;

213 if(
loud
 > 2Ë
	`¥ötf
("+++ Generate matrices ... ");

214 
	`d∂asma_z∂gsy
–
∑r£c
, 0., 
d∂asmaUµîLowî
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
, 3872);

215 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

217 
u
=0; u<2; u++) {

220 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

221 
sym_two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
,

222 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

223 
M
, 
N
, 
P
, 
u∂o
[
u
]));

225 
	`d∂asma_z∂gsy
–
∑r£c
, 0., 
u∂o
[
u
], (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 3872);

227 
i
=0; i<4; i++) {

228 i‡–
ønk
 == 0 ) {

229 
	`¥ötf
("***************************************************\n");

231 if(
loud
 > 2Ë
	`¥ötf
("+++ ComputögÇ‹m %†... ", 
n‹ms°r
[
i
]);

232 
n‹mdag
 = 
	`d∂asma_zœnsy
(
∑r£c
, 
n‹ms
[
i
], 
u∂o
[
u
],

233 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
);

235 i‡–
ønk
 == 0 ) {

236 
n‹mœp
 = 
	`LAPACKE_zœnsy_w‹k
(
LAPACK_COL_MAJOR
, 
n‹ms°r
[
i
][0], 
u∂o°r
[
u
][0], 
M
,

237 (
d∂asma_com∂ex64_t
*)(
dcA0
.
m©
), dcA0.
su≥r
.
lm
, 
w‹k
);

239 if(
loud
 > 2Ë
	`¥ötf
("Done.\n");

241 i‡–
loud
 > 3 ) {

242 
	`¥ötf
( "%d: TheÇorm %s of A is %e\n",

243 
ønk
, 
n‹ms°r
[
i
], 
n‹mdag
);

246 i‡–
ønk
 == 0 ) {

247 
ªsu…
 = 
	`Ábs
(
n‹mdag
 - 
n‹mœp
Ë/ (n‹mœ∞* 
ïs
);

249 i‡–
loud
 > 3 ) {

250 
	`¥ötf
( "%d: TheÇorm %s of A is %e (LAPACK)\n",

251 
ønk
, 
n‹ms°r
[
i
], 
n‹mœp
);

254 
n‹ms
[
i
]) {

255 
d∂asmaMaxN‹m
:

258 
d∂asmaInfN‹m
:

260 
ªsu…
 =Ñesu… / ()
N
;

262 
d∂asmaO√N‹m
:

264 
ªsu…
 =Ñesu… / ()
M
;

266 
d∂asmaFrobíiusN‹m
:

268 
ªsu…
 =Ñesu… / (()
M
 * ()
N
);

272 i‡–
ªsu…
 < 1. ) {

273 
	`¥ötf
(" ----- TESTING ZLANSY (%s, %sË... SUCCESS !\n", 
u∂o°r
[
u
], 
n‹ms°r
[
i
]);

275 
	`¥ötf
(" ----- TESTING ZLANSY (%s, %sË... FAILED !\n", 
u∂o°r
[
u
], 
n‹ms°r
[
i
]);

276 
	`¥ötf
(" | Ndag - Nœ∞| / Nœ∞%e\n", 
n‹mdag
);

277 
ªt
 |= 1;

282 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

283 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

287 #i‡
	`deföed
(
PRECISION_z
Ë|| deföed(
PRECISION_c
)

293 if(
loud
 > 2Ë
	`¥ötf
("+++ Generate matrices ... ");

294 
	`d∂asma_z∂ghe
–
∑r£c
, 0., 
d∂asmaUµîLowî
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
, 3872);

295 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

297 
u
=0; u<2; u++) {

300 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

301 
sym_two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
,

302 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

303 
M
, 
N
, 
P
, 
u∂o
[
u
]));

305 
	`d∂asma_z∂ghe
–
∑r£c
, 0., 
u∂o
[
u
], (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 3872);

307 
i
=0; i<4; i++) {

308 i‡–
ønk
 == 0 ) {

309 
	`¥ötf
("***************************************************\n");

311 if(
loud
 > 2Ë
	`¥ötf
("+++ ComputögÇ‹m %†... ", 
n‹ms°r
[
i
]);

312 
n‹mdag
 = 
	`d∂asma_zœnhe
(
∑r£c
, 
n‹ms
[
i
], 
u∂o
[
u
],

313 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
);

315 i‡–
ønk
 == 0 ) {

316 
n‹mœp
 = 
	`LAPACKE_zœnhe_w‹k
(
LAPACK_COL_MAJOR
, 
n‹ms°r
[
i
][0], 
u∂o°r
[
u
][0], 
M
,

317 (
d∂asma_com∂ex64_t
*)(
dcA0
.
m©
), dcA0.
su≥r
.
lm
, 
w‹k
);

319 if(
loud
 > 2Ë
	`¥ötf
("Done.\n");

321 i‡–
loud
 > 3 ) {

322 
	`¥ötf
( "%d: TheÇorm %s of A is %e\n",

323 
ønk
, 
n‹ms°r
[
i
], 
n‹mdag
);

326 i‡–
ønk
 == 0 ) {

327 
ªsu…
 = 
	`Ábs
(
n‹mdag
 - 
n‹mœp
Ë/ (n‹mœ∞* 
ïs
);

329 i‡–
loud
 > 3 ) {

330 
	`¥ötf
( "%d: TheÇorm %s of A is %e (LAPACK)\n",

331 
ønk
, 
n‹ms°r
[
i
], 
n‹mœp
);

333 
n‹ms
[
i
]) {

334 
d∂asmaMaxN‹m
:

337 
d∂asmaInfN‹m
:

339 
ªsu…
 =Ñesu… / ()
N
;

341 
d∂asmaO√N‹m
:

343 
ªsu…
 =Ñesu… / ()
M
;

345 
d∂asmaFrobíiusN‹m
:

347 
ªsu…
 =Ñesu… / (()
M
 * ()
N
);

351 i‡–
ªsu…
 < 1. ) {

352 
	`¥ötf
(" ----- TESTING ZLANHE (%s, %sË... SUCCESS !\n", 
u∂o°r
[
u
], 
n‹ms°r
[
i
]);

354 
	`¥ötf
(" ----- TESTING ZLANHE (%s, %sË... FAILED !\n", 
u∂o°r
[
u
], 
n‹ms°r
[
i
]);

355 
	`¥ötf
(" | Ndag - Nœ∞| / Nœ∞%e\n", 
n‹mdag
);

356 
ªt
 |= 1;

361 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

362 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

367 i‡–
ønk
 == 0 ) {

368 
	`¥ötf
("***************************************************\n");

369 
	`‰ì
–
w‹k
 );

371 
	`∑r£c_d©a_‰ì
(
dcA0
.
m©
);

372 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA0
);

374 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

376  
ªt
;

377 
	}
}

	@testing_zlanm2.c

10 
	~"comm⁄.h
"

11 
	~"∑r£c/d©a_di°/m©rix/sym_two_dim_ª˘™gÀ_cy˛ic.h
"

12 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

14 
	$check_zœnm2
(
M
, 
N
, 
d∂asma_com∂ex64_t
 *
A
, 
LDA
, *
öfo
 )

16 *
DX
 = (*)
	`mÆloc
(
N
 * ());

17 
d∂asma_com∂ex64_t
 *
ZX
 = (d∂asma_com∂ex64_t*)
	`mÆloc
(
N
 * (dplasma_complex64_t));

18 
d∂asma_com∂ex64_t
 *
ZSX
 = (d∂asma_com∂ex64_t*)
	`mÆloc
(
M
 * (dplasma_complex64_t));

19 
d∂asma_com∂ex64_t
 
z⁄e
 = 1.;

20 
d∂asma_com∂ex64_t
 
zzîo
 = 0.;

21 
d∂asma_com∂ex64_t
 
Æpha
;

22 
n‹mx
, 
n‹msx
, 
e0
, 
e1
, 
tﬁ
;

23 
maxôî
, 
i
 = 0;

25 
	`mem£t
–
DX
, 0, 
N
 * () );

26 
	`CORE_dzasum
(
d∂asmaCﬁumnwi£
, 
d∂asmaUµîLowî
,

27 
M
, 
N
, 
A
, 
LDA
, 
DX
);

29 
n‹mx
 = 
	`cbœs_dƒm2
–
N
, 
DX
, 1 );

30 
n‹msx
 = 0.;

31 
tﬁ
 = 3.e-1;

32 
e0
 = 0.;

33 
e1
 = 
n‹mx
;

34 
maxôî
 = 
	`d∂asma_imö
(100, 
N
);

36 #i‡
	`deföed
(
PRECISION_z
Ë|| deföed(
PRECISION_c
)

37 
	`CORE_dœg2z
–1, 
N
, 
DX
, 1, 
ZX
, 1 );

39 
	`CORE_zœ˝y
–
d∂asmaUµîLowî
, 1, 
N
, 
DX
, 1, 
ZX
, 1 );

42  (
i
 < 
maxôî
) &&

43 (
	`Ábs
(
e1
 - 
e0
Ë> (
tﬁ
 *É1)))

45 #i‡
	`deföed
(
VERBOSE
)

46 
	`¥ötf
( "LAP[0] ZLANM2[%d]Çormx=%e /Çormsx=%e /É0=%e /É1=%e\n",

47 
i
, 
n‹mx
, 
n‹msx
, 
e0
, 
e1
 );

49 
Æpha
 = 1. / 
n‹mx
;

50 
	`cbœs_zsˇl
–
N
, 
	`CBLAS_SADDR
(
Æpha
), 
ZX
, 1 );

52 
	`cbœs_zgemv
–
CbœsCﬁMaj‹
, 
CbœsNoTøns
, 
M
, 
N
,

53 
	`CBLAS_SADDR
(
z⁄e
), 
A
, 
LDA
, 
ZX
, 1, CBLAS_SADDR(
zzîo
), 
ZSX
, 1 );

54 
	`cbœs_zgemv
–
CbœsCﬁMaj‹
, 
CbœsC⁄jTøns
, 
M
, 
N
,

55 
	`CBLAS_SADDR
(
z⁄e
), 
A
, 
LDA
, 
ZSX
, 1, CBLAS_SADDR(
zzîo
), 
ZX
, 1 );

57 
n‹mx
 = 
	`cbœs_dzƒm2
–
N
, 
ZX
, 1 );

58 
n‹msx
 = 
	`cbœs_dzƒm2
–
M
, 
ZSX
, 1 );

60 
e0
 = 
e1
;

61 
e1
 = 
n‹mx
 / 
n‹msx
;

62 
i
++;

65 #i‡
	`deföed
(
VERBOSE
)

66 
	`¥ötf
( "LAP[0] ZLANM2[%d]Çormx=%e /Çormsx=%e /É0=%e /É1=%e\n",

67 
i
, 
n‹mx
, 
n‹msx
, 
e0
, 
e1
 );

70 *
öfo
 = 
i
;

72 
	`‰ì
(
DX
);

73 
	`‰ì
(
ZX
);

74 
	`‰ì
(
ZSX
);

76  
e1
;

77 
	}
}

79 
	$maö
(
¨gc
, ** 
¨gv
)

81 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

82 
ªsu…
;

83 
n‹mœp
 = 0.0;

84 
n‹mdag
 = 0.0;

85 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

86 
ù¨am
[
IPARAM_SIZEOF
];

87 
An
, 
ªt
 = 0;

88 
öfﬁ≠
, 
öfodag
;

91 
	`ù¨am_deÁu…_Á˘o
(
ù¨am
);

92 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 40, 200, 200);

93 
ù¨am
[
IPARAM_LDA
] = -'m';

94 
ù¨am
[
IPARAM_LDB
] = -'m';

96 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

97 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

99 
An
 = 
	`d∂asma_imax
(
M
, 
N
);

100 
LDA
 = 
	`max
–LDA, 
M
 );

103 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA0
, 1,

104 
two_dim_block_cy˛ic
, (&
dcA0
, 
m©rix_Com∂exDoubÀ
, 
m©rix_L≠ack
,

105 1, 
ønk
, 
MB
, 
NB
, 
LDA
, 
An
, 0, 0,

106 
M
, 
An
, 
KP
, 
KQ
, 1));

112 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

113 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

114 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

115 
M
, 
N
, 
KP
, 
KQ
, 
P
));

118 if(
loud
 > 2Ë
	`¥ötf
("+++ Generate matrices ... ");

119 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
, 3872);

120 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 3872);

121 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

123 i‡–
ønk
 == 0 ) {

124 
	`¥ötf
("***************************************************\n");

126 if(
loud
 > 2Ë
	`¥ötf
("+++ Computing 2-norm ... \n");

127 
n‹mdag
 = 
	`d∂asma_zœnm2
(
∑r£c
,

128 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

129 &
öfodag
);

131 i‡–
ønk
 == 0 ) {

132 
n‹mœp
 = 
	`check_zœnm2
(
M
, 
N
, (
d∂asma_com∂ex64_t
*)(
dcA0
.
m©
), dcA0.
su≥r
.
lm
, &
öfﬁ≠
 );

134 if(
loud
 > 2Ë
	`¥ötf
("Done.\n");

136 i‡–
loud
 > 3 ) {

137 
	`¥ötf
( "%d: The 2-norm of A is %e [%d]\n",

138 
ønk
, 
n‹mdag
, 
öfodag
);

141 i‡–
ønk
 == 0 ) {

142 
ªsu…
 = 
	`Ábs
(
n‹mdag
 - 
n‹mœp
Ë/ (n‹mœ∞* 
ïs
 * 
	`d∂asma_imax
(
M
, 
N
));

144 i‡–
loud
 > 3 ) {

145 
	`¥ötf
( "%d: The 2-norm of A is %e [%d] (LAPACK)\n",

146 
ønk
, 
n‹mœp
, 
öfﬁ≠
);

149 i‡–
ªsu…
 < 1. && 
öfﬁ≠
 =
öfodag
 ) {

150 
	`¥ötf
(" ----- TESTING ZLANM2 ... SUCCESS !\n");

152 
	`¥ötf
(" Ndag = %e, Nœ∞%e\n", 
n‹mdag
, 
n‹mœp
 );

153 
	`¥ötf
(" | Ndag - Nœ∞| /Ép†%e\n", 
ªsu…
);

154 
	`¥ötf
(" #ôî©i⁄†Ü≠ack=%d, d∂asma=%d", 
öfﬁ≠
, 
öfodag
);

155 
	`¥ötf
(" ----- TESTING ZLANM2 ... FAILED !\n");

156 
ªt
 |= 1;

160 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

161 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

164 i‡–
ønk
 == 0 ) {

165 
	`¥ötf
("***************************************************\n");

167 
	`∑r£c_d©a_‰ì
(
dcA0
.
m©
);

168 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA0
);

170 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

172  
ªt
;

173 
	}
}

	@testing_zpivgen.c

10 
	~"comm⁄.h
"

11 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

13 
	$maö
(
¨gc
, ** 
¨gv
)

15 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

16 
d∂asma_qπªe_t
 
qπªe
;

17 
rc
, 
ªt
 = 0;

18 
ù¨am
[
IPARAM_SIZEOF
];

19 *
dŸ_fûíame
;

22 
	`ù¨am_deÁu…_Á˘o
(
ù¨am
);

23 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 1, 1, 1);

24 
ù¨am
[
IPARAM_LDA
] = -'m';

25 
ù¨am
[
IPARAM_LDB
] = -'m';

28 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

29 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

31 i‡(
check
) {

32 
∑r£c_tûed_m©rix_dc_t
 *
B
;

33 
Æ…ªñ
[] = { 0, 1, 2, 3, 4 };

34 
Æ…ªeh
[] = { 0, 1, 2, 3, 4 };

35 
ÆlP
[] = { 3, 5, 7, 8 };

36 
ÆlA
[] = { 1, 2, 4, 7 };

37 
ÆlM
[] = { 1, 3, 4, 10, 17, 25, 128 };

38 
ÆlN
[] = { 1, 2, 5, 13, 26, 58 };

39 
nbåìl
 = 4;

40 
nbåìh
 = 5;

41 
nbP
 = 4;

42 
nbA
 = 4;

43 
nbM
 = 7;

44 
nbN
 = 6;

45 
l
, 
h
, 
p
, 
a
, 
m
, 
n
, 
d
, 
r
;

46 
d⁄e
, 
todo
;

47 
todo
 = 0;

48 
d⁄e
 = 0;

51 
todo
 +
nbåìl
 * 
nbM
 * 
nbN
 * (2 * 
nbA
 - 1Ë* (1 + 2 * 
nbåìh
 * 
nbP
);

53 
todo
 +
nbM
 * 
nbN
 * 
nbA
 * 
nbP
;

55 
LDA
 = 
	`max
(
ÆlM
[ 
nbM
-1 ], LDA);

57 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

58 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

59 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
ÆlN
[ 
nbN
-1 ], 0, 0,

60 
ÆlM
[ 
nbM
-1 ], 
ÆlN
[ 
nbN
-1 ], 
KP
, 
KQ
, 
P
));

67  
l
=0;Ü<
nbåìl
;Ü++) {

69 
h
 = 0; 
d
 = 0; 
p
 = -1;

70  
a
=0;á<
nbA
;á++) {

71  
m
=0; m<
nbM
; m++) {

72  
n
=0;Ç<
nbN
;Ç++) {

73  
r
=0;Ñ<2;Ñ++) {

74 i‡(
r
==1 && 
a
==1)

77 
B
 = 
	`tûed_m©rix_subm©rix
((
∑r£c_tûed_m©rix_dc_t
*)&
dcA
, 0, 0, 
ÆlM
[
m
], 
ÆlN
[
n
] );

78 
	`d∂asma_hqr_öô
–&
qπªe
, 
d∂asmaNoTøns
, 
B
, 
Æ…ªñ
[
l
], 0, 
ÆlA
[
a
], -1, 0, 
r
 );

80 
rc
 = 
	`d∂asma_qπªe_check
–
B
, &
qπªe
 );

81 i‡(
rc
 != 0) {

82 
	`Ârötf
(
°dîr
, "-M %d -N %d --treel=%d --qr_a=%d --tsrr=%d FAILED(%d)\n",

83 
ÆlM
[
m
], 
ÆlN
[
n
], 
Æ…ªñ
[
l
], 
ÆlA
[
a
], 
r
, 
rc
);

84 
ªt
 |= 1;

86 
	`d∂asma_hqr_föÆize
–&
qπªe
 );

87 
	`‰ì
(
B
);

89 
d⁄e
++;

90 
	`¥ötf
("\r%6d / %6d", 
d⁄e
, 
todo
);

96  
d
=0; d<2; d++) {

97 i‡(
d
 =1 && 
Æ…ªñ
[
l
] =
DPLASMA_GREEDY1P_TREE
)

99  
h
=0; h<
nbåìh
; h++) {

100  
p
=0;Ö<
nbP
;Ö++) {

101  
a
=0;á<
nbA
;á++) {

102  
m
=0; m<
nbM
; m++) {

103  
n
=0;Ç<
nbN
;Ç++) {

104  
r
=0;Ñ<2;Ñ++) {

105 i‡(
r
==1 && 
a
==1)

108 
B
 = 
	`tûed_m©rix_subm©rix
((
∑r£c_tûed_m©rix_dc_t
*)&
dcA
, 0, 0, 
ÆlM
[
m
], 
ÆlN
[
n
] );

109 
	`d∂asma_hqr_öô
–&
qπªe
, 
d∂asmaNoTøns
, 
B
, 
Æ…ªñ
[
l
], 
Æ…ªeh
[
h
], 
ÆlA
[
a
], 
ÆlP
[
p
], 
d
, 
r
);

111 
rc
 = 
	`d∂asma_qπªe_check
–
B
, &
qπªe
 );

112 i‡(
rc
 != 0) {

113 
	`Ârötf
(
°dîr
, "-M %d -N %d --treel=%d --qr_a=%d --tsrr=%d --qr_p=%d --treeh=%d --domino=%d FAILED(%d)\n",

114 
ÆlM
[
m
], 
ÆlN
[
n
], 
Æ…ªñ
[
l
], 
ÆlA
[
a
], 
r
, 
ÆlP
[
p
], 
Æ…ªeh
[
h
], 
d
, 
rc
);

115 
ªt
 |= 1;

118 
	`d∂asma_hqr_föÆize
–&
qπªe
 );

119 
	`‰ì
(
B
);

121 
d⁄e
++;

122 
	`¥ötf
("\r%6d / %6d", 
d⁄e
, 
todo
);

138  
p
=0;Ö<
nbP
;Ö++) {

139  
a
=0;á<
nbA
;á++) {

140  
m
=0; m<
nbM
; m++) {

141  
n
=0;Ç<
nbN
;Ç++) {

142 
B
 = 
	`tûed_m©rix_subm©rix
((
∑r£c_tûed_m©rix_dc_t
*)&
dcA
, 0, 0, 
ÆlM
[
m
], 
ÆlN
[
n
] );

143 
	`d∂asma_sy°ﬁic_öô
–&
qπªe
, 
d∂asmaNoTøns
, 
B
, 
ÆlA
[
a
], 
ÆlP
[
p
]);

145 
rc
 = 
	`d∂asma_qπªe_check
–
B
, &
qπªe
 );

146 i‡(
rc
 != 0) {

147 
	`Ârötf
(
°dîr
, "systolic: -M %d -N %d --qr_a=%d --qr_p=%d FAILED(%d)\n",

148 
ÆlM
[
m
], 
ÆlN
[
n
], 
ÆlA
[
a
], 
ÆlP
[
p
], 
rc
);

149 
ªt
 |= 1;

152 
	`d∂asma_sy°ﬁic_föÆize
–&
qπªe
 );

153 
	`‰ì
(
B
);

155 
d⁄e
++;

156 
	`¥ötf
("\r%6d / %6d", 
d⁄e
, 
todo
);

162 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

163 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

167 
LDA
 = 
	`max
(
M
, LDA);

169 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

170 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

171 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

172 
M
, 
N
, 
KP
, 
KQ
, 
P
));

174 #i‡
	`deföed
(
SYSTOLIC
)

175 
	`d∂asma_sy°ﬁic_öô
–&
qπªe
,

176 
d∂asmaNoTøns
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

177 
ù¨am
[
IPARAM_QR_HLVL_SZE
],

178 
ù¨am
[
IPARAM_QR_TS_SZE
] );

180 
	`d∂asma_hqr_öô
–&
qπªe
,

181 
d∂asmaNoTøns
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcA
,

182 
ù¨am
[
IPARAM_LOWLVL_TREE
], i∑øm[
IPARAM_HIGHLVL_TREE
],

183 
ù¨am
[
IPARAM_QR_TS_SZE
], i∑øm[
IPARAM_QR_HLVL_SZE
],

184 
ù¨am
[
IPARAM_QR_DOMINO
], i∑øm[
IPARAM_QR_TSRR
] );

187 
	`a•rötf
(&
dŸ_fûíame
, "tree-%dx%d-a%d-p%d-l%d-h%d-d%d.dot",

188 
M
, 
N
,

189 
ù¨am
[
IPARAM_QR_TS_SZE
],

190 
ù¨am
[
IPARAM_QR_HLVL_SZE
],

191 
ù¨am
[
IPARAM_LOWLVL_TREE
],

192 
ù¨am
[
IPARAM_HIGHLVL_TREE
],

193 
ù¨am
[
IPARAM_QR_DOMINO
]);

196 
ªt
 = 
	`d∂asma_qπªe_check
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
, &
qπªe
 );

204 #i‡
	`deföed
(
SYSTOLIC
)

205 
	`d∂asma_sy°ﬁic_föÆize
–&
qπªe
 );

207 
	`d∂asma_hqr_föÆize
–&
qπªe
 );

210 
	`‰ì
(
dŸ_fûíame
);

212 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

213 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

216 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

218 i‡–
ªt
 == 0 )

219  
EXIT_SUCCESS
;

221 
	`Ârötf
(
°dîr
, "ªà%d\n", 
ªt
);

222  
EXIT_FAILURE
;

224 
	}
}

	@testing_zpoinv.c

10 
	~"comm⁄.h
"

11 
	~"Ê›s.h
"

12 
	~"∑r£c/d©a_di°/m©rix/sym_two_dim_ª˘™gÀ_cy˛ic.h
"

13 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

15 
	$maö
(
¨gc
, ** 
¨gv
)

17 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

18 
ù¨am
[
IPARAM_SIZEOF
];

19 
d∂asma_íum_t
 
u∂o
 = 
d∂asmaLowî
;

20 
öfo
 = 0;

21 
ªt
 = 0;

24 
	`ù¨am_deÁu…_Á˘o
(
ù¨am
);

25 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 0, 180, 180);

26 
ù¨am
[
IPARAM_NGPUS
] = 0;

29 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

30 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

31 
	`PASTE_CODE_FLOPS
(
FLOPS_ZPOTRF
, ((
DagDoubÀ_t
)
N
));

32 
Ê›s
 +
	`FLOPS_ZPOTRI
((
DagDoubÀ_t
)
N
);

35 
LDA
 = 
	`d∂asma_imax
–LDA, 
N
 );

36 
KP
 = 1;

37 
KQ
 = 1;

39 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

40 
sym_two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
,

41 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

42 
N
, N, 
P
, 
u∂o
));

45 if(
loud
 > 3Ë
	`¥ötf
("+++ Generate matrices ... ");

46 
	`d∂asma_z∂ghe
–
∑r£c
, ()(
N
), 
u∂o
,

47 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
øndom_£ed
);

48 if(
loud
 > 3Ë
	`¥ötf
("Done\n");

50 i‡(
async
) {

51 
	`PASTE_CODE_ENQUEUE_KERNEL
(
∑r£c
, 
zpoöv
,

52 (
u∂o
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcA
, &
öfo
));

53 
	`PASTE_CODE_PROGRESS_KERNEL
(
∑r£c
, 
zpoöv
);

54 
	`d∂asma_zpoöv_De°ru˘
–
PARSEC_zpoöv
 );

57 
	`SYNC_TIME_START
();

58 
öfo
 = 
	`d∂asma_zpoöv_sync
–
∑r£c
, 
u∂o
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcA
 );

59 
	`SYNC_TIME_PRINT
(
ønk
, ("zpoinv\tPxQ= %3d %-3d NB= %4d N= %7d : %14f gflops\n",

60 
P
, 
Q
, 
NB
, 
N
,

61 
gÊ›s
=(
Ê›s
/1e9)/
sync_time_ñ≠£d
));

64 if–0 =
ønk
 && 
öfo
 != 0 ) {

65 
	`¥ötf
("-- Fa˘‹iz©i⁄ i†su•iciou†(öfÿ%dË! \n", 
öfo
);

66 
ªt
 |= 1;

68 if–!
öfo
 && 
check
 ) {

70 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA0
, 
check
,

71 
two_dim_block_cy˛ic
, (&
dcA0
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
, 
nodes
, 
ønk
,

72 
MB
, 
NB
, 
LDA
, 
N
, 0, 0, N, N, 1, 1, 
P
));

73 
	`d∂asma_z∂ghe
–
∑r£c
, ()(
N
), 
d∂asmaUµîLowî
,

74 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
, 
øndom_£ed
);

76 
ªt
 |
	`check_zpoöv
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0, 
u∂o
,

77 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

78 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
 );

80 i‡(
ªt
) {

81 
	`¥ötf
("-- Innversion is suspicious ! \n");

85 
	`¥ötf
("-- Inversion is CORRECT ! \n");

89 
	`∑r£c_d©a_‰ì
(
dcA0
.
m©
); dcA0.m© = 
NULL
;

90 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA0
 );

93 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
); dcA.m© = 
NULL
;

94 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

96 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

97  
ªt
;

98 
	}
}

	@testing_zposv.c

10 
	~"comm⁄.h
"

11 
	~"Ê›s.h
"

12 
	~"∑r£c/d©a_di°/m©rix/sym_two_dim_ª˘™gÀ_cy˛ic.h
"

13 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

15 
	$maö
(
¨gc
, ** 
¨gv
)

17 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

18 
ù¨am
[
IPARAM_SIZEOF
];

19 
öfo
 = 0;

20 
u
, 
t1
, 
t2
;

21 
öfo_sﬁve
 = 0;

22 
öfo_Á˘o
 = 0;

23 
ªt
 = 0;

26 
	`ù¨am_deÁu…_Á˘o
(
ù¨am
);

27 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 0, 180, 180);

30 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

31 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

34 
LDA
 = 
	`max
–LDA, 
N
 );

35 
LDB
 = 
	`max
–LDB, 
N
 );

36 
KP
 = 1;

37 
KQ
 = 1;

39 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA0
, 1,

40 
two_dim_block_cy˛ic
, (&
dcA0
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

41 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

42 
N
, N, 
KP
, 
KQ
, 
P
));

44 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB
, 1,

45 
two_dim_block_cy˛ic
, (&
dcB
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

46 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

47 
N
, 
NRHS
, 
KP
, 
KQ
, 
P
));

49 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcX
, 1,

50 
two_dim_block_cy˛ic
, (&
dcX
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

51 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

52 
N
, 
NRHS
, 
KP
, 
KQ
, 
P
));

55 if(
loud
 > 2Ë
	`¥ötf
("+++ Generate matrices ... ");

56 
	`d∂asma_z∂ghe
–
∑r£c
, ()(
N
), 
d∂asmaUµîLowî
,

57 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
, 3872);

58 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

60  
u
=0; u<2; u++) {

61 i‡–
u∂o
[
u
] =
d∂asmaUµî
 ) {

62 
t1
 = 
d∂asmaC⁄jTøns
; 
t2
 = 
d∂asmaNoTøns
;

64 
t1
 = 
d∂asmaNoTøns
; 
t2
 = 
d∂asmaC⁄jTøns
;

67 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

68 
sym_two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
,

69 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

70 
N
, N, 
P
, 
u∂o
[
u
]));

75 i‡–
ønk
 == 0 ) {

76 
	`¥ötf
("***************************************************\n");

79 
	`d∂asma_zœ˝y
–
∑r£c
, 
u∂o
[
u
],

80 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
, (∑r£c_tûed_m©rix_dc_à*)&
dcA
 );

81 
	`d∂asma_z∂∫t
–
∑r£c
, 0,

82 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, 2354);

83 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

84 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, (∑r£c_tûed_m©rix_dc_à*)&
dcX
 );

87 i‡–
loud
 > 2 ) 
	`¥ötf
("Compute ... ... ");

88 
öfo
 = 
	`d∂asma_zposv
(
∑r£c
, 
u∂o
[
u
],

89 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

90 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
 );

91 i‡–
loud
 > 2 ) 
	`¥ötf
("Done\n");

92 i‡–
öfo
 !0 ) 
	`¥ötf
("%d: Infÿ%d\n", 
ønk
, info);

95 i‡–
öfo
 == 0 ) {

96 
öfo_Á˘o
 = 
	`check_zpŸrf
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0, 
u∂o
[
u
],

97 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

98 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
);

100 
öfo_sﬁve
 = 
	`check_zaxmb
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0, 
u∂o
[
u
],

101 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

102 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

103 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
);

105 i‡–
ønk
 == 0 ) {

106 i‡–
öfo_sﬁve
 || 
öfo_Á˘o
 || 
öfo
 ) {

107 
	`¥ötf
(" ----- TESTING ZPOSV (%sË... FAILED !\n", 
u∂o°r
[
u
]);

108 
ªt
 |= 1;

111 
	`¥ötf
(" ----- TESTING ZPOSV (%sË....... PASSED !\n", 
u∂o°r
[
u
]);

113 
	`¥ötf
("***************************************************\n");

119 i‡–
ønk
 == 0 ) {

120 
	`¥ötf
("***************************************************\n");

124 
	`d∂asma_zœ˝y
–
∑r£c
, 
u∂o
[
u
],

125 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
, (∑r£c_tûed_m©rix_dc_à*)&
dcA
 );

126 
	`d∂asma_z∂∫t
–
∑r£c
, 0,

127 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, 2354);

128 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

129 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, (∑r£c_tûed_m©rix_dc_à*)&
dcX
 );

132 i‡–
loud
 > 2 ) 
	`¥ötf
("Compute ... ... ");

133 
öfo
 = 
	`d∂asma_zpŸrf
(
∑r£c
, 
u∂o
[
u
],

134 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
 );

135 i‡–
öfo
 == 0 ) {

136 
	`d∂asma_zpŸrs
(
∑r£c
, 
u∂o
[
u
],

137 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

138 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
 );

140 i‡–
loud
 > 2 ) 
	`¥ötf
("Done\n");

141 i‡–
öfo
 !0 ) 
	`¥ötf
("%d: Infÿ%d\n", 
ønk
, info);

144 i‡–
öfo
 == 0 ) {

145 
öfo_Á˘o
 = 
	`check_zpŸrf
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0, 
u∂o
[
u
],

146 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

147 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
 );

149 
öfo_sﬁve
 = 
	`check_zaxmb
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0, 
u∂o
[
u
],

150 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

151 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

152 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
 );

154 i‡–
ønk
 == 0 ) {

155 i‡–
öfo_sﬁve
 || 
öfo_Á˘o
 || 
öfo
 ) {

156 
	`¥ötf
(" ----- TESTING ZPOTRF + ZPOTRS (%sË... FAILED !\n", 
u∂o°r
[
u
]);

157 
ªt
 |= 1;

160 
	`¥ötf
(" ----- TESTING ZPOTRF + ZPOTRS (%sË....... PASSED !\n", 
u∂o°r
[
u
]);

162 
	`¥ötf
("***************************************************\n");

168 i‡–
ønk
 == 0 ) {

169 
	`¥ötf
("***************************************************\n");

173 
	`d∂asma_zœ˝y
–
∑r£c
, 
u∂o
[
u
],

174 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
, (∑r£c_tûed_m©rix_dc_à*)&
dcA
 );

175 
	`d∂asma_z∂∫t
–
∑r£c
, 0,

176 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, 2354);

177 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

178 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, (∑r£c_tûed_m©rix_dc_à*)&
dcX
 );

181 i‡–
loud
 > 2 ) 
	`¥ötf
("Compute ... ... ");

182 
öfo
 = 
	`d∂asma_zpŸrf
(
∑r£c
, 
u∂o
[
u
], (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
 );

183 i‡–
öfo
 == 0 ) {

184 
	`d∂asma_zåsm
(
∑r£c
, 
d∂asmaLe·
, 
u∂o
[
u
], 
t1
, 
d∂asmaN⁄Unô
, 1.0,

185 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

186 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
);

187 
	`d∂asma_zåsm
(
∑r£c
, 
d∂asmaLe·
, 
u∂o
[
u
], 
t2
, 
d∂asmaN⁄Unô
, 1.0,

188 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

189 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
);

191 i‡–
loud
 > 2 ) 
	`¥ötf
("Done\n");

192 i‡–
öfo
 !0 ) 
	`¥ötf
("%d: Infÿ%d\n", 
ønk
, info);

195 i‡–
öfo
 == 0 ) {

196 
öfo_Á˘o
 = 
	`check_zpŸrf
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0, 
u∂o
[
u
],

197 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

198 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
 );

200 
öfo_sﬁve
 = 
	`check_zaxmb
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0, 
u∂o
[
u
],

201 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

202 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

203 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
 );

206 i‡–
ønk
 == 0 ) {

207 i‡–
öfo_sﬁve
 || 
öfo_Á˘o
 || 
öfo
 ) {

208 
	`¥ötf
(" ----- TESTING ZPOTRF + ZTRSM + ZTRSM (%sË... FAILED !\n", 
u∂o°r
[
u
]);

209 
ªt
 |= 1;

212 
	`¥ötf
(" ----- TESTING ZPOTRF + ZTRSM + ZTRSM (%sË....... PASSED !\n", 
u∂o°r
[
u
]);

214 
	`¥ötf
("***************************************************\n");

220 i‡–
ønk
 == 0 ) {

221 
	`¥ötf
("***************************************************\n");

225 
	`d∂asma_zœ˝y
–
∑r£c
, 
u∂o
[
u
],

226 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
, (∑r£c_tûed_m©rix_dc_à*)&
dcA
 );

229 i‡–
loud
 > 2 ) 
	`¥ötf
("Compute ... ... ");

230 
öfo
 = 
	`d∂asma_zpŸrf
(
∑r£c
, 
u∂o
[
u
], (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
 );

232 i‡–
öfo
 == 0 ) {

233 
öfo
 = 
	`d∂asma_zpŸri
(
∑r£c
, 
u∂o
[
u
], (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
 );

235 i‡–
loud
 > 2 ) 
	`¥ötf
("Done\n");

236 i‡–
öfo
 !0 ) 
	`¥ötf
("%d: Infÿ%d\n", 
ønk
, info);

239 i‡–
öfo
 == 0 ) {

240 
öfo_sﬁve
 = 
	`check_zpoöv
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0, 
u∂o
[
u
],

241 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

242 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
);

245 i‡–
ønk
 == 0 ) {

246 i‡–
öfo_sﬁve
 || 
öfo
 ) {

247 
	`¥ötf
(" ----- TESTING ZPOTRF + ZPOTRI (%sË... FAILED !\n", 
u∂o°r
[
u
]);

248 
ªt
 |= 1;

251 
	`¥ötf
(" ----- TESTING ZPOTRF + ZPOTRI (%sË....... PASSED !\n", 
u∂o°r
[
u
]);

253 
	`¥ötf
("***************************************************\n");

256 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

257 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

260 
	`∑r£c_d©a_‰ì
(
dcA0
.
m©
);

261 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA0
);

262 
	`∑r£c_d©a_‰ì
(
dcB
.
m©
);

263 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcB
);

264 
	`∑r£c_d©a_‰ì
(
dcX
.
m©
);

265 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcX
);

267 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

269  
ªt
;

270 
	}
}

	@testing_zpotrf.c

10 
	~"comm⁄.h
"

11 
	~"Ê›s.h
"

12 
	~"∑r£c/d©a_di°/m©rix/sym_two_dim_ª˘™gÀ_cy˛ic.h
"

13 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

15 
	$maö
(
¨gc
, ** 
¨gv
)

17 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

18 
ù¨am
[
IPARAM_SIZEOF
];

19 
d∂asma_íum_t
 
u∂o
 = 
d∂asmaUµî
;

20 
öfo
 = 0;

21 
ªt
 = 0;

24 
	`ù¨am_deÁu…_Á˘o
(
ù¨am
);

25 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 0, 180, 180);

28 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

29 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

30 
	`PASTE_CODE_FLOPS
(
FLOPS_ZPOTRF
, ((
DagDoubÀ_t
)
N
));

33 
LDA
 = 
	`d∂asma_imax
–LDA, 
N
 );

34 
LDB
 = 
	`d∂asma_imax
–LDB, 
N
 );

35 
KP
 = 1;

36 
KQ
 = 1;

38 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

39 
sym_two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
,

40 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

41 
N
, N, 
P
, 
u∂o
));

43 
t
;

44 
t
 = 0;Å < 
ƒuns
;Å++) {

46 if(
loud
 > 3Ë
	`¥ötf
("+++ Generate matrices ... ");

47 
	`d∂asma_z∂ghe
–
∑r£c
, ()(
N
), 
u∂o
,

48 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
øndom_£ed
);

49 if(
loud
 > 3Ë
	`¥ötf
("Done\n");

51 
	`∑r£c_devi˚s_ªÀa£_mem‹y
();

53 if((
ù¨am
[
IPARAM_HNB
] !ù¨am[
IPARAM_NB
]Ë|| (ù¨am[
IPARAM_HMB
] !ù¨am[
IPARAM_MB
]))

56 
	`SYNC_TIME_START
();

57 
∑r£c_èskpoﬁ_t
* 
PARSEC_zpŸrf
 = 
	`d∂asma_zpŸrf_New
–
u∂o
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcA
, &
öfo
 );

59 
	`d∂asma_zpŸrf_£åecursive
–
PARSEC_zpŸrf
, 
ù¨am
[
IPARAM_HMB
] );

60 
	`∑r£c_c⁄ãxt_add_èskpoﬁ
(
∑r£c
, 
PARSEC_zpŸrf
);

61 if–
loud
 > 2 ) 
	`SYNC_TIME_PRINT
(
ønk
, ( "zpotrf\tDAG created\n"));

63 
	`PASTE_CODE_PROGRESS_KERNEL
(
∑r£c
, 
zpŸrf
);

64 
	`d∂asma_zpŸrf_De°ru˘
–
PARSEC_zpŸrf
 );

66 
	`∑r£c_èskpoﬁ_sync_ids
();

71 
	`PASTE_CODE_ENQUEUE_PROGRESS_DESTRUCT_KERNEL
(
∑r£c
, 
zpŸrf
,

72 –
u∂o
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcA
, &
öfo
),

73 
	`d∂asma_zpŸrf_De°ru˘
–
PARSEC_zpŸrf
 ));

75 
	`∑r£c_devi˚s_ª£t_lﬂd
(
∑r£c
);

79 if–0 =
ønk
 && 
öfo
 != 0 ) {

80 
	`¥ötf
("-- Fa˘‹iz©i⁄ i†su•iciou†(öfÿ%dË! \n", 
öfo
);

81 
ªt
 |= 1;

83 if–!
öfo
 && 
check
 ) {

85 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA0
, 
check
,

86 
sym_two_dim_block_cy˛ic
, (&
dcA0
, 
m©rix_Com∂exDoubÀ
,

87 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

88 
N
, N, 
P
, 
u∂o
));

89 
	`d∂asma_z∂ghe
–
∑r£c
, ()(
N
), 
u∂o
,

90 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
, 
øndom_£ed
);

92 
ªt
 |
	`check_zpŸrf
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0, 
u∂o
,

93 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

94 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
);

97 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB
, 
check
,

98 
two_dim_block_cy˛ic
, (&
dcB
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

99 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

100 
N
, 
NRHS
, 
KP
, 
KQ
, 
P
));

101 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, 
øndom_£ed
+1);

103 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcX
, 
check
,

104 
two_dim_block_cy˛ic
, (&
dcX
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

105 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

106 
N
, 
NRHS
, 
KP
, 
KQ
, 
P
));

107 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

108 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, (∑r£c_tûed_m©rix_dc_à*)&
dcX
 );

110 
	`d∂asma_zpŸrs
(
∑r£c
, 
u∂o
,

111 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

112 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
 );

114 
ªt
 |
	`check_zaxmb
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0, 
u∂o
,

115 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

116 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

117 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
);

120 
	`∑r£c_d©a_‰ì
(
dcA0
.
m©
); dcA0.m© = 
NULL
;

121 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA0
 );

122 
	`∑r£c_d©a_‰ì
(
dcB
.
m©
); dcB.m© = 
NULL
;

123 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcB
 );

124 
	`∑r£c_d©a_‰ì
(
dcX
.
m©
); dcX.m© = 
NULL
;

125 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcX
 );

128 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
); dcA.m© = 
NULL
;

129 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

131 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

132  
ªt
;

133 
	}
}

	@testing_zpotrf_dtd.c

10 
	~"comm⁄.h
"

11 
	~"Ê›s.h
"

12 
	~"d∂asma/ty≥s.h
"

13 
	~"∑r£c/d©a_di°/m©rix/sym_two_dim_ª˘™gÀ_cy˛ic.h
"

14 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

15 
	~"∑r£c/öãrÁ˚s/su≥rsˇœr/ö£π_fun˘i⁄.h
"

17 
	eªgi⁄s
 {

18 
	mTILE_FULL
,

22 
	$∑r£c_c‹e_pŸrf
(
∑r£c_executi⁄_°ªam_t
 *
es
, 
∑r£c_èsk_t
 *
this_èsk
)

24 ()
es
;

25 
u∂o
;

26 
m
, 
lda
, *
öfo
;

27 
d∂asma_com∂ex64_t
 *
A
;

29 
	`∑r£c_dtd_u≈ack_¨gs
(
this_èsk
, &
u∂o
, &
m
, &
A
, &
lda
, &
öfo
);

31 
	`CORE_zpŸrf
(
u∂o
, 
m
, 
A
, 
lda
, 
öfo
);

33  
PARSEC_HOOK_RETURN_DONE
;

34 
	}
}

37 
	$∑r£c_c‹e_åsm
(
∑r£c_executi⁄_°ªam_t
 *
es
, 
∑r£c_èsk_t
 *
this_èsk
)

39 ()
es
;

40 
side
, 
u∂o
, 
å™s
, 
düg
;

41 
m
, 
n
, 
lda
, 
ldc
;

42 
d∂asma_com∂ex64_t
 
Æpha
;

43 
d∂asma_com∂ex64_t
 *
A
, *
C
;

45 
	`∑r£c_dtd_u≈ack_¨gs
(
this_èsk
, &
side
, &
u∂o
, &
å™s
, &
düg
, &
m
, &
n
,

46 &
Æpha
, &
A
, &
lda
, &
C
, &
ldc
);

48 
	`CORE_zåsm
(
side
, 
u∂o
, 
å™s
, 
düg
,

49 
m
, 
n
, 
Æpha
,

50 
A
, 
lda
,

51 
C
, 
ldc
);

53  
PARSEC_HOOK_RETURN_DONE
;

54 
	}
}

57 
	$∑r£c_c‹e_hîk
(
∑r£c_executi⁄_°ªam_t
 *
es
, 
∑r£c_èsk_t
 *
this_èsk
)

59 ()
es
;

60 
u∂o
, 
å™s
;

61 
m
, 
n
, 
lda
, 
ldc
;

62 
d∂asma_com∂ex64_t
 
Æpha
;

63 
d∂asma_com∂ex64_t
 
bëa
;

64 
d∂asma_com∂ex64_t
 *
A
;

65 
d∂asma_com∂ex64_t
 *
C
;

67 
	`∑r£c_dtd_u≈ack_¨gs
(
this_èsk
, &
u∂o
, &
å™s
, &
m
, &
n
, &
Æpha
, &
A
,

68 &
lda
, &
bëa
, &
C
, &
ldc
);

70 
	`CORE_zhîk
(
u∂o
, 
å™s
, 
m
, 
n
,

71 
Æpha
, 
A
, 
lda
,

72 
bëa
, 
C
, 
ldc
);

74  
PARSEC_HOOK_RETURN_DONE
;

75 
	}
}

78 
	$∑r£c_c‹e_gemm
(
∑r£c_executi⁄_°ªam_t
 *
es
, 
∑r£c_èsk_t
 *
this_èsk
)

80 ()
es
;

81 
å™sA
, 
å™sB
;

82 
m
, 
n
, 
k
, 
lda
, 
ldb
, 
ldc
;

83 
d∂asma_com∂ex64_t
 
Æpha
, 
bëa
;

84 
d∂asma_com∂ex64_t
 *
A
;

85 
d∂asma_com∂ex64_t
 *
B
;

86 
d∂asma_com∂ex64_t
 *
C
;

88 
	`∑r£c_dtd_u≈ack_¨gs
(
this_èsk
, &
å™sA
, &
å™sB
, &
m
, &
n
, &
k
, &
Æpha
,

89 &
A
, &
lda
, &
B
, &
ldb
, &
bëa
, &
C
, &
ldc
);

91 
	`CORE_zgemm
(
å™sA
, 
å™sB
,

92 
m
, 
n
, 
k
,

93 
Æpha
, 
A
, 
lda
,

94 
B
, 
ldb
,

95 
bëa
, 
C
, 
ldc
);

97  
PARSEC_HOOK_RETURN_DONE
;

98 
	}
}

100 
	$maö
(
¨gc
, **
¨gv
)

102 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

103 
ù¨am
[
IPARAM_SIZEOF
];

104 
u∂o
 = 
d∂asmaUµî
;

105 
öfo
 = 0;

106 
ªt
 = 0;

108 
m
, 
n
, 
k
, 
tŸÆ
;

110 
ãmpkm
, 
ãmpmm
, 
ldak
, 
ldam
, 
side
, 
å™sA_p
, 
å™sA_g
, 
düg
, 
å™s
, 
å™sB
, 
ld™
;

111 
d∂asma_com∂ex64_t
 
Æpha_åsm
, 
Æpha_hîk
, 
bëa
;

114 
	`ù¨am_deÁu…_Á˘o
(
ù¨am
);

115 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 0, 180, 180);

116 
ù¨am
[
IPARAM_NGPUS
] = 
DPLASMA_ERR_NOT_SUPPORTED
;

119 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

120 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

121 
	`PASTE_CODE_FLOPS
(
FLOPS_ZPOTRF
, ((
DagDoubÀ_t
)
N
));

124 
LDA
 = 
	`d∂asma_imax
–LDA, 
N
 );

125 
LDB
 = 
	`d∂asma_imax
–LDB, 
N
 );

126 
KP
 = 1;

127 
KQ
 = 1;

129 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

130 
sym_two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
,

131 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

132 
N
, N, 
P
, 
u∂o
));

135 
sym_two_dim_block_cy˛ic_t
 *
__dcA
 = &
dcA
;

136 
	`∑r£c_dtd_d©a_cﬁÀ˘i⁄_öô
((
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcA
);

139 if(
loud
 > 3Ë
	`¥ötf
("+++ Generate matrices ... ");

140 
	`d∂asma_z∂ghe
–
∑r£c
, ()(
N
), 
u∂o
,

141 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
øndom_£ed
);

142 if(
loud
 > 3Ë
	`¥ötf
("Done\n");

145 
∑r£c_èskpoﬁ_t
 *
dtd_ç
 = 
	`∑r£c_dtd_èskpoﬁ_√w
();

148 
	`d∂asma_add2¨ía_tûe
–&
∑r£c_dtd_¨ías_d©©y≥s
[
TILE_FULL
],

149 
dcA
.
su≥r
.
mb
*dcA.su≥r.
nb
*(
d∂asma_com∂ex64_t
),

150 
PARSEC_ARENA_ALIGNMENT_SSE
,

151 
∑r£c_d©©y≥_doubÀ_com∂ex_t
, 
dcA
.
su≥r
.
mb
 );

154 
	`∑r£c_c⁄ãxt_add_èskpoﬁ
–
∑r£c
, 
dtd_ç
 );

156 
	`SYNC_TIME_START
();

161 
	`∑r£c_c⁄ãxt_°¨t
–
∑r£c
 );

163 if–
d∂asmaLowî
 =
u∂o
 ) {

165 
side
 = 
d∂asmaRight
;

166 
å™sA_p
 = 
d∂asmaC⁄jTøns
;

167 
düg
 = 
d∂asmaN⁄Unô
;

168 
Æpha_åsm
 = 1.0;

169 
å™s
 = 
d∂asmaNoTøns
;

170 
Æpha_hîk
 = -1.0;

171 
bëa
 = 1.0;

172 
å™sB
 = 
d∂asmaC⁄jTøns
;

173 
å™sA_g
 = 
d∂asmaNoTøns
;

175 
tŸÆ
 = 
dcA
.
su≥r
.
mt
;

177  
k
 = 0; k < 
tŸÆ
; k++ ) {

178 
ãmpkm
 = (
k
 =(
dcA
.
su≥r
.
mt
 - 1)Ë? dcA.su≥r.
m
 - k * dcA.su≥r.
mb
 : dcA.super.mb;

179 
ldak
 = 
	`BLKLDD
(&
dcA
.
su≥r
, 
k
);

181 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
–
dtd_ç
, 
∑r£c_c‹e_pŸrf
,

182 (
tŸÆ
 - 
k
) * (total-k) * (total - k) , "Potrf",

183 (), &
u∂o
, 
VALUE
,

184 (), &
ãmpkm
, 
VALUE
,

185 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, k), 
INOUT
 | 
TILE_FULL
 | 
AFFINITY
,

186 (), &
ldak
, 
VALUE
,

187 (*), &
öfo
, 
SCRATCH
,

188 
PARSEC_DTD_ARG_END
 );

190  
m
 = 
k
+1; m < 
tŸÆ
; m++ ) {

191 
ãmpmm
 = 
m
 =
dcA
.
su≥r
.
mt
 - 1 ? dcA.su≥r.m - m * dcA.su≥r.
mb
 : dcA.super.mb;

192 
ldam
 = 
	`BLKLDD
(&
dcA
.
su≥r
, 
m
);

193 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
–
dtd_ç
, 
∑r£c_c‹e_åsm
,

194 (
tŸÆ
 - 
m
Ë* (tŸÆ-mË* (tŸÆ - mË+ 3 * ((2 *ÅŸÆË- 
k
 - m - 1) * (m - k) , "Trsm",

195 (), &
side
, 
VALUE
,

196 (), &
u∂o
, 
VALUE
,

197 (), &
å™sA_p
, 
VALUE
,

198 (), &
düg
, 
VALUE
,

199 (), &
ãmpmm
, 
VALUE
,

200 (), &
dcA
.
su≥r
.
nb
, 
VALUE
,

201 (
d∂asma_com∂ex64_t
), &
Æpha_åsm
, 
VALUE
,

202 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, k), 
INPUT
 | 
TILE_FULL
,

203 (), &
ldak
, 
VALUE
,

204 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
m
, 
k
), 
INOUT
 | 
TILE_FULL
 | 
AFFINITY
,

205 (), &
ldam
, 
VALUE
,

206 
PARSEC_DTD_ARG_END
 );

208 
	`∑r£c_dtd_d©a_Êush
–
dtd_ç
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, k) );

210  
m
 = 
k
+1; m < 
dcA
.
su≥r
.
¡
; m++ ) {

211 
ãmpmm
 = 
m
 =
dcA
.
su≥r
.
mt
 - 1 ? dcA.su≥r.m - m * dcA.su≥r.
mb
 : dcA.super.mb;

212 
ldam
 = 
	`BLKLDD
(&
dcA
.
su≥r
, 
m
);

213 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
–
dtd_ç
, 
∑r£c_c‹e_hîk
,

214 (
tŸÆ
 - 
m
Ë* (tŸÆ - mË* (tŸÆ - mË+ 3 * (m - 
k
) , "Herk",

215 (), &
u∂o
, 
VALUE
,

216 (), &
å™s
, 
VALUE
,

217 (), &
ãmpmm
, 
VALUE
,

218 (), &
dcA
.
su≥r
.
mb
, 
VALUE
,

219 (
d∂asma_com∂ex64_t
), &
Æpha_hîk
, 
VALUE
,

220 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
m
, 
k
), 
INPUT
 | 
TILE_FULL
,

221 (), &
ldam
, 
VALUE
,

222 (
d∂asma_com∂ex64_t
), &
bëa
, 
VALUE
,

223 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
m
, m), 
INOUT
 | 
TILE_FULL
 | 
AFFINITY
,

224 (), &
ldam
, 
VALUE
,

225 
PARSEC_DTD_ARG_END
 );

227  
n
 = 
m
+1;Ç < 
tŸÆ
;Ç++ ) {

228 
ld™
 = 
	`BLKLDD
(&
dcA
.
su≥r
, 
n
);

229 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
–
dtd_ç
, 
∑r£c_c‹e_gemm
,

230 (
tŸÆ
 - 
m
Ë* (tŸÆ - mË* (tŸÆ - mË+ 3 * ((2 *ÅŸÆË- m - 
n
 - 3Ë* (m -ÇË+ 6 * (m - 
k
) , "Gemm",

231 (), &
å™sA_g
, 
VALUE
,

232 (), &
å™sB
, 
VALUE
,

233 (), &
ãmpmm
, 
VALUE
,

234 (), &
dcA
.
su≥r
.
mb
, 
VALUE
,

235 (), &
dcA
.
su≥r
.
mb
, 
VALUE
,

236 (
d∂asma_com∂ex64_t
), &
Æpha_hîk
, 
VALUE
,

237 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
n
, 
k
), 
INPUT
 | 
TILE_FULL
,

238 (), &
ld™
, 
VALUE
,

239 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
m
, 
k
), 
INPUT
 | 
TILE_FULL
,

240 (), &
ldam
, 
VALUE
,

241 (
d∂asma_com∂ex64_t
), &
bëa
, 
VALUE
,

242 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
n
, 
m
), 
INOUT
 | 
TILE_FULL
 | 
AFFINITY
,

243 (), &
ld™
, 
VALUE
,

244 
PARSEC_DTD_ARG_END
 );

246 
	`∑r£c_dtd_d©a_Êush
–
dtd_ç
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
m
, 
k
) );

250 
side
 = 
d∂asmaLe·
;

251 
å™sA_p
 = 
d∂asmaC⁄jTøns
;

252 
düg
 = 
d∂asmaN⁄Unô
;

253 
Æpha_åsm
 = 1.0;

254 
å™s
 = 
d∂asmaC⁄jTøns
;

255 
Æpha_hîk
 = -1.0;

256 
bëa
 = 1.0;

257 
å™sB
 = 
d∂asmaNoTøns
;

258 
å™sA_g
 = 
d∂asmaC⁄jTøns
;

260 
tŸÆ
 = 
dcA
.
su≥r
.
¡
;

262  
k
 = 0; k < 
tŸÆ
; k++ ) {

263 
ãmpkm
 = 
k
 =
dcA
.
su≥r
.
¡
-1 ? dcA.su≥r.
n
-k*dcA.su≥r.
nb
 : dcA.super.nb;

264 
ldak
 = 
	`BLKLDD
(&
dcA
.
su≥r
, 
k
);

265 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
–
dtd_ç
, 
∑r£c_c‹e_pŸrf
,

266 (
tŸÆ
 - 
k
) * (total-k) * (total - k) , "Potrf",

267 (), &
u∂o
, 
VALUE
,

268 (), &
ãmpkm
, 
VALUE
,

269 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, k), 
INOUT
 | 
TILE_FULL
 | 
AFFINITY
,

270 (), &
ldak
, 
VALUE
,

271 (*), &
öfo
, 
SCRATCH
,

272 
PARSEC_DTD_ARG_END
 );

274  
m
 = 
k
+1; m < 
tŸÆ
; m++ ) {

275 
ãmpmm
 = 
m
 =
dcA
.
su≥r
.
¡
-1 ? dcA.su≥r.
n
-m*dcA.su≥r.
nb
 : dcA.super.nb;

276 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
–
dtd_ç
, 
∑r£c_c‹e_åsm
,

277 (
tŸÆ
 - 
m
Ë* (tŸÆ-mË* (tŸÆ - mË+ 3 * ((2 *ÅŸÆË- 
k
 - m - 1) * (m - k) , "Trsm",

278 (), &
side
, 
VALUE
,

279 (), &
u∂o
, 
VALUE
,

280 (), &
å™sA_p
, 
VALUE
,

281 (), &
düg
, 
VALUE
,

282 (), &
dcA
.
su≥r
.
nb
, 
VALUE
,

283 (), &
ãmpmm
, 
VALUE
,

284 (
d∂asma_com∂ex64_t
), &
Æpha_åsm
, 
VALUE
,

285 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, k), 
INPUT
 | 
TILE_FULL
,

286 (), &
ldak
, 
VALUE
,

287 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, 
m
), 
INOUT
 | 
TILE_FULL
 | 
AFFINITY
,

288 (), &
ldak
, 
VALUE
,

289 
PARSEC_DTD_ARG_END
 );

291 
	`∑r£c_dtd_d©a_Êush
–
dtd_ç
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, k) );

293  
m
 = 
k
+1; m < 
dcA
.
su≥r
.
mt
; m++ ) {

294 
ãmpmm
 = 
m
 =
dcA
.
su≥r
.
¡
-1 ? dcA.su≥r.
n
-m*dcA.su≥r.
nb
 : dcA.super.nb;

295 
ldam
 = 
	`BLKLDD
(&
dcA
.
su≥r
, 
m
);

296 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
–
dtd_ç
, 
∑r£c_c‹e_hîk
,

297 (
tŸÆ
 - 
m
Ë* (tŸÆ - mË* (tŸÆ - mË+ 3 * (m - 
k
) , "Herk",

298 (), &
u∂o
, 
VALUE
,

299 (), &
å™s
, 
VALUE
,

300 (), &
ãmpmm
, 
VALUE
,

301 (), &
dcA
.
su≥r
.
mb
, 
VALUE
,

302 (
d∂asma_com∂ex64_t
), &
Æpha_hîk
, 
VALUE
,

303 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, 
m
), 
INPUT
 | 
TILE_FULL
,

304 (), &
ldak
, 
VALUE
,

305 (
d∂asma_com∂ex64_t
), &
bëa
, 
VALUE
,

306 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
m
, m), 
INOUT
 | 
TILE_FULL
 | 
AFFINITY
,

307 (), &
ldam
, 
VALUE
,

308 
PARSEC_DTD_ARG_END
 );

310  
n
 = 
m
+1;Ç < 
tŸÆ
;Ç++ ) {

311 
ld™
 = 
	`BLKLDD
(&
dcA
.
su≥r
, 
n
);

312 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
–
dtd_ç
, 
∑r£c_c‹e_gemm
,

313 (
tŸÆ
 - 
m
Ë* (tŸÆ - mË* (tŸÆ - mË+ 3 * ((2 *ÅŸÆË- m - 
n
 - 3Ë* (m -ÇË+ 6 * (m - 
k
) , "Gemm",

314 (), &
å™sA_g
, 
VALUE
,

315 (), &
å™sB
, 
VALUE
,

316 (), &
dcA
.
su≥r
.
mb
, 
VALUE
,

317 (), &
ãmpmm
, 
VALUE
,

318 (), &
dcA
.
su≥r
.
mb
, 
VALUE
,

319 (
d∂asma_com∂ex64_t
), &
Æpha_hîk
, 
VALUE
,

320 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, 
m
), 
INPUT
 | 
TILE_FULL
,

321 (), &
ldak
, 
VALUE
,

322 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, 
n
), 
INPUT
 | 
TILE_FULL
,

323 (), &
ldak
, 
VALUE
,

324 (
d∂asma_com∂ex64_t
), &
bëa
, 
VALUE
,

325 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
m
, 
n
), 
INOUT
 | 
TILE_FULL
 | 
AFFINITY
,

326 (), &
ld™
, 
VALUE
,

327 
PARSEC_DTD_ARG_END
 );

329 
	`∑r£c_dtd_d©a_Êush
–
dtd_ç
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, 
m
) );

334 
	`∑r£c_dtd_d©a_Êush_Æl
–
dtd_ç
, (
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcA
 );

337 
	`∑r£c_dtd_èskpoﬁ_waô
–
dtd_ç
 );

340 
	`∑r£c_c⁄ãxt_waô
–
∑r£c
 );

344 
	`SYNC_TIME_PRINT
(
ønk
, ("\tPxQ= %3d %-3d NB= %4d N= %7d : %14f gflops\n",

345 
P
, 
Q
, 
NB
, 
N
,

346 
gÊ›s
=(
Ê›s
/1e9)/
sync_time_ñ≠£d
));

349 
	`∑r£c_èskpoﬁ_‰ì
–
dtd_ç
 );

351 if–0 =
ønk
 && 
öfo
 != 0 ) {

352 
	`¥ötf
("-- Fa˘‹iz©i⁄ i†su•iciou†(öfÿ%dË! \n", 
öfo
);

353 
ªt
 |= 1;

355 if–!
öfo
 && 
check
 ) {

357 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA0
, 
check
,

358 
sym_two_dim_block_cy˛ic
, (&
dcA0
, 
m©rix_Com∂exDoubÀ
,

359 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

360 
N
, N, 
P
, 
u∂o
));

361 
	`d∂asma_z∂ghe
–
∑r£c
, ()(
N
), 
u∂o
,

362 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
, 
øndom_£ed
);

364 
ªt
 |
	`check_zpŸrf
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0, 
u∂o
,

365 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

366 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
);

369 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB
, 
check
,

370 
two_dim_block_cy˛ic
, (&
dcB
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

371 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

372 
N
, 
NRHS
, 
KP
, 
KQ
, 
P
));

373 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, 
øndom_£ed
+1);

375 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcX
, 
check
,

376 
two_dim_block_cy˛ic
, (&
dcX
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

377 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

378 
N
, 
NRHS
, 
KP
, 
KQ
, 
P
));

379 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

380 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, (∑r£c_tûed_m©rix_dc_à*)&
dcX
 );

382 
	`d∂asma_zpŸrs
(
∑r£c
, 
u∂o
,

383 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

384 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
 );

386 
ªt
 |
	`check_zaxmb
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0, 
u∂o
,

387 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

388 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

389 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
);

392 
	`∑r£c_d©a_‰ì
(
dcA0
.
m©
); dcA0.m© = 
NULL
;

393 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA0
 );

394 
	`∑r£c_d©a_‰ì
(
dcB
.
m©
); dcB.m© = 
NULL
;

395 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcB
 );

396 
	`∑r£c_d©a_‰ì
(
dcX
.
m©
); dcX.m© = 
NULL
;

397 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcX
 );

401 
	`d∂asma_m©rix_dñ2¨ía
–&
∑r£c_dtd_¨ías_d©©y≥s
[
TILE_FULL
] );

402 
	`∑r£c_dtd_d©a_cﬁÀ˘i⁄_föi
–(
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcA
 );

404 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
); dcA.m© = 
NULL
;

405 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

407 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

408  
ªt
;

409 
	}
}

	@testing_zpotrf_dtd_untied.c

22 
	~"comm⁄.h
"

23 
	~"Ê›s.h
"

24 
	~"d∂asma/ty≥s.h
"

25 
	~"∑r£c/d©a_di°/m©rix/sym_two_dim_ª˘™gÀ_cy˛ic.h
"

26 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

27 
	~"∑r£c/öãrÁ˚s/su≥rsˇœr/ö£π_fun˘i⁄.h
"

29 
	eªgi⁄s
 {

30 
	mTILE_FULL
,

34 
	$∑r£c_c‹e_pŸrf
(
∑r£c_executi⁄_°ªam_t
 *
es
, 
∑r£c_èsk_t
 *
this_èsk
)

36 ()
es
;

37 
u∂o
;

38 
m
, 
lda
, *
öfo
;

39 
d∂asma_com∂ex64_t
 *
A
;

41 
	`∑r£c_dtd_u≈ack_¨gs
(
this_èsk
, &
u∂o
, &
m
, &
A
, &
lda
, &
öfo
);

43 
	`CORE_zpŸrf
(
u∂o
, 
m
, 
A
, 
lda
, 
öfo
);

45  
PARSEC_HOOK_RETURN_DONE
;

46 
	}
}

49 
	$∑r£c_c‹e_åsm
(
∑r£c_executi⁄_°ªam_t
 *
es
, 
∑r£c_èsk_t
 *
this_èsk
)

51 ()
es
;

52 
side
, 
u∂o
, 
å™s
, 
düg
;

53 
m
, 
n
, 
lda
, 
ldc
;

54 
d∂asma_com∂ex64_t
 
Æpha
;

55 
d∂asma_com∂ex64_t
 *
A
, *
C
;

57 
	`∑r£c_dtd_u≈ack_¨gs
(
this_èsk
, &
side
, &
u∂o
, &
å™s
, &
düg
, &
m
, &
n
,

58 &
Æpha
, &
A
, &
lda
, &
C
, &
ldc
);

60 
	`CORE_zåsm
(
side
, 
u∂o
, 
å™s
, 
düg
,

61 
m
, 
n
, 
Æpha
,

62 
A
, 
lda
,

63 
C
, 
ldc
);

65  
PARSEC_HOOK_RETURN_DONE
;

66 
	}
}

69 
	$∑r£c_c‹e_hîk
(
∑r£c_executi⁄_°ªam_t
 *
es
, 
∑r£c_èsk_t
 *
this_èsk
)

71 ()
es
;

72 
u∂o
, 
å™s
;

73 
m
, 
n
, 
lda
, 
ldc
;

74 
d∂asma_com∂ex64_t
 
Æpha
;

75 
d∂asma_com∂ex64_t
 
bëa
;

76 
d∂asma_com∂ex64_t
 *
A
;

77 
d∂asma_com∂ex64_t
 *
C
;

79 
	`∑r£c_dtd_u≈ack_¨gs
(
this_èsk
, &
u∂o
, &
å™s
, &
m
, &
n
, &
Æpha
, &
A
,

80 &
lda
, &
bëa
, &
C
, &
ldc
);

82 
	`CORE_zhîk
(
u∂o
, 
å™s
, 
m
, 
n
,

83 
Æpha
, 
A
, 
lda
,

84 
bëa
, 
C
, 
ldc
);

86  
PARSEC_HOOK_RETURN_DONE
;

87 
	}
}

90 
	$∑r£c_c‹e_gemm
(
∑r£c_executi⁄_°ªam_t
 *
es
, 
∑r£c_èsk_t
 *
this_èsk
)

92 ()
es
;

93 
å™sA
, 
å™sB
;

94 
m
, 
n
, 
k
, 
lda
, 
ldb
, 
ldc
;

95 
d∂asma_com∂ex64_t
 
Æpha
, 
bëa
;

96 
d∂asma_com∂ex64_t
 *
A
;

97 
d∂asma_com∂ex64_t
 *
B
;

98 
d∂asma_com∂ex64_t
 *
C
;

100 
	`∑r£c_dtd_u≈ack_¨gs
(
this_èsk
, &
å™sA
, &
å™sB
, &
m
, &
n
, &
k
, &
Æpha
,

101 &
A
, &
lda
, &
B
, &
ldb
, &
bëa
, &
C
, &
ldc
);

103 
	`CORE_zgemm
(
å™sA
, 
å™sB
,

104 
m
, 
n
, 
k
,

105 
Æpha
, 
A
, 
lda
,

106 
B
, 
ldb
,

107 
bëa
, 
C
, 
ldc
);

109  
PARSEC_HOOK_RETURN_DONE
;

110 
	}
}

113 
	$ö£π_èsk_lowî
(
∑r£c_executi⁄_°ªam_t
 *
es
, 
∑r£c_èsk_t
 *
this_èsk
)

115 ()
es
;

117 
ãmpkm
, 
ãmpmm
, 
ldak
, 
ldam
, 
side
, 
å™sA_p
, 
å™sA_g
, 
düg
, 
å™s
, 
å™sB
, 
ld™
;

118 
d∂asma_com∂ex64_t
 
Æpha_åsm
, 
Æpha_hîk
, 
bëa
;

119 
sym_two_dim_block_cy˛ic_t
 *
dcA
;

121 
tŸÆ
, *
ôî©i⁄
, 
u∂o
, *
öfo
, 
m
, 
n
, 
k
, 
cou¡
 = 0;

123 
∑r£c_èskpoﬁ_t
 *
dtd_ç
 = (∑r£c_èskpoﬁ_à*)
this_èsk
->
èskpoﬁ
;

125 
	`∑r£c_dtd_u≈ack_¨gs
(
this_èsk
, &
tŸÆ
, &
ôî©i⁄
, &
u∂o
,

126 &
öfo
, &
dcA
);

128 
sym_two_dim_block_cy˛ic_t
 *
__dcA
 = 
dcA
;

130 
side
 = 
d∂asmaRight
;

131 
å™sA_p
 = 
d∂asmaC⁄jTøns
;

132 
düg
 = 
d∂asmaN⁄Unô
;

133 
Æpha_åsm
 = 1.0;

134 
å™s
 = 
d∂asmaNoTøns
;

135 
Æpha_hîk
 = -1.0;

136 
bëa
 = 1.0;

137 
å™sB
 = 
d∂asmaC⁄jTøns
;

138 
å™sA_g
 = 
d∂asmaNoTøns
;

141  
k
 = *
ôî©i⁄
; k < 
tŸÆ
; k++, *ôî©i⁄ +1, 
cou¡
++ ) {

142 if–
cou¡
 > 
∑r£c_dtd_wödow_size
-1000 ) {

143  
PARSEC_HOOK_RETURN_AGAIN
;

146 
ãmpkm
 = (
k
 =(
dcA
->
su≥r
.
mt
 - 1)Ë? dcA->su≥r.
m
 - k * dcA->su≥r.
mb
 : dcA->super.mb;

147 
ldak
 = 
	`BLKLDD
(&
dcA
->
su≥r
, 
k
);

149 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
(
dtd_ç
, 
∑r£c_c‹e_pŸrf
,

150 (
tŸÆ
 - 
k
) * (total-k) * (total - k) , "Potrf",

151 (), &
u∂o
, 
VALUE
,

152 (), &
ãmpkm
, 
VALUE
,

153 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, k), 
INOUT
 | 
TILE_FULL
 | 
AFFINITY
,

154 (), &
ldak
, 
VALUE
,

155 (*), &
öfo
, 
SCRATCH
,

156 
PARSEC_DTD_ARG_END
);

157  
m
 = 
k
+1; m < 
tŸÆ
; m++, 
cou¡
++ ) {

158 
ãmpmm
 = 
m
 =
dcA
->
su≥r
.
mt
 - 1 ? dcA->su≥r.m - m * dcA->su≥r.
mb
 : dcA->super.mb;

159 
ldam
 = 
	`BLKLDD
(&
dcA
->
su≥r
, 
m
);

160 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
(
dtd_ç
, 
∑r£c_c‹e_åsm
,

161 (
tŸÆ
 - 
m
Ë* (tŸÆ-mË* (tŸÆ - mË+ 3 * ((2 *ÅŸÆË- 
k
 - m - 1) * (m - k) , "Trsm",

162 (), &
side
, 
VALUE
,

163 (), &
u∂o
, 
VALUE
,

164 (), &
å™sA_p
, 
VALUE
,

165 (), &
düg
, 
VALUE
,

166 (), &
ãmpmm
, 
VALUE
,

167 (), &
dcA
->
su≥r
.
nb
, 
VALUE
,

168 (
d∂asma_com∂ex64_t
), &
Æpha_åsm
, 
VALUE
,

169 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, k), 
INPUT
 | 
TILE_FULL
,

170 (), &
ldak
, 
VALUE
,

171 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
m
, 
k
), 
INOUT
 | 
TILE_FULL
 | 
AFFINITY
,

172 (), &
ldam
, 
VALUE
,

173 
PARSEC_DTD_ARG_END
);

176 
	`∑r£c_dtd_d©a_Êush
(
dtd_ç
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, k));

177  
m
 = 
k
+1; m < 
dcA
->
su≥r
.
¡
; m++, 
cou¡
++ ){

178 
ãmpmm
 = 
m
 =
dcA
->
su≥r
.
mt
 - 1 ? dcA->su≥r.m - m * dcA->su≥r.
mb
 : dcA->super.mb;

179 
ldam
 = 
	`BLKLDD
(&
dcA
->
su≥r
, 
m
);

180 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
(
dtd_ç
, 
∑r£c_c‹e_hîk
,

181 (
tŸÆ
 - 
m
Ë* (tŸÆ - mË* (tŸÆ - mË+ 3 * (m - 
k
) , "Herk",

182 (), &
u∂o
, 
VALUE
,

183 (), &
å™s
, 
VALUE
,

184 (), &
ãmpmm
, 
VALUE
,

185 (), &
dcA
->
su≥r
.
mb
, 
VALUE
,

186 (
d∂asma_com∂ex64_t
), &
Æpha_hîk
, 
VALUE
,

187 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
m
, 
k
), 
INPUT
 | 
TILE_FULL
,

188 (), &
ldam
, 
VALUE
,

189 (
d∂asma_com∂ex64_t
), &
bëa
, 
VALUE
,

190 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
m
, m), 
INOUT
 | 
TILE_FULL
 | 
AFFINITY
,

191 (), &
ldam
, 
VALUE
,

192 
PARSEC_DTD_ARG_END
);

193  
n
 = 
m
+1;Ç < 
tŸÆ
;Ç++, 
cou¡
++ ){

194 
ld™
 = 
	`BLKLDD
(&
dcA
->
su≥r
, 
n
);

195 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
(
dtd_ç
, 
∑r£c_c‹e_gemm
,

196 (
tŸÆ
 - 
m
Ë* (tŸÆ - mË* (tŸÆ - mË+ 3 * ((2 *ÅŸÆË- m - 
n
 - 3Ë* (m -ÇË+ 6 * (m - 
k
) , "Gemm",

197 (), &
å™sA_g
, 
VALUE
,

198 (), &
å™sB
, 
VALUE
,

199 (), &
ãmpmm
, 
VALUE
,

200 (), &
dcA
->
su≥r
.
mb
, 
VALUE
,

201 (), &
dcA
->
su≥r
.
mb
, 
VALUE
,

202 (
d∂asma_com∂ex64_t
), &
Æpha_hîk
, 
VALUE
,

203 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
n
, 
k
), 
INPUT
 | 
TILE_FULL
,

204 (), &
ld™
, 
VALUE
,

205 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
m
, 
k
), 
INPUT
 | 
TILE_FULL
,

206 (), &
ldam
, 
VALUE
,

207 (
d∂asma_com∂ex64_t
), &
bëa
, 
VALUE
,

208 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
n
, 
m
), 
INOUT
 | 
TILE_FULL
 | 
AFFINITY
,

209 (), &
ld™
, 
VALUE
,

210 
PARSEC_DTD_ARG_END
);

212 
	`∑r£c_dtd_d©a_Êush
(
dtd_ç
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
m
, 
k
));

216 
	`∑r£c_dtd_d©a_Êush_Æl
(
dtd_ç
, (
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)
dcA
);

217  
PARSEC_HOOK_RETURN_DONE
;

218 
	}
}

221 
	$ö£π_èsk_uµî
(
∑r£c_executi⁄_°ªam_t
 *
es
, 
∑r£c_èsk_t
 *
this_èsk
)

223 ()
es
;

225 
ãmpkm
, 
ãmpmm
, 
ldak
, 
ldam
, 
side
, 
å™sA_p
, 
å™sA_g
, 
düg
, 
å™s
, 
å™sB
, 
ld™
;

226 
d∂asma_com∂ex64_t
 
Æpha_åsm
, 
Æpha_hîk
, 
bëa
;

227 
sym_two_dim_block_cy˛ic_t
 *
dcA
;

229 
tŸÆ
, *
ôî©i⁄
, 
u∂o
, *
öfo
, 
m
, 
n
, 
k
, 
cou¡
 = 0;

231 
∑r£c_èskpoﬁ_t
 *
dtd_ç
 = (∑r£c_èskpoﬁ_à*)
this_èsk
->
èskpoﬁ
;

233 
	`∑r£c_dtd_u≈ack_¨gs
(
this_èsk
, &
tŸÆ
, &
ôî©i⁄
, &
u∂o
, &
öfo
, &
dcA
);

235 
sym_two_dim_block_cy˛ic_t
 *
__dcA
 = 
dcA
;

237 
side
 = 
d∂asmaLe·
;

238 
å™sA_p
 = 
d∂asmaC⁄jTøns
;

239 
düg
 = 
d∂asmaN⁄Unô
;

240 
Æpha_åsm
 = 1.0;

241 
å™s
 = 
d∂asmaC⁄jTøns
;

242 
Æpha_hîk
 = -1.0;

243 
bëa
 = 1.0;

244 
å™sB
 = 
d∂asmaNoTøns
;

245 
å™sA_g
 = 
d∂asmaC⁄jTøns
;

248  
k
 = *
ôî©i⁄
; k < 
tŸÆ
; k++, *ôî©i⁄ +1, 
cou¡
++ ) {

249 if–
cou¡
 > 
∑r£c_dtd_wödow_size
-1000 ) {

250  
PARSEC_HOOK_RETURN_AGAIN
;

253 
ãmpkm
 = 
k
 =
dcA
->
su≥r
.
¡
-1 ? dcA->su≥r.
n
-k*dcA->su≥r.
nb
 : dcA->super.nb;

254 
ldak
 = 
	`BLKLDD
(&
dcA
->
su≥r
, 
k
);

255 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
(
dtd_ç
, 
∑r£c_c‹e_pŸrf
,

256 (
tŸÆ
 - 
k
) * (total-k) * (total - k) , "Potrf",

257 (), &
u∂o
, 
VALUE
,

258 (), &
ãmpkm
, 
VALUE
,

259 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, k), 
INOUT
 | 
TILE_FULL
 | 
AFFINITY
,

260 (), &
ldak
, 
VALUE
,

261 (*), 
öfo
, 
SCRATCH
,

262 
PARSEC_DTD_ARG_END
);

263 
m
 = 
k
+1; m < 
tŸÆ
; m++, 
cou¡
++) {

264 
ãmpmm
 = 
m
 =
dcA
->
su≥r
.
¡
-1 ? dcA->su≥r.
n
-m*dcA->su≥r.
nb
 : dcA->super.nb;

265 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
(
dtd_ç
, 
∑r£c_c‹e_åsm
,

266 (
tŸÆ
 - 
m
Ë* (tŸÆ-mË* (tŸÆ - mË+ 3 * ((2 *ÅŸÆË- 
k
 - m - 1) * (m - k) , "Trsm",

267 (), &
side
, 
VALUE
,

268 (), &
u∂o
, 
VALUE
,

269 (), &
å™sA_p
, 
VALUE
,

270 (), &
düg
, 
VALUE
,

271 (), &
dcA
->
su≥r
.
nb
, 
VALUE
,

272 (), &
ãmpmm
, 
VALUE
,

273 (
d∂asma_com∂ex64_t
), &
Æpha_åsm
, 
VALUE
,

274 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, k), 
INPUT
 | 
TILE_FULL
,

275 (), &
ldak
, 
VALUE
,

276 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, 
m
), 
INOUT
 | 
TILE_FULL
 | 
AFFINITY
,

277 (), &
ldak
, 
VALUE
,

278 
PARSEC_DTD_ARG_END
);

280 
	`∑r£c_dtd_d©a_Êush
(
dtd_ç
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, k));

282 
m
 = 
k
+1; m < 
dcA
->
su≥r
.
mt
; m++, 
cou¡
++) {

283 
ãmpmm
 = 
m
 =
dcA
->
su≥r
.
¡
-1 ? dcA->su≥r.
n
-m*dcA->su≥r.
nb
 : dcA->super.nb;

284 
ldam
 = 
	`BLKLDD
(&
dcA
->
su≥r
, 
m
);

285 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
(
dtd_ç
, 
∑r£c_c‹e_hîk
,

286 (
tŸÆ
 - 
m
Ë* (tŸÆ - mË* (tŸÆ - mË+ 3 * (m - 
k
) , "Herk",

287 (), &
u∂o
, 
VALUE
,

288 (), &
å™s
, 
VALUE
,

289 (), &
ãmpmm
, 
VALUE
,

290 (), &
dcA
->
su≥r
.
mb
, 
VALUE
,

291 (
d∂asma_com∂ex64_t
), &
Æpha_hîk
, 
VALUE
,

292 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, 
m
), 
INPUT
 | 
TILE_FULL
,

293 (), &
ldak
, 
VALUE
,

294 (
d∂asma_com∂ex64_t
), &
bëa
, 
VALUE
,

295 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
m
, m), 
INOUT
 | 
TILE_FULL
 | 
AFFINITY
,

296 (), &
ldam
, 
VALUE
,

297 
PARSEC_DTD_ARG_END
);

298 
n
 = 
m
+1;Ç < 
tŸÆ
;Ç++, 
cou¡
++) {

299 
ld™
 = 
	`BLKLDD
(&
dcA
->
su≥r
, 
n
);

300 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
(
dtd_ç
, 
∑r£c_c‹e_gemm
,

301 (
tŸÆ
 - 
m
Ë* (tŸÆ - mË* (tŸÆ - mË+ 3 * ((2 *ÅŸÆË- m - 
n
 - 3Ë* (m -ÇË+ 6 * (m - 
k
) , "Gemm",

302 (), &
å™sA_g
, 
VALUE
,

303 (), &
å™sB
, 
VALUE
,

304 (), &
dcA
->
su≥r
.
mb
, 
VALUE
,

305 (), &
ãmpmm
, 
VALUE
,

306 (), &
dcA
->
su≥r
.
mb
, 
VALUE
,

307 (
d∂asma_com∂ex64_t
), &
Æpha_hîk
, 
VALUE
,

308 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, 
m
), 
INPUT
 | 
TILE_FULL
,

309 (), &
ldak
, 
VALUE
,

310 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, 
n
), 
INPUT
 | 
TILE_FULL
,

311 (), &
ldak
, 
VALUE
,

312 (
d∂asma_com∂ex64_t
), &
bëa
, 
VALUE
,

313 
PASSED_BY_REF
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
m
, 
n
), 
INOUT
 | 
TILE_FULL
 | 
AFFINITY
,

314 (), &
ld™
, 
VALUE
,

315 
PARSEC_DTD_ARG_END
);

317 
	`∑r£c_dtd_d©a_Êush
(
dtd_ç
, 
	`PARSEC_DTD_TILE_OF
(
A
, 
k
, 
m
));

321 
	`∑r£c_dtd_d©a_Êush_Æl
(
dtd_ç
, (
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)
dcA
);

322  
PARSEC_HOOK_RETURN_DONE
;

323 
	}
}

325 
	$maö
(
¨gc
, **
¨gv
)

327 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

328 
ù¨am
[
IPARAM_SIZEOF
];

329 
u∂o
 = 
d∂asmaUµî
;

330 
öfo
 = 0;

331 
ªt
 = 0;

334 
	`ù¨am_deÁu…_Á˘o
(
ù¨am
);

335 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 0, 180, 180);

336 
ù¨am
[
IPARAM_NGPUS
] = 
DPLASMA_ERR_NOT_SUPPORTED
;

339 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

340 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

341 
	`PASTE_CODE_FLOPS
(
FLOPS_ZPOTRF
, ((
DagDoubÀ_t
)
N
));

344 
LDA
 = 
	`d∂asma_imax
–LDA, 
N
 );

345 
LDB
 = 
	`d∂asma_imax
–LDB, 
N
 );

346 
KP
 = 1;

347 
KQ
 = 1;

349 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

350 
sym_two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
,

351 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

352 
N
, N, 
P
, 
u∂o
));

354 
	`∑r£c_dtd_d©a_cﬁÀ˘i⁄_öô
((
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcA
);

357 if(
loud
 > 3Ë
	`¥ötf
("+++ Generate matrices ... ");

358 
	`d∂asma_z∂ghe
–
∑r£c
, ()(
N
), 
u∂o
,

359 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
øndom_£ed
);

360 if(
loud
 > 3Ë
	`¥ötf
("Done\n");

362 
∑r£c_èskpoﬁ_t
 *
dtd_ç
 = 
	`∑r£c_dtd_èskpoﬁ_√w
( );

365 
	`d∂asma_add2¨ía_tûe
–&
∑r£c_dtd_¨ías_d©©y≥s
[0],

366 
dcA
.
su≥r
.
mb
*dcA.su≥r.
nb
*(
d∂asma_com∂ex64_t
),

367 
PARSEC_ARENA_ALIGNMENT_SSE
,

368 
∑r£c_d©©y≥_doubÀ_com∂ex_t
, 
dcA
.
su≥r
.
mb
 );

371 
	`∑r£c_c⁄ãxt_add_èskpoﬁ
–
∑r£c
, 
dtd_ç
 );

373 
	`SYNC_TIME_START
();

378 
	`∑r£c_c⁄ãxt_°¨t
(
∑r£c
);

380 *
ôî©i⁄
 = 
	`mÆloc
(());

381 *
ôî©i⁄
 = 0;

382 
tŸÆ
;

383 if–
d∂asmaLowî
 =
u∂o
 ) {

384 
tŸÆ
 = 
dcA
.
su≥r
.
mt
;

385 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
–
dtd_ç
, 
ö£π_èsk_lowî
, 0, "insert_task_lower",

386 (), &
tŸÆ
, 
VALUE
,

387 (), 
ôî©i⁄
, 
REF
,

388 (), &
u∂o
, 
VALUE
,

389 (*), &
öfo
, 
REF
,

390 (
sym_two_dim_block_cy˛ic_t
 *), &
dcA
, 
REF
,

391 
PARSEC_DTD_ARG_END
 );

394 
tŸÆ
 = 
dcA
.
su≥r
.
¡
;

395 
	`∑r£c_dtd_èskpoﬁ_ö£π_èsk
–
dtd_ç
, 
ö£π_èsk_uµî
, 0, "insert_task_upper",

396 (), &
tŸÆ
, 
VALUE
,

397 (), 
ôî©i⁄
, 
REF
,

398 (), &
u∂o
, 
VALUE
,

399 (*), &
öfo
, 
REF
,

400 (
sym_two_dim_block_cy˛ic_t
 *), &
dcA
, 
REF
,

401 
PARSEC_DTD_ARG_END
 );

406 
	`∑r£c_dtd_èskpoﬁ_waô
–
dtd_ç
 );

409 
	`∑r£c_c⁄ãxt_waô
(
∑r£c
);

413 
	`SYNC_TIME_PRINT
(
ønk
, ("\tPxQ= %3d %-3d NB= %4d N= %7d : %14f gflops\n",

414 
P
, 
Q
, 
NB
, 
N
,

415 
gÊ›s
=(
Ê›s
/1e9)/
sync_time_ñ≠£d
));

418 
	`∑r£c_èskpoﬁ_‰ì
–
dtd_ç
 );

420 if–0 =
ønk
 && 
öfo
 != 0 ) {

421 
	`¥ötf
("-- Fa˘‹iz©i⁄ i†su•iciou†(öfÿ%dË! \n", 
öfo
);

422 
ªt
 |= 1;

424 if–!
öfo
 && 
check
 ) {

426 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA0
, 
check
,

427 
sym_two_dim_block_cy˛ic
, (&
dcA0
, 
m©rix_Com∂exDoubÀ
,

428 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

429 
N
, N, 
P
, 
u∂o
));

430 
	`d∂asma_z∂ghe
–
∑r£c
, ()(
N
), 
u∂o
,

431 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
, 
øndom_£ed
);

433 
ªt
 |
	`check_zpŸrf
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0, 
u∂o
,

434 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

435 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
);

438 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB
, 
check
,

439 
two_dim_block_cy˛ic
, (&
dcB
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

440 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

441 
N
, 
NRHS
, 
KP
, 
KQ
, 
P
));

442 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, 
øndom_£ed
+1);

444 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcX
, 
check
,

445 
two_dim_block_cy˛ic
, (&
dcX
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

446 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
NRHS
, 0, 0,

447 
N
, 
NRHS
, 
KP
, 
KQ
, 
P
));

448 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

449 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, (∑r£c_tûed_m©rix_dc_à*)&
dcX
 );

451 
	`d∂asma_zpŸrs
(
∑r£c
, 
u∂o
,

452 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

453 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
 );

455 
ªt
 |
	`check_zaxmb
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0, 
u∂o
,

456 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
,

457 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

458 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcX
);

461 
	`∑r£c_d©a_‰ì
(
dcA0
.
m©
); dcA0.m© = 
NULL
;

462 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA0
 );

463 
	`∑r£c_d©a_‰ì
(
dcB
.
m©
); dcB.m© = 
NULL
;

464 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcB
 );

465 
	`∑r£c_d©a_‰ì
(
dcX
.
m©
); dcX.m© = 
NULL
;

466 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcX
 );

469 
	`d∂asma_m©rix_dñ2¨ía
–&
∑r£c_dtd_¨ías_d©©y≥s
[
TILE_FULL
] );

470 
	`∑r£c_dtd_d©a_cﬁÀ˘i⁄_föi
–(
∑r£c_d©a_cﬁÀ˘i⁄_t
 *)&
dcA
 );

471 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
); dcA.m© = 
NULL
;

472 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

474 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

475  
ªt
;

476 
	}
}

	@testing_zprint.c

10 
	~"comm⁄.h
"

11 
	~"Ê›s.h
"

12 
	~"∑r£c/d©a_di°/m©rix/sym_two_dim_ª˘™gÀ_cy˛ic.h
"

13 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

15 
	$maö
(
¨gc
, ** 
¨gv
)

17 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

18 
ù¨am
[
IPARAM_SIZEOF
];

19 
d∂asma_íum_t
 
u∂o
 = 
d∂asmaLowî
;

20 
i
, 
öfo
, 
ªt
 = 0;

23 
	`ù¨am_deÁu…_Á˘o
(
ù¨am
);

24 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 0, 180, 180);

27 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

28 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

31 
LDA
 = 
	`max
–LDA, 
M
 );

32 
LDB
 = 
	`max
–LDB, 
M
 );

33 
KP
 = 1;

34 
KQ
 = 1;

36 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

37 
sym_two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
,

38 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

39 
M
, 
N
, 
P
, 
u∂o
));

41 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB
, 1,

42 
two_dim_block_cy˛ic
, (&
dcB
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

43 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
N
, 0, 0,

44 
M
, 
N
, 1, 1, 
P
));

47 if(
loud
 > 2Ë
	`¥ötf
("+++ Generate matrices ... ");

48 
ªt
 |
	`d∂asma_z∂ghe
–
∑r£c
, ()(
N
), 
u∂o
,

49 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 3872);

50 
ªt
 |
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, 2354);

51 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

53 
ªt
 |
	`d∂asma_z¥öt
–
∑r£c
, 
u∂o
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
 );

54 
ªt
 |
	`d∂asma_z¥öt
–
∑r£c
, 
d∂asmaUµîLowî
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
 );

56 
i
=0; i<43; i++) {

57 i‡–
ønk
 == 0 ) {

58 
	`Ârötf
(
°dout
, "=====Gíî©êTe° M©rix %d ======\n", 
i
);

59 
	`fÊush
(
°dout
);

61 
öfo
 = 
	`d∂asma_z∂tmg
–
∑r£c
, 
i
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, 5373 );

62 i‡(
öfo
 == 0)

63 
ªt
 |
	`d∂asma_z¥öt
–
∑r£c
, 
d∂asmaUµîLowî
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
 );

66 
	`∑r£c_d©a_‰ì
(
dcB
.
m©
);

67 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcB
 );

68 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

69 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

71 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

73  
ªt
;

74 
	}
}

	@testing_zsymm.c

10 
	~"comm⁄.h
"

11 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

12 
	~"∑r£c/d©a_di°/m©rix/sym_two_dim_ª˘™gÀ_cy˛ic.h
"

14 
check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

15 
d∂asma_íum_t
 
side
, d∂asma_íum_à
u∂o
,

16 
d∂asma_com∂ex64_t
 
Æpha
, 
Am
, 
An
, 
A£ed
,

17 
d∂asma_com∂ex64_t
 
bëa
, 
M
, 
N
, 
B£ed
, 
C£ed
,

18 
two_dim_block_cy˛ic_t
 *
dcCföÆ
 );

20 
	$maö
(
¨gc
, ** 
¨gv
)

22 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

23 
ù¨am
[
IPARAM_SIZEOF
];

24 
ªt
 = 0;

25 
A£ed
 = 3872;

26 
B£ed
 = 4674;

27 
C£ed
 = 2873;

28 
d∂asma_com∂ex64_t
 
Æpha
 = 3.5;

29 
d∂asma_com∂ex64_t
 
bëa
 = -2.8;

31 #i‡
	`deföed
(
PRECISION_z
Ë|| deföed(
PRECISION_c
)

32 
Æpha
 -
I
 * 4.2;

33 
bëa
 +
I
 * 0.7;

37 
	`ù¨am_deÁu…_gemm
(
ù¨am
);

38 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 0, 200, 200);

39 
ù¨am
[
IPARAM_NGPUS
] = 
DPLASMA_ERR_NOT_SUPPORTED
;

42 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

43 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

45 
LDB
 = 
	`max
(LDB, 
M
);

46 
LDC
 = 
	`max
(LDC, 
M
);

48 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB
, 1,

49 
two_dim_block_cy˛ic
, (&
dcB
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

50 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
N
, 0, 0,

51 
M
, 
N
, 
KP
, 
KQ
, 
P
));

53 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC
, 1,

54 
two_dim_block_cy˛ic
, (&
dcC
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

55 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

56 
M
, 
N
, 
KP
, 
KQ
, 
P
));

58 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC2
, 
check
,

59 
two_dim_block_cy˛ic
, (&
dcC2
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

60 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

61 
M
, 
N
, 
KP
, 
KQ
, 
P
));

63 i‡(
loud
 > 2Ë
	`¥ötf
("Generate matrices ... ");

64 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, 
B£ed
);

65 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
, 
C£ed
);

66 i‡(
check
)

67 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC2
, 
C£ed
);

68 i‡(
loud
 > 2Ë
	`¥ötf
("Done\n");

70 if(!
check
)

72 
d∂asma_íum_t
 
side
 = 
d∂asmaLe·
;

73 
d∂asma_íum_t
 
u∂o
 = 
d∂asmaLowî
;

74 
Am
 = ( 
side
 =
d∂asmaLe·
 ? 
M
 : 
N
 );

75 
LDA
 = 
	`max
(LDA, 
Am
);

77 
	`PASTE_CODE_FLOPS
(
FLOPS_ZSYMM
, (
side
, (
DagDoubÀ_t
)
M
, (DagDoubÀ_t)
N
));

79 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

80 
sym_two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
,

81 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
Am
, 0, 0,

82 
Am
, Am, 
P
, 
u∂o
));

85 if(
loud
 > 2Ë
	`¥ötf
("+++ Generate matrices ... ");

86 
	`d∂asma_z∂gsy
–
∑r£c
, 0., 
u∂o
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
A£ed
);

87 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

90 
	`PASTE_CODE_ENQUEUE_KERNEL
(
∑r£c
, 
zsymm
,

91 (
side
, 
u∂o
,

92 
Æpha
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

93 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

94 
bëa
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
));

97 
	`PASTE_CODE_PROGRESS_KERNEL
(
∑r£c
, 
zsymm
);

99 
	`d∂asma_zsymm_De°ru˘
–
PARSEC_zsymm
 );

101 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

102 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

106 
s
, 
u
;

107 
öfo_sﬁuti⁄
;

109 
s
=0; s<2; s++) {

111 
Am
 = ( 
side
[
s
] =
d∂asmaLe·
 ? 
M
 : 
N
 );

112 
LDA
 = 
	`max
(LDA, 
Am
);

114 
u
=0; u<2; u++) {

116 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

117 
sym_two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
,

118 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
Am
, 0, 0,

119 
Am
, Am, 
P
, 
u∂o
[
u
]));

121 i‡(
loud
 > 2Ë
	`¥ötf
("Generate matrices ... ");

122 
	`d∂asma_z∂gsy
–
∑r£c
, 0., 
u∂o
[
u
], (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
A£ed
);

123 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

124 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC2
, (∑r£c_tûed_m©rix_dc_à*)&
dcC
 );

125 i‡(
loud
 > 2Ë
	`¥ötf
("Done\n");

128 i‡(
loud
 > 2Ë
	`¥ötf
("Compute ... ... ");

129 
	`d∂asma_zsymm
(
∑r£c
, 
side
[
s
], 
u∂o
[
u
],

130 (
d∂asma_com∂ex64_t
)
Æpha
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

131 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

132 (
d∂asma_com∂ex64_t
)
bëa
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

133 i‡(
loud
 > 2Ë
	`¥ötf
("Done\n");

136 
öfo_sﬁuti⁄
 = 
	`check_sﬁuti⁄
(
∑r£c
, 
ønk
 =0 ? 
loud
 : 0,

137 
side
[
s
], 
u∂o
[
u
],

138 
Æpha
, 
Am
, Am, 
A£ed
,

139 
bëa
, 
M
, 
N
, 
B£ed
, 
C£ed
,

140 &
dcC
);

142 i‡–
ønk
 == 0 ) {

143 i‡(
öfo_sﬁuti⁄
 == 0) {

144 
	`¥ötf
(" ---- TESTING ZSYMM (%s, %s) ...... PASSED !\n",

145 
side°r
[
s
], 
u∂o°r
[
u
]);

148 
	`¥ötf
(" ---- TESTING ZSYMM (%s, %s) ... FAILED !\n",

149 
side°r
[
s
], 
u∂o°r
[
u
]);

150 
ªt
 |= 1;

152 
	`¥ötf
("***************************************************\n");

155 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

156 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

160 
	`∑r£c_d©a_‰ì
(
dcC2
.
m©
);

161 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcC2
);

164 
	`∑r£c_d©a_‰ì
(
dcB
.
m©
);

165 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcB
);

166 
	`∑r£c_d©a_‰ì
(
dcC
.
m©
);

167 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcC
);

169 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

171  
ªt
;

172 
	}
}

182 
	$check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

183 
d∂asma_íum_t
 
side
, d∂asma_íum_à
u∂o
,

184 
d∂asma_com∂ex64_t
 
Æpha
, 
Am
, 
An
, 
A£ed
,

185 
d∂asma_com∂ex64_t
 
bëa
, 
M
, 
N
, 
B£ed
, 
C£ed
,

186 
two_dim_block_cy˛ic_t
 *
dcCföÆ
 )

188 
öfo_sﬁuti⁄
 = 1;

189 
An‹m
, 
Bn‹m
, 
Cöôn‹m
, 
Cd∂asm™‹m
, 
Cœ∑ckn‹m
, 
Rn‹m
;

190 
ïs
, 
ªsu…
;

191 
MB
 = 
dcCföÆ
->
su≥r
.
mb
;

192 
NB
 = 
dcCföÆ
->
su≥r
.
nb
;

193 
LDA
 = 
Am
;

194 
LDC
 = 
M
;

195 
LDB
 = 
LDC
;

196 
ønk
 = 
dcCföÆ
->
su≥r
.su≥r.
myønk
;

198 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

200 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

201 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_L≠ack
,

202 1, 
ønk
, 
MB
, 
NB
, 
LDA
, 
An
, 0, 0,

203 
Am
, 
An
, 1, 1, 1));

204 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB
, 1,

205 
two_dim_block_cy˛ic
, (&
dcB
, 
m©rix_Com∂exDoubÀ
, 
m©rix_L≠ack
,

206 1, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

207 
M
, 
N
, 1, 1, 1));

208 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC
, 1,

209 
two_dim_block_cy˛ic
, (&
dcC
, 
m©rix_Com∂exDoubÀ
, 
m©rix_L≠ack
,

210 1, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

211 
M
, 
N
, 1, 1, 1));

213 
	`d∂asma_z∂gsy
–
∑r£c
, 0., 
d∂asmaUµîLowî
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
A£ed
);

214 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, 
B£ed
 );

215 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
, 
C£ed
 );

217 
An‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcA
 );

218 
Bn‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcB
 );

219 
Cöôn‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcC
 );

220 
Cd∂asm™‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)
dcCföÆ
 );

222 i‡–
ønk
 == 0 ) {

223 
	`cbœs_zsymm
(
CbœsCﬁMaj‹
,

224 (
CBLAS_SIDE
)
side
, (
CBLAS_UPLO
)
u∂o
,

225 
M
, 
N
,

226 
	`CBLAS_SADDR
(
Æpha
), 
dcA
.
m©
, 
LDA
,

227 
dcB
.
m©
, 
LDB
,

228 
	`CBLAS_SADDR
(
bëa
), 
dcC
.
m©
, 
LDC
);

231 
Cœ∑ckn‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcC
 );

233 
	`d∂asma_zgódd
–
∑r£c
, 
d∂asmaNoTøns
, -1.0, (
∑r£c_tûed_m©rix_dc_t
*)
dcCföÆ
,

234 1.0, (
∑r£c_tûed_m©rix_dc_t
*)&
dcC
 );

236 
Rn‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaMaxN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcC
 );

238 
ªsu…
 = 
Rn‹m
 / (
Cœ∑ckn‹m
 * 
	`max
(
M
,
N
Ë* 
ïs
);

240 i‡–
ønk
 == 0 ) {

241 i‡–
loud
 > 2 ) {

242 
	`¥ötf
(" ||A||_inf = %e, ||B||_inf = %e, ||C||_inf = %e\n"

244 
An‹m
, 
Bn‹m
, 
Cöôn‹m
, 
Cœ∑ckn‹m
, 
Cd∂asm™‹m
, 
Rn‹m
, 
ªsu…
);

247 i‡–
	`isöf
(
Cœ∑ckn‹m
Ë|| isöf(
Cd∂asm™‹m
) ||

248 
	`i¢™
(
ªsu…
Ë|| 
	`isöf
(result) || (result > 10.0) ) {

249 
öfo_sﬁuti⁄
 = 1;

252 
öfo_sﬁuti⁄
 = 0;

256 #i‡
	`deföed
(
PARSEC_HAVE_MPI
)

257 
	`MPI_Bˇ°
(&
öfo_sﬁuti⁄
, 1, 
MPI_INT
, 0, 
MPI_COMM_WORLD
);

258 #ñi‡
	`deföed
(
PARSEC_HAVE_LCI
)

259 
	`lc_bˇ°
(&
öfo_sﬁuti⁄
, (), 0, *
lci_globÆ_ï
);

262 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

263 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

264 
	`∑r£c_d©a_‰ì
(
dcB
.
m©
);

265 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcB
);

266 
	`∑r£c_d©a_‰ì
(
dcC
.
m©
);

267 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcC
);

269  
öfo_sﬁuti⁄
;

270 
	}
}

	@testing_zsyr2k.c

10 
	~"comm⁄.h
"

11 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

12 
	~"∑r£c/d©a_di°/m©rix/sym_two_dim_ª˘™gÀ_cy˛ic.h
"

14 
check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

15 
d∂asma_íum_t
 
u∂o
, d∂asma_íum_à
å™s
,

16 
d∂asma_com∂ex64_t
 
Æpha
, 
Am
, 
An
, 
A£ed
, 
B£ed
,

17 
d∂asma_com∂ex64_t
 
bëa
, 
M
, 
N
, 
C£ed
,

18 
sym_two_dim_block_cy˛ic_t
 *
dcCföÆ
 );

20 
	$maö
(
¨gc
, ** 
¨gv
)

22 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

23 
ù¨am
[
IPARAM_SIZEOF
];

24 
ªt
 = 0;

25 
A£ed
 = 3872;

26 
B£ed
 = 4674;

27 
C£ed
 = 2873;

28 
d∂asma_com∂ex64_t
 
Æpha
 = 3.5;

29 
d∂asma_com∂ex64_t
 
bëa
 = -2.8;

31 #i‡
	`deföed
(
PRECISION_z
Ë|| deföed(
PRECISION_c
)

32 
Æpha
 -
I
 * 4.2;

33 
bëa
 +
I
 * 2.1;

37 
	`ù¨am_deÁu…_gemm
(
ù¨am
);

38 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 0, 200, 200);

39 
ù¨am
[
IPARAM_NGPUS
] = 
DPLASMA_ERR_NOT_SUPPORTED
;

42 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

43 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

45 
M
 = 
N
;

46 
LDC
 = 
	`d∂asma_imax
(LDC, 
N
);

48 if(!
check
)

50 
d∂asma_íum_t
 
u∂o
 = 
d∂asmaLowî
;

51 
d∂asma_íum_t
 
å™s
 = 
d∂asmaNoTøns
;

52 
Am
, 
An
;

54 
Am
 = (
å™s
 =
d∂asmaNoTøns
Ë? 
N
 : 
K
;

55 
An
 = (
å™s
 =
d∂asmaNoTøns
Ë? 
K
 : 
N
;

57 
	`PASTE_CODE_FLOPS
(
FLOPS_ZSYR2K
, ((
DagDoubÀ_t
)
K
, (DagDoubÀ_t)
N
));

59 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

60 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

61 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
An
, 0, 0,

62 
Am
, 
An
, 
KP
, 
KQ
, 
P
));

64 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB
, 1,

65 
two_dim_block_cy˛ic
, (&
dcB
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

66 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDB
, 
An
, 0, 0,

67 
Am
, 
An
, 
KP
, 
KQ
, 
P
));

69 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC
, 1,

70 
sym_two_dim_block_cy˛ic
, (&
dcC
, 
m©rix_Com∂exDoubÀ
,

71 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

72 
N
, N, 
P
, 
u∂o
));

75 if(
loud
 > 2Ë
	`¥ötf
("+++ Generate matrices ... ");

76 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
A£ed
);

77 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, 
B£ed
);

78 
	`d∂asma_z∂gsy
–
∑r£c
, 0., 
u∂o
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
, 
C£ed
);

79 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

82 
	`PASTE_CODE_ENQUEUE_KERNEL
(
∑r£c
, 
zsyr2k
,

83 (
u∂o
, 
å™s
,

84 
Æpha
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

85 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

86 
bëa
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
));

89 
	`PASTE_CODE_PROGRESS_KERNEL
(
∑r£c
, 
zsyr2k
);

91 
	`d∂asma_zsyr2k_De°ru˘
–
PARSEC_zsyr2k
 );

93 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

94 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

95 
	`∑r£c_d©a_‰ì
(
dcB
.
m©
);

96 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcB
);

97 
	`∑r£c_d©a_‰ì
(
dcC
.
m©
);

98 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcC
);

102 
u
, 
t
;

103 
öfo_sﬁuti⁄
;

105 
u
=0; u<2; u++) {

107 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC
, 1,

108 
sym_two_dim_block_cy˛ic
, (&
dcC
, 
m©rix_Com∂exDoubÀ
,

109 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

110 
N
, N, 
P
, 
u∂o
[
u
]));

112 
t
=0;Å<2;Å++) {

114 
Am
 = ( 
å™s
[
t
] =
d∂asmaNoTøns
 ? 
N
 : 
K
 );

115 
An
 = ( 
å™s
[
t
] =
d∂asmaNoTøns
 ? 
K
 : 
N
 );

116 
LDA
 = 
	`max
(LDA, 
Am
);

118 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

119 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

120 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
An
, 0, 0,

121 
Am
, 
An
, 
KP
, 
KQ
, 
P
));

123 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB
, 1,

124 
two_dim_block_cy˛ic
, (&
dcB
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

125 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
An
, 0, 0,

126 
Am
, 
An
, 
KP
, 
KQ
, 
P
));

128 i‡(
loud
 > 2Ë
	`¥ötf
("Generate matrices ... ");

129 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
A£ed
);

130 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, 
B£ed
);

131 
	`d∂asma_z∂gsy
–
∑r£c
, 0., 
u∂o
[
u
], (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
, 
C£ed
);

132 i‡(
loud
 > 2Ë
	`¥ötf
("Done\n");

135 i‡(
loud
 > 2Ë
	`¥ötf
("Compute ... ... ");

136 
	`d∂asma_zsyr2k
(
∑r£c
, 
u∂o
[
u
], 
å™s
[
t
],

137 
Æpha
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

138 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
,

139 
bëa
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

140 i‡(
loud
 > 2Ë
	`¥ötf
("Done\n");

143 
öfo_sﬁuti⁄
 = 
	`check_sﬁuti⁄
(
∑r£c
, 
ønk
 =0 ? 
loud
 : 0,

144 
u∂o
[
u
], 
å™s
[
t
],

145 
Æpha
, 
Am
, 
An
, 
A£ed
, 
B£ed
,

146 
bëa
, 
N
, N, 
C£ed
,

147 &
dcC
);

149 i‡–
ønk
 == 0 ) {

150 i‡(
öfo_sﬁuti⁄
 == 0) {

151 
	`¥ötf
(" ---- TESTING ZSYR2K (%s, %s) ...... PASSED !\n",

152 
u∂o°r
[
u
], 
å™s°r
[
t
]);

155 
	`¥ötf
(" ---- TESTING ZSYR2K (%s, %s) ... FAILED !\n",

156 
u∂o°r
[
u
], 
å™s°r
[
t
]);

157 
ªt
 |= 1;

159 
	`¥ötf
("***************************************************\n");

162 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

163 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

164 
	`∑r£c_d©a_‰ì
(
dcB
.
m©
);

165 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcB
);

167 
	`∑r£c_d©a_‰ì
(
dcC
.
m©
);

168 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcC
);

172 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

174  
ªt
;

175 
	}
}

185 
	$check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

186 
d∂asma_íum_t
 
u∂o
, d∂asma_íum_à
å™s
,

187 
d∂asma_com∂ex64_t
 
Æpha
, 
Am
, 
An
, 
A£ed
, 
B£ed
,

188 
d∂asma_com∂ex64_t
 
bëa
, 
M
, 
N
, 
C£ed
,

189 
sym_two_dim_block_cy˛ic_t
 *
dcCföÆ
 )

191 
öfo_sﬁuti⁄
 = 1;

192 
An‹m
, 
Bn‹m
, 
Cöôn‹m
, 
Cd∂asm™‹m
, 
Cœ∑ckn‹m
, 
Rn‹m
;

193 
ïs
, 
ªsu…
;

194 
MB
 = 
dcCföÆ
->
su≥r
.
mb
;

195 
NB
 = 
dcCföÆ
->
su≥r
.
nb
;

196 
LDA
 = 
Am
;

197 
LDC
 = 
M
;

198 
ønk
 = 
dcCföÆ
->
su≥r
.su≥r.
myønk
;

200 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

202 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

203 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_L≠ack
,

204 1, 
ønk
, 
MB
, 
NB
, 
LDA
, 
An
, 0, 0,

205 
Am
, 
An
, 1, 1, 1));

206 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcB
, 1,

207 
two_dim_block_cy˛ic
, (&
dcB
, 
m©rix_Com∂exDoubÀ
, 
m©rix_L≠ack
,

208 1, 
ønk
, 
MB
, 
NB
, 
LDA
, 
An
, 0, 0,

209 
Am
, 
An
, 1, 1, 1));

210 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC
, 1,

211 
two_dim_block_cy˛ic
, (&
dcC
, 
m©rix_Com∂exDoubÀ
, 
m©rix_L≠ack
,

212 1, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

213 
M
, 
N
, 1, 1, 1));

215 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
A£ed
);

216 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcB
, 
B£ed
);

217 
	`d∂asma_z∂gsy
–
∑r£c
, 0., 
d∂asmaUµîLowî
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
, 
C£ed
 );

219 
An‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcA
 );

220 
Bn‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcB
 );

221 
Cöôn‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcC
 );

222 
Cd∂asm™‹m
 = 
	`d∂asma_zœnsy
–
∑r£c
, 
d∂asmaInfN‹m
, 
u∂o
, (
∑r£c_tûed_m©rix_dc_t
*)
dcCföÆ
 );

224 i‡–
ønk
 == 0 ) {

225 
	`cbœs_zsyr2k
(
CbœsCﬁMaj‹
,

226 (
CBLAS_UPLO
)
u∂o
, (
CBLAS_TRANSPOSE
)
å™s
,

227 
N
, (
å™s
 =
d∂asmaNoTøns
Ë? 
An
 : 
Am
,

228 
	`CBLAS_SADDR
(
Æpha
), 
dcA
.
m©
, 
LDA
,

229 
dcB
.
m©
, 
LDA
,

230 
	`CBLAS_SADDR
(
bëa
), 
dcC
.
m©
, 
LDC
);

233 
Cœ∑ckn‹m
 = 
	`d∂asma_zœnsy
–
∑r£c
, 
d∂asmaInfN‹m
, 
u∂o
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcC
 );

235 
	`d∂asma_zåadd
–
∑r£c
, 
u∂o
, 
d∂asmaNoTøns
,

236 -1.0, (
∑r£c_tûed_m©rix_dc_t
*)
dcCföÆ
,

237 1.0, (
∑r£c_tûed_m©rix_dc_t
*)&
dcC
 );

239 
Rn‹m
 = 
	`d∂asma_zœnsy
–
∑r£c
, 
d∂asmaMaxN‹m
, 
u∂o
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcC
 );

241 
ªsu…
 = 
Rn‹m
 / (
Cœ∑ckn‹m
 * 
	`max
(
M
,
N
Ë* 
ïs
);

243 i‡–
ønk
 == 0 ) {

244 i‡–
loud
 > 2 ) {

245 
	`¥ötf
(" ||A||_inf = %e, ||B||_inf = %e, ||C||_inf = %e\n"

247 
An‹m
, 
Bn‹m
, 
Cöôn‹m
, 
Cœ∑ckn‹m
, 
Cd∂asm™‹m
, 
Rn‹m
, 
ªsu…
);

250 i‡–
	`isöf
(
Cœ∑ckn‹m
Ë|| isöf(
Cd∂asm™‹m
) ||

251 
	`i¢™
(
ªsu…
Ë|| 
	`isöf
(result) || (result > 10.0) ) {

252 
öfo_sﬁuti⁄
 = 1;

255 
öfo_sﬁuti⁄
 = 0;

259 #i‡
	`deföed
(
PARSEC_HAVE_MPI
)

260 
	`MPI_Bˇ°
(&
öfo_sﬁuti⁄
, 1, 
MPI_INT
, 0, 
MPI_COMM_WORLD
);

261 #ñi‡
	`deföed
(
PARSEC_HAVE_LCI
)

262 
	`lc_bˇ°
(&
öfo_sﬁuti⁄
, (), 0, *
lci_globÆ_ï
);

265 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

266 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

267 
	`∑r£c_d©a_‰ì
(
dcB
.
m©
);

268 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcB
);

269 
	`∑r£c_d©a_‰ì
(
dcC
.
m©
);

270 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcC
);

272  
öfo_sﬁuti⁄
;

273 
	}
}

	@testing_zsyrk.c

10 
	~"comm⁄.h
"

11 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

12 
	~"∑r£c/d©a_di°/m©rix/sym_two_dim_ª˘™gÀ_cy˛ic.h
"

14 
check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

15 
d∂asma_íum_t
 
u∂o
, d∂asma_íum_à
å™s
,

16 
d∂asma_com∂ex64_t
 
Æpha
, 
Am
, 
An
, 
A£ed
,

17 
d∂asma_com∂ex64_t
 
bëa
, 
M
, 
N
, 
C£ed
,

18 
sym_two_dim_block_cy˛ic_t
 *
dcCföÆ
 );

20 
	$maö
(
¨gc
, ** 
¨gv
)

22 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

23 
ù¨am
[
IPARAM_SIZEOF
];

24 
ªt
 = 0;

25 
A£ed
 = 3872;

26 
C£ed
 = 2873;

27 
d∂asma_com∂ex64_t
 
Æpha
 = 3.5 - 
I
 * 4.2;

28 
d∂asma_com∂ex64_t
 
bëa
 = -2.8 + 
I
 * 0.7;

31 
	`ù¨am_deÁu…_gemm
(
ù¨am
);

32 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 0, 200, 200);

35 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

36 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

38 
M
 = 
N
;

39 
LDC
 = 
	`max
(LDC, 
N
);

41 if(!
check
)

43 
d∂asma_íum_t
 
u∂o
 = 
d∂asmaLowî
;

44 
d∂asma_íum_t
 
å™s
 = 
d∂asmaNoTøns
;

45 
Am
 = ( 
å™s
 =
d∂asmaNoTøns
 ? 
N
 : 
K
 );

46 
An
 = ( 
å™s
 =
d∂asmaNoTøns
 ? 
K
 : 
N
 );

47 
LDA
 = 
	`max
(LDA, 
Am
);

49 
	`PASTE_CODE_FLOPS
(
FLOPS_ZSYRK
, ((
DagDoubÀ_t
)
K
, (DagDoubÀ_t)
N
));

51 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

52 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

53 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
An
, 0, 0,

54 
Am
, 
An
, 
KP
, 
KQ
, 
P
));

56 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC
, 1,

57 
sym_two_dim_block_cy˛ic
, (&
dcC
, 
m©rix_Com∂exDoubÀ
,

58 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

59 
N
, N, 
P
, 
u∂o
));

62 if(
loud
 > 2Ë
	`¥ötf
("+++ Generate matrices ... ");

63 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
A£ed
);

64 
	`d∂asma_z∂gsy
–
∑r£c
, 0., 
u∂o
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
, 
C£ed
);

65 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

68 
	`PASTE_CODE_ENQUEUE_KERNEL
(
∑r£c
, 
zsyrk
,

69 (
u∂o
, 
å™s
,

70 
Æpha
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

71 
bëa
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
));

74 
	`PASTE_CODE_PROGRESS_KERNEL
(
∑r£c
, 
zsyrk
);

76 
	`d∂asma_zsyrk_De°ru˘
–
PARSEC_zsyrk
 );

78 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

79 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

80 
	`∑r£c_d©a_‰ì
(
dcC
.
m©
);

81 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcC
);

85 
u
, 
t
;

86 
öfo_sﬁuti⁄
;

88 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC2
, 
check
,

89 
two_dim_block_cy˛ic
, (&
dcC2
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

90 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

91 
N
, N, 
KP
, 
KQ
, 
P
));

92 i‡(
loud
 > 2Ë
	`¥ötf
("Generate matrices ... ");

93 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC2
, 
C£ed
);

94 i‡(
loud
 > 2Ë
	`¥ötf
("Done\n");

96 
u
=0; u<2; u++) {

97 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC
, 1,

98 
sym_two_dim_block_cy˛ic
, (&
dcC
, 
m©rix_Com∂exDoubÀ
,

99 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

100 
N
, N, 
P
, 
u∂o
[
u
]));

102 
t
=0;Å<2;Å++) {

105 
Am
 = ( 
å™s
[
t
] =
d∂asmaNoTøns
 ? 
N
 : 
K
 );

106 
An
 = ( 
å™s
[
t
] =
d∂asmaNoTøns
 ? 
K
 : 
N
 );

107 
LDA
 = 
	`max
(LDA, 
Am
);

109 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

110 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

111 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
An
, 0, 0,

112 
Am
, 
An
, 
KP
, 
KQ
, 
P
));

114 i‡(
loud
 > 2Ë
	`¥ötf
("Generate matrices ... ");

115 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
A£ed
);

116 
	`d∂asma_zœ˝y
–
∑r£c
, 
u∂o
[
u
],

117 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC2
, (∑r£c_tûed_m©rix_dc_à*)&
dcC
 );

118 i‡(
loud
 > 2Ë
	`¥ötf
("Done\n");

121 i‡(
loud
 > 2Ë
	`¥ötf
("Compute ... ... ");

122 
	`d∂asma_zsyrk
(
∑r£c
, 
u∂o
[
u
], 
å™s
[
t
],

123 
Æpha
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

124 
bëa
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

125 i‡(
loud
 > 2Ë
	`¥ötf
("Done\n");

128 
öfo_sﬁuti⁄
 = 
	`check_sﬁuti⁄
(
∑r£c
, 
ønk
 =0 ? 
loud
 : 0,

129 
u∂o
[
u
], 
å™s
[
t
],

130 
Æpha
, 
Am
, 
An
, 
A£ed
,

131 
bëa
, 
N
, N, 
C£ed
,

132 &
dcC
);

134 i‡–
ønk
 == 0 ) {

135 i‡(
öfo_sﬁuti⁄
 == 0) {

136 
	`¥ötf
(" ---- TESTING ZSYRK (%s, %s) ...... PASSED !\n",

137 
u∂o°r
[
u
], 
å™s°r
[
t
]);

140 
	`¥ötf
(" ---- TESTING ZSYRK (%s, %s) ... FAILED !\n",

141 
u∂o°r
[
u
], 
å™s°r
[
t
]);

142 
ªt
 |= 1;

144 
	`¥ötf
("***************************************************\n");

147 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

148 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

150 
	`∑r£c_d©a_‰ì
(
dcC
.
m©
);

151 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcC
);

154 
	`∑r£c_d©a_‰ì
(
dcC2
.
m©
);

155 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcC2
);

158 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

160  
ªt
;

161 
	}
}

171 
	$check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

172 
d∂asma_íum_t
 
u∂o
, d∂asma_íum_à
å™s
,

173 
d∂asma_com∂ex64_t
 
Æpha
, 
Am
, 
An
, 
A£ed
,

174 
d∂asma_com∂ex64_t
 
bëa
, 
M
, 
N
, 
C£ed
,

175 
sym_two_dim_block_cy˛ic_t
 *
dcCföÆ
 )

177 
öfo_sﬁuti⁄
 = 1;

178 
An‹m
, 
Cöôn‹m
, 
Cd∂asm™‹m
, 
Cœ∑ckn‹m
, 
Rn‹m
;

179 
ïs
, 
ªsu…
;

180 
MB
 = 
dcCföÆ
->
su≥r
.
mb
;

181 
NB
 = 
dcCföÆ
->
su≥r
.
nb
;

182 
LDA
 = 
Am
;

183 
LDC
 = 
M
;

184 
ønk
 = 
dcCföÆ
->
su≥r
.su≥r.
myønk
;

186 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

188 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

189 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_L≠ack
,

190 1, 
ønk
, 
MB
, 
NB
, 
LDA
, 
An
, 0, 0,

191 
Am
, 
An
, 1, 1, 1));

192 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC
, 1,

193 
two_dim_block_cy˛ic
, (&
dcC
, 
m©rix_Com∂exDoubÀ
, 
m©rix_L≠ack
,

194 1, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

195 
M
, 
N
, 1, 1, 1));

197 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
A£ed
);

198 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
, 
C£ed
 );

200 
An‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcA
 );

201 
Cöôn‹m
 = 
	`d∂asma_zœnsy
–
∑r£c
, 
d∂asmaInfN‹m
, 
u∂o
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcC
 );

202 
Cd∂asm™‹m
 = 
	`d∂asma_zœnsy
–
∑r£c
, 
d∂asmaInfN‹m
, 
u∂o
, (
∑r£c_tûed_m©rix_dc_t
*)
dcCföÆ
 );

204 i‡–
ønk
 == 0 ) {

205 
	`cbœs_zsyrk
(
CbœsCﬁMaj‹
,

206 (
CBLAS_UPLO
)
u∂o
, (
CBLAS_TRANSPOSE
)
å™s
,

207 
N
, (
å™s
 =
d∂asmaNoTøns
Ë? 
An
 : 
Am
,

208 
	`CBLAS_SADDR
(
Æpha
), 
dcA
.
m©
, 
LDA
,

209 
	`CBLAS_SADDR
(
bëa
), 
dcC
.
m©
, 
LDC
);

212 
Cœ∑ckn‹m
 = 
	`d∂asma_zœnsy
–
∑r£c
, 
d∂asmaInfN‹m
, 
u∂o
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcC
 );

214 
	`d∂asma_zåadd
–
∑r£c
, 
u∂o
, 
d∂asmaNoTøns
,

215 -1.0, (
∑r£c_tûed_m©rix_dc_t
*)
dcCföÆ
,

216 1.0, (
∑r£c_tûed_m©rix_dc_t
*)&
dcC
 );

218 
Rn‹m
 = 
	`d∂asma_zœnsy
–
∑r£c
, 
d∂asmaMaxN‹m
, 
u∂o
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcC
 );

220 
ªsu…
 = 
Rn‹m
 / (
Cœ∑ckn‹m
 * 
	`max
(
M
,
N
Ë* 
ïs
);

222 i‡–
ønk
 == 0 ) {

223 i‡–
loud
 > 2 ) {

224 
	`¥ötf
(" ||A||_inf = %e, ||C||_inf = %e\n"

226 
An‹m
, 
Cöôn‹m
, 
Cœ∑ckn‹m
, 
Cd∂asm™‹m
, 
Rn‹m
, 
ªsu…
);

229 i‡–
	`isöf
(
Cœ∑ckn‹m
Ë|| isöf(
Cd∂asm™‹m
) ||

230 
	`i¢™
(
ªsu…
Ë|| 
	`isöf
(result) || (result > 10.0) ) {

231 
öfo_sﬁuti⁄
 = 1;

234 
öfo_sﬁuti⁄
 = 0;

238 #i‡
	`deföed
(
PARSEC_HAVE_MPI
)

239 
	`MPI_Bˇ°
(&
öfo_sﬁuti⁄
, 1, 
MPI_INT
, 0, 
MPI_COMM_WORLD
);

240 #ñi‡
	`deföed
(
PARSEC_HAVE_LCI
)

241 
	`lc_bˇ°
(&
öfo_sﬁuti⁄
, (), 0, *
lci_globÆ_ï
);

244 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

245 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

246 
	`∑r£c_d©a_‰ì
(
dcC
.
m©
);

247 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcC
);

249  
öfo_sﬁuti⁄
;

250 
	}
}

	@testing_ztrmm.c

10 
	~"comm⁄.h
"

11 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

13 
check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

14 
d∂asma_íum_t
 
side
, d∂asma_íum_à
u∂o
, d∂asma_íum_à
å™s
, d∂asma_íum_à
düg
,

15 
d∂asma_com∂ex64_t
 
Æpha
,

16 
Am
, 
An
, 
A£ed
,

17 
M
, 
N
, 
C£ed
,

18 
two_dim_block_cy˛ic_t
 *
dcCföÆ
 );

20 
	$maö
(
¨gc
, ** 
¨gv
)

22 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

23 
ù¨am
[
IPARAM_SIZEOF
];

24 
ªt
 = 0;

25 
A£ed
 = 3872;

26 
C£ed
 = 2873;

27 
d∂asma_com∂ex64_t
 
Æpha
 = 3.5;

28 
∑r£c_tûed_m©rix_dc_t
 *
dcA
;

30 #i‡
	`deföed
(
PRECISION_z
Ë|| deföed(
PRECISION_c
)

31 
Æpha
 -
I
 * 4.2;

35 
	`ù¨am_deÁu…_gemm
(
ù¨am
);

36 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 0, 200, 200);

37 
ù¨am
[
IPARAM_NGPUS
] = 
DPLASMA_ERR_NOT_SUPPORTED
;

40 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

41 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

43 
Am
 = 
	`max
(
M
, 
N
);

44 
LDA
 = 
	`max
(LDA, 
Am
);

45 
LDC
 = 
	`max
(LDC, 
M
);

46 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA0
, 1,

47 
two_dim_block_cy˛ic
, (&
dcA0
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

48 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
Am
, 0, 0,

49 
Am
, Am, 
KP
, 
KQ
, 
P
));

50 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC
, 1,

51 
two_dim_block_cy˛ic
, (&
dcC
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

52 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

53 
M
, 
N
, 
KP
, 
KQ
, 
P
));

55 if(!
check
)

57 
d∂asma_íum_t
 
side
 = 
d∂asmaLe·
;

58 
d∂asma_íum_t
 
u∂o
 = 
d∂asmaLowî
;

59 
d∂asma_íum_t
 
å™s
 = 
d∂asmaNoTøns
;

60 
d∂asma_íum_t
 
düg
 = 
d∂asmaUnô
;

62 
	`PASTE_CODE_FLOPS
(
FLOPS_ZTRMM
, (
side
, (
DagDoubÀ_t
)
M
, (DagDoubÀ_t)
N
));

65 i‡(
side
 =
d∂asmaLe·
) {

66 
dcA
 = 
	`tûed_m©rix_subm©rix
–(
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
, 0, 0, 
M
, M );

68 
dcA
 = 
	`tûed_m©rix_subm©rix
–(
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
, 0, 0, 
N
, N );

72 if(
loud
 > 2Ë
	`¥ötf
("+++ Generate matrices ... ");

73 
	`d∂asma_z∂ghe
–
∑r£c
, 0., 
u∂o
, 
dcA
, 
A£ed
);

74 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
, 
C£ed
);

75 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

78 
	`PASTE_CODE_ENQUEUE_KERNEL
(
∑r£c
, 
zåmm
,

79 (
side
, 
u∂o
, 
å™s
, 
düg
,

80 1.0, 
dcA
,

81 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
));

84 
	`PASTE_CODE_PROGRESS_KERNEL
(
∑r£c
, 
zåmm
);

86 
	`d∂asma_zåmm_De°ru˘
–
PARSEC_zåmm
 );

87 
	`‰ì
(
dcA
);

91 
s
, 
u
, 
t
, 
d
;

92 
öfo_sﬁuti⁄
;

94 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC2
, 1,

95 
two_dim_block_cy˛ic
, (&
dcC2
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

96 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

97 
M
, 
N
, 
KP
, 
KQ
, 
P
));

99 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC2
, 
C£ed
);

101 
s
=0; s<2; s++) {

103 i‡(
side
[
s
] =
d∂asmaLe·
) {

104 
Am
 = 
M
;

105 
dcA
 = 
	`tûed_m©rix_subm©rix
–(
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
, 0, 0, 
M
, M );

107 
Am
 = 
N
;

108 
dcA
 = 
	`tûed_m©rix_subm©rix
–(
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
, 0, 0, 
N
, N );

110 
	`d∂asma_z∂ghe
–
∑r£c
, 0., 
d∂asmaUµîLowî
, 
dcA
, 
A£ed
);

112 
u
=0; u<2; u++) {

113 #i‡
	`deföed
(
PRECISION_z
Ë|| deföed(
PRECISION_c
)

114 
t
=0;Å<3;Å++) {

116 
t
=0;Å<2;Å++) {

118 
d
=0; d<2; d++) {

120 i‡–
ønk
 == 0 ) {

121 
	`¥ötf
("***************************************************\n");

122 
	`¥ötf
(" ----- TESTING ZTRMM (%s, %s, %s, %s) -------- \n",

123 
side°r
[
s
], 
u∂o°r
[
u
], 
å™s°r
[
t
], 
düg°r
[
d
]);

127 
	`¥ötf
("Generate matrices ... ");

128 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

129 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC2
, (∑r£c_tûed_m©rix_dc_à*)&
dcC
 );

130 
	`¥ötf
("Done\n");

133 
	`¥ötf
("Compute ... ... ");

134 
	`d∂asma_zåmm
(
∑r£c
, 
side
[
s
], 
u∂o
[
u
], 
å™s
[
t
], 
düg
[
d
],

135 
Æpha
, 
dcA
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

136 
	`¥ötf
("Done\n");

139 
öfo_sﬁuti⁄
 = 
	`check_sﬁuti⁄
(
∑r£c
, 
ønk
 =0 ? 
loud
 : 0,

140 
side
[
s
], 
u∂o
[
u
], 
å™s
[
t
], 
düg
[
d
],

141 
Æpha
, 
Am
, Am, 
A£ed
,

142 
M
, 
N
, 
C£ed
,

143 &
dcC
);

144 i‡–
ønk
 == 0 ) {

145 i‡(
öfo_sﬁuti⁄
 == 0) {

146 
	`¥ötf
(" ---- TESTING ZTRMM (%s, %s, %s, %s) ...... PASSED !\n",

147 
side°r
[
s
], 
u∂o°r
[
u
], 
å™s°r
[
t
], 
düg°r
[
d
]);

150 
	`¥ötf
(" ---- TESTING ZTRMM (%s, %s, %s, %s) ... FAILED !\n",

151 
side°r
[
s
], 
u∂o°r
[
u
], 
å™s°r
[
t
], 
düg°r
[
d
]);

152 
ªt
 |= 1;

154 
	`¥ötf
("***************************************************\n");

159 
	`‰ì
(
dcA
);

161 
	`∑r£c_d©a_‰ì
(
dcC2
.
m©
);

162 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcC2
);

165 
	`∑r£c_d©a_‰ì
(
dcA0
.
m©
);

166 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA0
);

167 
	`∑r£c_d©a_‰ì
(
dcC
.
m©
);

168 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcC
);

170 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

172  
ªt
;

173 
	}
}

183 
	$check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

184 
d∂asma_íum_t
 
side
, d∂asma_íum_à
u∂o
, d∂asma_íum_à
å™s
, d∂asma_íum_à
düg
,

185 
d∂asma_com∂ex64_t
 
Æpha
,

186 
Am
, 
An
, 
A£ed
,

187 
M
, 
N
, 
C£ed
,

188 
two_dim_block_cy˛ic_t
 *
dcCföÆ
 )

190 
öfo_sﬁuti⁄
 = 1;

191 
An‹m
, 
Cöôn‹m
, 
Cd∂asm™‹m
, 
Cœ∑ckn‹m
, 
Rn‹m
;

192 
ïs
, 
ªsu…
;

193 
MB
 = 
dcCföÆ
->
su≥r
.
mb
;

194 
NB
 = 
dcCföÆ
->
su≥r
.
nb
;

195 
LDA
 = 
Am
;

196 
LDC
 = 
M
;

197 
ønk
 = 
dcCföÆ
->
su≥r
.su≥r.
myønk
;

199 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

201 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

202 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_L≠ack
,

203 1, 
ønk
, 
MB
, 
NB
, 
LDA
, 
An
, 0, 0,

204 
Am
, 
An
, 1, 1, 1));

205 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC
, 1,

206 
two_dim_block_cy˛ic
, (&
dcC
, 
m©rix_Com∂exDoubÀ
, 
m©rix_L≠ack
,

207 1, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

208 
M
, 
N
, 1, 1, 1));

210 
	`d∂asma_z∂ghe
–
∑r£c
, 0., 
d∂asmaUµîLowî
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
A£ed
);

211 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
, 
C£ed
 );

213 
An‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcA
 );

214 
Cöôn‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcC
 );

215 
Cd∂asm™‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)
dcCföÆ
 );

217 i‡–
ønk
 == 0 ) {

218 
	`cbœs_zåmm
(
CbœsCﬁMaj‹
,

219 (
CBLAS_SIDE
)
side
, (
CBLAS_UPLO
)
u∂o
,

220 (
CBLAS_TRANSPOSE
)
å™s
, (
CBLAS_DIAG
)
düg
,

221 
M
, 
N
,

222 
	`CBLAS_SADDR
(
Æpha
), 
dcA
.
m©
, 
LDA
,

223 
dcC
.
m©
, 
LDC
 );

226 
Cœ∑ckn‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcC
 );

228 
	`d∂asma_zgódd
–
∑r£c
, 
d∂asmaNoTøns
,

229 -1.0, (
∑r£c_tûed_m©rix_dc_t
*)
dcCföÆ
,

230 1.0, (
∑r£c_tûed_m©rix_dc_t
*)&
dcC
 );

232 
Rn‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaMaxN‹m
, (
∑r£c_tûed_m©rix_dc_t
*)&
dcC
 );

234 
ªsu…
 = 
Rn‹m
 / (
Cœ∑ckn‹m
 * 
	`max
(
M
,
N
Ë* 
ïs
);

236 i‡–
ønk
 == 0 ) {

237 i‡–
loud
 > 2 ) {

238 
	`¥ötf
(" ||A||_inf = %e, ||C||_inf = %e\n"

240 
An‹m
, 
Cöôn‹m
, 
Cœ∑ckn‹m
, 
Cd∂asm™‹m
, 
Rn‹m
, 
ªsu…
);

243 i‡–
	`isöf
(
Cœ∑ckn‹m
Ë|| isöf(
Cd∂asm™‹m
) ||

244 
	`i¢™
(
ªsu…
Ë|| 
	`isöf
(result) || (result > 10.0) ) {

245 
öfo_sﬁuti⁄
 = 1;

248 
öfo_sﬁuti⁄
 = 0;

252 #i‡
	`deföed
(
PARSEC_HAVE_MPI
)

253 
	`MPI_Bˇ°
(&
öfo_sﬁuti⁄
, 1, 
MPI_INT
, 0, 
MPI_COMM_WORLD
);

254 #ñi‡
	`deföed
(
PARSEC_HAVE_LCI
)

255 
	`lc_bˇ°
(&
öfo_sﬁuti⁄
, (), 0, *
lci_globÆ_ï
);

258 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

259 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

260 
	`∑r£c_d©a_‰ì
(
dcC
.
m©
);

261 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcC
);

263  
öfo_sﬁuti⁄
;

264 
	}
}

	@testing_ztrsm.c

10 
	~"comm⁄.h
"

11 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

13 
check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

14 
M
, 
N
,

15 
∑r£c_tûed_m©rix_dc_t
 *
dcC
,

16 
∑r£c_tûed_m©rix_dc_t
 *
dcCföÆ
 );

18 
	$maö
(
¨gc
, ** 
¨gv
)

20 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

21 
ù¨am
[
IPARAM_SIZEOF
];

22 
ªt
 = 0;

23 
A£ed
 = 3872;

24 
C£ed
 = 2873;

25 
d∂asma_com∂ex64_t
 
Æpha
 = 0.98;

26 
∑r£c_tûed_m©rix_dc_t
 *
dcA
;

28 #i‡
	`deföed
(
PRECISION_z
Ë|| deföed(
PRECISION_c
)

29 
Æpha
 -
I
 * 0.32;

33 
	`ù¨am_deÁu…_gemm
(
ù¨am
);

34 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 0, 200, 200);

37 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

38 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

40 
Am
 = 
	`d∂asma_imax
(
M
, 
N
);

41 
LDA
 = 
	`d∂asma_imax
(LDA, 
Am
);

42 
LDC
 = 
	`d∂asma_imax
(LDC, 
M
);

43 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA0
, 1,

44 
two_dim_block_cy˛ic
, (&
dcA0
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

45 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
Am
, 0, 0,

46 
Am
, Am, 
KP
, 
KQ
, 
P
));

47 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC
, 1,

48 
two_dim_block_cy˛ic
, (&
dcC
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

49 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

50 
M
, 
N
, 
KP
, 
KQ
, 
P
));

51 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC0
, 
check
,

52 
two_dim_block_cy˛ic
, (&
dcC0
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

53 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDC
, 
N
, 0, 0,

54 
M
, 
N
, 
KP
, 
KQ
, 
P
));

57 if(
loud
 > 2Ë
	`¥ötf
("+++ Generate matrices ... ");

59 
	`d∂asma_z∂∫t
–
∑r£c
, 1, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
, 
A£ed
);

61 
	`d∂asma_zœsˇl
–
∑r£c
, 
d∂asmaUµîLowî
,

62 1. / (
d∂asma_com∂ex64_t
)
Am
,

63 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
 );

64 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
, 
C£ed
);

65 i‡(
check
)

66 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

67 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
, (∑r£c_tûed_m©rix_dc_à*)&
dcC0
 );

68 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

70 if(!
check
)

72 
d∂asma_íum_t
 
side
 = 
d∂asmaLe·
;

73 
d∂asma_íum_t
 
u∂o
 = 
d∂asmaLowî
;

74 
d∂asma_íum_t
 
å™s
 = 
d∂asmaNoTøns
;

75 
d∂asma_íum_t
 
düg
 = 
d∂asmaUnô
;

78 i‡(
side
 =
d∂asmaLe·
) {

79 
dcA
 = 
	`tûed_m©rix_subm©rix
–(
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
, 0, 0, 
M
, M );

81 
dcA
 = 
	`tûed_m©rix_subm©rix
–(
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
, 0, 0, 
N
, N );

85 
	`d∂asma_zåmm
(
∑r£c
, 
side
, 
u∂o
, 
å™s
, 
düg
, 1. / 
Æpha
,

86 
dcA
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

88 
	`PASTE_CODE_FLOPS
(
FLOPS_ZTRSM
, (
side
, (
DagDoubÀ_t
)
M
, (DagDoubÀ_t)
N
));

91 
	`PASTE_CODE_ENQUEUE_KERNEL
(
∑r£c
, 
zåsm
,

92 (
side
, 
u∂o
, 
å™s
, 
düg
, 
Æpha
,

93 
dcA
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
));

96 
	`PASTE_CODE_PROGRESS_KERNEL
(
∑r£c
, 
zåsm
);

98 
	`d∂asma_zåsm_De°ru˘
–
PARSEC_zåsm
 );

99 
	`‰ì
(
dcA
);

103 
s
, 
u
, 
t
, 
d
;

104 
öfo_sﬁuti⁄
;

106 
s
=0; s<2; s++) {

108 i‡(
side
[
s
] =
d∂asmaLe·
) {

109 
dcA
 = 
	`tûed_m©rix_subm©rix
–(
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
, 0, 0, 
M
, M );

111 
dcA
 = 
	`tûed_m©rix_subm©rix
–(
∑r£c_tûed_m©rix_dc_t
 *)&
dcA0
, 0, 0, 
N
, N );

114 
u
=0; u<2; u++) {

115 #i‡
	`deföed
(
PRECISION_z
Ë|| deföed(
PRECISION_c
)

116 
t
=0;Å<3;Å++) {

118 
t
=0;Å<2;Å++) {

120 
d
=0; d<2; d++) {

122 i‡–
ønk
 == 0 ) {

123 
	`¥ötf
("***************************************************\n");

124 
	`¥ötf
(" ----- TESTING ZTRSM (%s, %s, %s, %s) -------- \n",

125 
side°r
[
s
], 
u∂o°r
[
u
], 
å™s°r
[
t
], 
düg°r
[
d
]);

129 
	`¥ötf
("Generate matrices ... ");

130 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

131 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC0
,

132 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
 );

133 
	`d∂asma_zåmm
(
∑r£c
, 
side
[
s
], 
u∂o
[
u
], 
å™s
[
t
], 
düg
[
d
], 1./
Æpha
,

134 
dcA
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

135 
	`¥ötf
("Done\n");

138 
	`¥ötf
("Compute ... ... ");

139 
	`d∂asma_zåsm
(
∑r£c
, 
side
[
s
], 
u∂o
[
u
], 
å™s
[
t
], 
düg
[
d
], 
Æpha
,

140 
dcA
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

141 
	`¥ötf
("Done\n");

144 
öfo_sﬁuti⁄
 = 
	`check_sﬁuti⁄
(
∑r£c
, 
ønk
 =0 ? 
loud
 : 0, 
M
, 
N
,

145 (
∑r£c_tûed_m©rix_dc_t
*)&
dcC0
,

146 (
∑r£c_tûed_m©rix_dc_t
*)&
dcC
);

147 i‡–
ønk
 == 0 ) {

148 i‡(
öfo_sﬁuti⁄
 == 0) {

149 
	`¥ötf
(" ---- TESTING ZTRSM (%s, %s, %s, %s) ...... PASSED !\n",

150 
side°r
[
s
], 
u∂o°r
[
u
], 
å™s°r
[
t
], 
düg°r
[
d
]);

153 
	`¥ötf
(" ---- TESTING ZTRSM (%s, %s, %s, %s) ... FAILED !\n",

154 
side°r
[
s
], 
u∂o°r
[
u
], 
å™s°r
[
t
], 
düg°r
[
d
]);

155 
ªt
 |= 1;

157 
	`¥ötf
("***************************************************\n");

162 
	`‰ì
(
dcA
);

164 
	`∑r£c_d©a_‰ì
(
dcC0
.
m©
);

165 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcC0
);

168 
	`∑r£c_d©a_‰ì
(
dcA0
.
m©
);

169 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA0
);

170 
	`∑r£c_d©a_‰ì
(
dcC
.
m©
);

171 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcC
);

173 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

175  
ªt
;

176 
	}
}

186 
	$check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

187 
M
, 
N
,

188 
∑r£c_tûed_m©rix_dc_t
 *
dcC
,

189 
∑r£c_tûed_m©rix_dc_t
 *
dcCföÆ
 )

191 
öfo_sﬁuti⁄
 = 1;

192 
Cöôn‹m
, 
Cd∂asm™‹m
, 
Rn‹m
;

193 
ïs
, 
ªsu…
;

195 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

197 
Cöôn‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, 
dcC
 );

198 
Cd∂asm™‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaInfN‹m
, 
dcCföÆ
 );

200 
	`d∂asma_zgódd
–
∑r£c
, 
d∂asmaNoTøns
,

201 -1.0, (
∑r£c_tûed_m©rix_dc_t
*)
dcC
,

202 1.0, (
∑r£c_tûed_m©rix_dc_t
*)
dcCföÆ
 );

204 
Rn‹m
 = 
	`d∂asma_zœnge
–
∑r£c
, 
d∂asmaMaxN‹m
, 
dcCföÆ
 );

206 
ªsu…
 = 
Rn‹m
 / (
Cöôn‹m
 * 
ïs
 * 
	`d∂asma_imax
(
M
, 
N
));

208 i‡–
loud
 > 2 ) {

209 
	`¥ötf
(" ||x||_inf = %e, ||dplasma(A^(-1) b||_inf = %e, ||R||_m = %e,Ñes = %e\n",

210 
Cöôn‹m
, 
Cd∂asm™‹m
, 
Rn‹m
, 
ªsu…
);

213 i‡–
	`isöf
(
Cd∂asm™‹m
Ë|| 
	`i¢™
(
ªsu…
) || isinf(result) || (result > 10.0) ) {

214 
öfo_sﬁuti⁄
 = 1;

217 
öfo_sﬁuti⁄
 = 0;

220  
öfo_sﬁuti⁄
;

221 
	}
}

	@testing_ztrtri.c

10 
	~"comm⁄.h
"

11 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

13 
check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

14 
d∂asma_íum_t
 
u∂o
, d∂asma_íum_à
düg
, 
N
,

15 
∑r£c_tûed_m©rix_dc_t
 *
A
,

16 
∑r£c_tûed_m©rix_dc_t
 *
Aöv
 );

18 
	$maö
(
¨gc
, ** 
¨gv
)

20 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

21 
ù¨am
[
IPARAM_SIZEOF
];

22 
ªt
 = 0;

23 
A£ed
 = 3872;

26 
	`ù¨am_deÁu…_gemm
(
ù¨am
);

27 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 0, 200, 200);

28 
ù¨am
[
IPARAM_NGPUS
] = 
DPLASMA_ERR_NOT_SUPPORTED
;

31 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

32 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

35 
Am
 = 
	`d∂asma_imax
(
M
, 
N
);

37 
LDA
 = 
	`d∂asma_imax
(LDA, 
Am
);

38 
LDC
 = 
	`d∂asma_imax
(LDC, 
M
);

39 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

40 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

41 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
Am
, 0, 0,

42 
Am
, Am, 
KP
, 
KQ
, 
P
));

43 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcAöv
, 
check
,

44 
two_dim_block_cy˛ic
, (&
dcAöv
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

45 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
Am
, 0, 0,

46 
Am
, Am, 
KP
, 
KQ
, 
P
));

49 if(
loud
 > 2Ë
	`¥ötf
("+++ Generate matrices ... ");

51 
	`d∂asma_z∂∫t
–
∑r£c
, 1, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 
A£ed
);

53 
	`d∂asma_zœsˇl
–
∑r£c
, 
d∂asmaUµîLowî
,

54 1. / (
d∂asma_com∂ex64_t
)
Am
,

55 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
 );

56 if(
loud
 > 2Ë
	`¥ötf
("Done\n");

58 if(!
check
)

60 
d∂asma_íum_t
 
u∂o
 = 
d∂asmaLowî
;

61 
d∂asma_íum_t
 
düg
 = 
d∂asmaUnô
;

62 
öfo
 = 0;

64 
	`PASTE_CODE_FLOPS
(
FLOPS_ZTRTRI
, ((
DagDoubÀ_t
)
Am
));

67 
	`PASTE_CODE_ENQUEUE_KERNEL
(
∑r£c
, 
zååi
,

68 (
u∂o
, 
düg
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, &
öfo
));

71 
	`PASTE_CODE_PROGRESS_KERNEL
(
∑r£c
, 
zååi
);

73 
	`d∂asma_zååi_De°ru˘
–
PARSEC_zååi
 );

77 
u
, 
d
, 
öfo
;

78 
öfo_sﬁuti⁄
;

80 
u
=0; u<2; u++) {

81 
d
=0; d<2; d++) {

82 i‡–
ønk
 == 0 ) {

83 
	`¥ötf
("***************************************************\n");

84 
	`¥ötf
(" ----- TESTING ZTRTRI (%s, %s) -------- \n",

85 
u∂o°r
[
u
], 
düg°r
[
d
]);

89 
	`¥ötf
("Generate matrices ... ");

90 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

91 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

92 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcAöv
 );

93 
	`¥ötf
("Done\n");

96 
	`¥ötf
("Compute ... ... ");

97 
öfo
 = 
	`d∂asma_zååi
(
∑r£c
, 
u∂o
[
u
], 
düg
[
d
],

98 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcAöv
);

99 
	`¥ötf
("Done\n");

102 i‡(
öfo
 != 0) {

103 
öfo_sﬁuti⁄
 = 1;

106 
öfo_sﬁuti⁄
 = 
	`check_sﬁuti⁄
(
∑r£c
, 
ønk
 =0 ? 
loud
 : 0,

107 
u∂o
[
u
], 
düg
[
d
], 
Am
,

108 (
∑r£c_tûed_m©rix_dc_t
*)&
dcA
,

109 (
∑r£c_tûed_m©rix_dc_t
*)&
dcAöv
);

111 i‡–
ønk
 == 0 ) {

112 i‡(
öfo_sﬁuti⁄
 == 0) {

113 
	`¥ötf
(" ---- TESTING ZTRTRI (%s, %s) ...... PASSED !\n",

114 
u∂o°r
[
u
], 
düg°r
[
d
]);

117 
	`¥ötf
(" ---- TESTING ZTRTRI (%s, %s) ... FAILED !\n",

118 
u∂o°r
[
u
], 
düg°r
[
d
]);

119 
ªt
 |= 1;

121 
	`¥ötf
("***************************************************\n");

126 
	`∑r£c_d©a_‰ì
(
dcAöv
.
m©
);

127 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcAöv
);

130 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

132 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

133 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

135  
ªt
;

136 
	}
}

146 
	$check_sﬁuti⁄
–
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
,

147 
d∂asma_íum_t
 
u∂o
, d∂asma_íum_à
düg
, 
N
,

148 
∑r£c_tûed_m©rix_dc_t
 *
A
,

149 
∑r£c_tûed_m©rix_dc_t
 *
Aöv
 )

151 
two_dim_block_cy˛ic_t
 *
twodA
 = (two_dim_block_cy˛ic_à*)
A
;

152 
öfo_sﬁuti⁄
 = 1;

153 
An‹m
, 
Aövn‹m
, 
Rn‹m
;

154 
Rc⁄d
;

155 
ïs
, 
ªsu…
;

157 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

159 
	`PASTE_CODE_ALLOCATE_MATRIX
(
Id
, 1,

160 
two_dim_block_cy˛ic
, (&
Id
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

161 
A
->
su≥r
.
nodes
, 
twodA
->
grid
.
ønk
,

162 
A
->
mb
, A->
nb
, 
N
, N, 0, 0,

163 
N
, N, 
twodA
->
grid
.
krows
,ÅwodA->grid.
kcﬁs
,ÅwodA->grid.
rows
));

165 
	`PASTE_CODE_ALLOCATE_MATRIX
(
A0
, 1,

166 
two_dim_block_cy˛ic
, (&
A0
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

167 
A
->
su≥r
.
nodes
, 
twodA
->
grid
.
ønk
,

168 
A
->
mb
, A->
nb
, 
N
, N, 0, 0,

169 
N
, N, 
twodA
->
grid
.
krows
,ÅwodA->grid.
kcﬁs
,ÅwodA->grid.
rows
));

171 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
Id
);

172 i‡–
düg
 =
d∂asmaN⁄Unô
 ) {

173 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
A0
);

174 
	`d∂asma_zœ˝y
–
∑r£c
, 
u∂o
, 
Aöv
, (
∑r£c_tûed_m©rix_dc_t
 *)&
A0
 );

176 
d∂asma_íum_t
 
nu∂o
 = (
u∂o
 =
d∂asmaLowî
Ë? 
d∂asmaUµî
 : dplasmaLower ;

178 
	`d∂asma_zœ˝y
–
∑r£c
, 
u∂o
, 
Aöv
, (
∑r£c_tûed_m©rix_dc_t
 *)&
A0
 );

179 
	`d∂asma_zœ£t
–
∑r£c
, 
nu∂o
, 0., 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
A0
 );

181 
	`d∂asma_zåmm
(
∑r£c
, 
d∂asmaLe·
, 
u∂o
, 
d∂asmaNoTøns
, 
düg
,

182 1., 
A
, (
∑r£c_tûed_m©rix_dc_t
 *)&
A0
 );

184 
	`d∂asma_zgódd
–
∑r£c
, 
d∂asmaNoTøns
,

185 -1.0, (
∑r£c_tûed_m©rix_dc_t
*)&
A0
,

186 1.0, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
 );

188 
An‹m
 = 
	`d∂asma_zœ¡r
–
∑r£c
, 
d∂asmaO√N‹m
, 
u∂o
, 
düg
, 
A
 );

189 
Aövn‹m
 = 
	`d∂asma_zœ¡r
–
∑r£c
, 
d∂asmaO√N‹m
, 
u∂o
, 
düg
, 
Aöv
 );

190 
Rn‹m
 = 
	`d∂asma_zœ¡r
–
∑r£c
, 
d∂asmaO√N‹m
, 
u∂o
, 
d∂asmaN⁄Unô
, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
 );

192 
Rc⁄d
 = ( 1. / 
An‹m
 ) / 
Aövn‹m
;

193 
ªsu…
 = (
Rn‹m
 * 
Rc⁄d
Ë/ (
ïs
 * 
N
);

195 i‡–
loud
 > 2 ) {

196 
	`¥ötf
(" ||A||_one = %e, ||A^(-1)||_one = %e, ||I - A * A^(-1)||_one = %e, cond = %e,Ñesult = %e\n",

197 
An‹m
, 
Aövn‹m
, 
Rn‹m
, 
Rc⁄d
, 
ªsu…
);

200 i‡–
	`isöf
(
Aövn‹m
Ë|| 
	`i¢™
(
ªsu…
) || isinf(result) || (result > 10.0) ) {

201 
öfo_sﬁuti⁄
 = 1;

204 
öfo_sﬁuti⁄
 = 0;

207 
	`∑r£c_d©a_‰ì
(
Id
.
m©
);

208 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
Id
);

209 
	`∑r£c_d©a_‰ì
(
A0
.
m©
);

210 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
A0
);

212  
öfo_sﬁuti⁄
;

213 
	}
}

	@testing_zunmlq.c

10 
	~"comm⁄.h
"

11 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

13 
	$maö
(
¨gc
, ** 
¨gv
)

15 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

16 
Cn‹m
, 
Rn‹m
, 
ªsu…
;

17 
thªshﬁd
 = 10.;

18 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

19 *
ªsu…°r
;

20 
ù¨am
[
IPARAM_SIZEOF
];

21 
ªt
 = 0;

22 
s
, 
t
;

25 
	`ù¨am_deÁu…_Á˘o
(
ù¨am
);

26 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 48, 192, 192);

27 
ù¨am
[
IPARAM_KP
] = 1;

28 
ù¨am
[
IPARAM_KQ
] = 4;

29 
ù¨am
[
IPARAM_LDA
] = -'m';

32 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

33 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

35 i‡(
N
 < 
K
) {

36 
	`¥ötf
("WARNING: N must be greater orÉqualÅo K (Set N = K)\n");

37 
N
 = 
K
;

38 
NT
 = 
KT
;

41 
LDA
 = 
	`max
(
N
, LDA);

44 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

45 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

46 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

47 
K
, 
N
, 
KP
, 
KQ
, 
P
));

48 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcT
, 1,

49 
two_dim_block_cy˛ic
, (&
dcT
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

50 
nodes
, 
ønk
, 
IB
, 
NB
, 
MT
*IB, 
N
, 0, 0,

51 
KT
*
IB
, 
N
, 
KP
, 
KQ
, 
P
));

52 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcQ
, 1,

53 
two_dim_block_cy˛ic
, (&
dcQ
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

54 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

55 
N
, N, 
KP
, 
KQ
, 
P
));

58 if(
loud
 > 3Ë
	`¥ötf
("+++ Generate matrices ... ");

59 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 3872);

60 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 0., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcT
);

61 if(
loud
 > 3Ë
	`¥ötf
("Done\n");

63 if(
loud
 > 3Ë
	`¥ötf
("+++ Factorize A ... ");

64 
	`d∂asma_zgñqf
(
∑r£c
,

65 (
∑r£c_tûed_m©rix_dc_t
*)&
dcA
,

66 (
∑r£c_tûed_m©rix_dc_t
*)&
dcT
);

67 if(
loud
 > 3Ë
	`¥ötf
("Done\n");

69 if(
loud
 > 3Ë
	`¥ötf
("+++ Generate Q ... ");

70 
	`d∂asma_zunglq
–
∑r£c
,

71 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

72 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcT
,

73 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
);

74 if(
loud
 > 3Ë
	`¥ötf
("Done\n");

76 
s
=0; s<2; s++) {

78 
Cm
 = (
side
[
s
] =
d∂asmaLe·
Ë? 
N
 : 
M
;

79 
Cn
 = (
side
[
s
] =
d∂asmaLe·
Ë? 
M
 : 
N
;

80 
LDC
 = 
	`max
(LDC, 
Cm
);

82 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC
, 1,

83 
two_dim_block_cy˛ic
, (&
dcC
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

84 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDC
, 
Cn
, 0, 0,

85 
Cm
, 
Cn
, 
KP
, 
KQ
, 
P
));

86 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC0
, 1,

87 
two_dim_block_cy˛ic
, (&
dcC0
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

88 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDC
, 
Cn
, 0, 0,

89 
Cm
, 
Cn
, 
KP
, 
KQ
, 
P
));

91 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC0
, 2354);

92 
Cn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaO√N‹m
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC0
);

94 i‡(
Cn‹m
 == 0.)

95 
Cn‹m
 = 1.;

97 
t
=0;Å<2;Å++) {

98 #i‡
	`deföed
(
PRECISION_z
Ë|| deföed(
PRECISION_c
)

99 i‡(
t
==1)Å++;

102 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

103 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC0
,

104 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

106 
	`d∂asma_zunmlq
–
∑r£c
, 
side
[
s
], 
å™s
[
t
],

107 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

108 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcT
,

109 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

111 i‡(
side
[
s
] =
d∂asmaLe·
 ) {

112 
	`d∂asma_zgemm
–
∑r£c
, 
å™s
[
t
], 
d∂asmaNoTøns
,

113 -1., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
,

114 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC0
,

115 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

117 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaNoTøns
, 
å™s
[
t
],

118 -1., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC0
,

119 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
,

120 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

123 
Rn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaO√N‹m
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

124 
ªsu…
 = 
Rn‹m
 / (()
N
 * 
Cn‹m
 * 
ïs
);

126 i‡(
loud
 && 
ønk
 == 0) {

127 
	`¥ötf
("***************************************************\n");

128 i‡–
loud
 > 3 ) {

129 
	`¥ötf
( "-- ||C||_1 = %e, ||R||_1 = %e, ||R||_1 / (N * ||C||_1 *Éps) = %e\n",

130 
Cn‹m
, 
Rn‹m
, 
ªsu…
 );

133 i‡–
	`i¢™
(
Rn‹m
Ë|| 
	`isöf
(Rnorm) ||

134 
	`i¢™
(
ªsu…
Ë|| 
	`isöf
‘esu…Ë|| (ªsu… >
thªshﬁd
) ) {

135 
ªsu…°r
 = " FAILED";

136 
ªt
 |= 1;

139 
ªsu…°r
 = "... PASSED";

141 
	`¥ötf
(" ---- TESTING ZUNMLQ (%s, %s) ...%s !\n",

142 
side°r
[
s
], 
å™s°r
[
t
], 
ªsu…°r
);

146 
	`∑r£c_d©a_‰ì
(
dcC0
.
m©
);

147 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcC0
);

148 
	`∑r£c_d©a_‰ì
(
dcC
.
m©
);

149 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcC
);

152 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

153 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

154 
	`∑r£c_d©a_‰ì
(
dcT
.
m©
);

155 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcT
);

156 
	`∑r£c_d©a_‰ì
(
dcQ
.
m©
);

157 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcQ
);

159 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

161  
ªt
;

162 
	}
}

	@testing_zunmlq_hqr.c

10 
	~"comm⁄.h
"

11 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

16 
	$check_‹thog⁄Æôy
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
, 
∑r£c_tûed_m©rix_dc_t
 *
Q
)

18 
two_dim_block_cy˛ic_t
 *
twodQ
 = (two_dim_block_cy˛ic_à*)
Q
;

19 
n‹mQ
 = 999999.0;

20 
ªsu…
;

21 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

22 
öfo_‹tho
;

23 
M
 = 
Q
->
m
;

24 
N
 = 
Q
->
n
;

25 
möMN
 = 
	`mö
(
M
, 
N
);

27 
	`PASTE_CODE_ALLOCATE_MATRIX
(
Id
, 1,

28 
two_dim_block_cy˛ic
, (&
Id
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

29 
Q
->
su≥r
.
nodes
, 
twodQ
->
grid
.
ønk
,

30 
Q
->
mb
, Q->
nb
, 
möMN
, minMN, 0, 0,

31 
möMN
, möMN, 
twodQ
->
grid
.
krows
,ÅwodQ->grid.
kcﬁs
,ÅwodQ->grid.
rows
));

33 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
Id
);

36 i‡–
M
 >
N
 ) {

37 
	`d∂asma_zhîk
–
∑r£c
, 
d∂asmaUµî
, 
d∂asmaC⁄jTøns
,

38 1.0, 
Q
, -1.0, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
 );

40 
	`d∂asma_zhîk
–
∑r£c
, 
d∂asmaUµî
, 
d∂asmaNoTøns
,

41 1.0, 
Q
, -1.0, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
 );

44 
n‹mQ
 = 
	`d∂asma_zœnhe
(
∑r£c
, 
d∂asmaInfN‹m
, 
d∂asmaUµî
, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
);

46 
ªsu…
 = 
n‹mQ
 / (
möMN
 * 
ïs
);

47 i‡–
loud
 ) {

48 
	`¥ötf
("============\n");

49 
	`¥ötf
("CheckingÅhe orthogonality of Q \n");

50 
	`¥ötf
("||Id-Q'*Q||_oÿ/ (N*ïsË%ê\n", 
ªsu…
);

53 i‡–
	`i¢™
(
ªsu…
Ë|| 
	`isöf
(result) || (result > 60.0) ) {

54 i‡–
loud
 ) 
	`¥ötf
("-- Orthogonality is suspicious ! \n");

55 
öfo_‹tho
=1;

58 i‡–
loud
 ) 
	`¥ötf
("-- Orthogonality is CORRECT ! \n");

59 
öfo_‹tho
=0;

62 
	`∑r£c_d©a_‰ì
(
Id
.
m©
);

63 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
Id
);

64  
öfo_‹tho
;

65 
	}
}

67 
	$maö
(
¨gc
, ** 
¨gv
)

69 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

70 
d∂asma_qπªe_t
 
qπªe
;

71 
Cn‹m
, 
Rn‹m
, 
ªsu…
;

72 
thªshﬁd
 = 10.;

73 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

74 *
ªsu…°r
;

75 
ù¨am
[
IPARAM_SIZEOF
];

76 
ªt
 = 0;

77 
s
, 
t
;

80 
	`ù¨am_deÁu…_Á˘o
(
ù¨am
);

81 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 48, 192, 192);

82 
ù¨am
[
IPARAM_KP
] = 1;

83 
ù¨am
[
IPARAM_KQ
] = 1;

84 
ù¨am
[
IPARAM_LDA
] = -'m';

87 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

88 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

90 i‡(
N
 < 
K
) {

91 
	`¥ötf
("WARNING: N must be greater orÉqualÅo K (Set N = K)\n");

92 
N
 = 
K
;

93 
NT
 = 
KT
;

96 
LDA
 = 
	`max
(
N
, LDA);

99 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

100 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

101 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

102 
K
, 
N
, 
KP
, 
KQ
, 
P
));

103 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcTS
, 1,

104 
two_dim_block_cy˛ic
, (&
dcTS
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

105 
nodes
, 
ønk
, 
IB
, 
NB
, 
MT
*IB, 
N
, 0, 0,

106 
KT
*
IB
, 
N
, 
KP
, 
KQ
, 
P
));

107 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcTT
, 1,

108 
two_dim_block_cy˛ic
, (&
dcTT
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

109 
nodes
, 
ønk
, 
IB
, 
NB
, 
MT
*IB, 
N
, 0, 0,

110 
KT
*
IB
, 
N
, 
KP
, 
KQ
, 
P
));

111 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcQ
, 1,

112 
two_dim_block_cy˛ic
, (&
dcQ
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

113 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

114 
N
, N, 
KP
, 
KQ
, 
P
));

117 if(
loud
 > 3Ë
	`¥ötf
("+++ Generate matrices ... ");

118 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 3872);

119 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 0., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTS
);

120 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 0., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTT
);

121 if(
loud
 > 3Ë
	`¥ötf
("Done\n");

123 
	`d∂asma_hqr_öô
–&
qπªe
,

124 
d∂asmaC⁄jTøns
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

125 
ù¨am
[
IPARAM_LOWLVL_TREE
], i∑øm[
IPARAM_HIGHLVL_TREE
],

126 
ù¨am
[
IPARAM_QR_TS_SZE
], i∑øm[
IPARAM_QR_HLVL_SZE
],

127 
ù¨am
[
IPARAM_QR_DOMINO
], i∑øm[
IPARAM_QR_TSRR
] );

129 if(
loud
 > 3Ë
	`¥ötf
("+++ Factorize A ... ");

130 
	`d∂asma_zgñqf_∑øm
–
∑r£c
, &
qπªe
,

131 (
∑r£c_tûed_m©rix_dc_t
*)&
dcA
,

132 (
∑r£c_tûed_m©rix_dc_t
*)&
dcTS
,

133 (
∑r£c_tûed_m©rix_dc_t
*)&
dcTT
 );

134 if(
loud
 > 3Ë
	`¥ötf
("Done\n");

136 if(
loud
 > 3Ë
	`¥ötf
("+++ Generate Q ... ");

137 
	`d∂asma_zunglq_∑øm
–
∑r£c
, &
qπªe
,

138 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

139 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTS
,

140 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTT
,

141 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
);

142 if(
loud
 > 3Ë
	`¥ötf
("Done\n");

144 
ªt
 |
	`check_‹thog⁄Æôy
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

145 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
);

146 i‡(
ªt
)

147  
ªt
;

149 
s
=0; s<2; s++) {

151 
Cm
 = (
side
[
s
] =
d∂asmaLe·
Ë? 
N
 : 
M
;

152 
Cn
 = (
side
[
s
] =
d∂asmaLe·
Ë? 
M
 : 
N
;

153 
LDC
 = 
	`max
(LDC, 
Cm
);

155 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC
, 1,

156 
two_dim_block_cy˛ic
, (&
dcC
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

157 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDC
, 
Cn
, 0, 0,

158 
Cm
, 
Cn
, 
KP
, 
KQ
, 
P
));

159 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC0
, 1,

160 
two_dim_block_cy˛ic
, (&
dcC0
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

161 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDC
, 
Cn
, 0, 0,

162 
Cm
, 
Cn
, 
KP
, 
KQ
, 
P
));

164 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC0
, 2354);

165 
Cn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaO√N‹m
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC0
);

167 i‡(
Cn‹m
 == 0.)

168 
Cn‹m
 = 1.;

170 
t
=0;Å<2;Å++) {

171 #i‡
	`deföed
(
PRECISION_z
Ë|| deföed(
PRECISION_c
)

172 i‡(
t
==1)Å++;

175 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

176 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC0
,

177 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

179 
	`d∂asma_zunmlq_∑øm
–
∑r£c
,

180 
side
[
s
], 
å™s
[
t
], &
qπªe
,

181 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

182 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTS
,

183 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTT
,

184 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

186 i‡(
side
[
s
] =
d∂asmaLe·
 ) {

187 
	`d∂asma_zgemm
–
∑r£c
, 
å™s
[
t
], 
d∂asmaNoTøns
,

188 -1., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
,

189 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC0
,

190 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

192 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaNoTøns
, 
å™s
[
t
],

193 -1., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC0
,

194 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
,

195 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

198 
Rn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaO√N‹m
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

199 
ªsu…
 = 
Rn‹m
 / (()
N
 * 
Cn‹m
 * 
ïs
);

201 i‡(
loud
 && 
ønk
 == 0) {

202 
	`¥ötf
("***************************************************\n");

203 i‡–
loud
 > 3 ) {

204 
	`¥ötf
( "-- ||C||_1 = %e, ||R||_1 = %e, ||R||_1 / (N * ||C||_1 *Éps) = %e\n",

205 
Cn‹m
, 
Rn‹m
, 
ªsu…
 );

208 i‡–
	`i¢™
(
Rn‹m
Ë|| 
	`isöf
(Rnorm) ||

209 
	`i¢™
(
ªsu…
Ë|| 
	`isöf
‘esu…Ë|| (ªsu… >
thªshﬁd
) ) {

210 
ªsu…°r
 = " FAILED";

211 
ªt
 |= 1;

214 
ªsu…°r
 = "... PASSED";

216 
	`¥ötf
(" ---- TESTING ZUNMLQ (%s, %s) ...%s !\n",

217 
side°r
[
s
], 
å™s°r
[
t
], 
ªsu…°r
);

221 
	`∑r£c_d©a_‰ì
(
dcC0
.
m©
);

222 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcC0
);

223 
	`∑r£c_d©a_‰ì
(
dcC
.
m©
);

224 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcC
);

227 
	`d∂asma_hqr_föÆize
–&
qπªe
 );

229 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

230 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

231 
	`∑r£c_d©a_‰ì
(
dcTS
.
m©
);

232 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcTS
);

233 
	`∑r£c_d©a_‰ì
(
dcTT
.
m©
);

234 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcTT
);

235 
	`∑r£c_d©a_‰ì
(
dcQ
.
m©
);

236 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcQ
);

238 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

240  
ªt
;

241 
	}
}

	@testing_zunmlq_systolic.c

10 
	~"comm⁄.h
"

11 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

16 
	$check_‹thog⁄Æôy
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
, 
∑r£c_tûed_m©rix_dc_t
 *
Q
)

18 
two_dim_block_cy˛ic_t
 *
twodQ
 = (two_dim_block_cy˛ic_à*)
Q
;

19 
n‹mQ
 = 999999.0;

20 
ªsu…
;

21 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

22 
öfo_‹tho
;

23 
M
 = 
Q
->
m
;

24 
N
 = 
Q
->
n
;

25 
möMN
 = 
	`mö
(
M
, 
N
);

27 
	`PASTE_CODE_ALLOCATE_MATRIX
(
Id
, 1,

28 
two_dim_block_cy˛ic
, (&
Id
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

29 
Q
->
su≥r
.
nodes
, 
twodQ
->
grid
.
ønk
,

30 
Q
->
mb
, Q->
nb
, 
möMN
, minMN, 0, 0,

31 
möMN
, möMN, 
twodQ
->
grid
.
krows
,ÅwodQ->grid.
kcﬁs
,ÅwodQ->grid.
rows
));

33 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
Id
);

36 i‡–
M
 >
N
 ) {

37 
	`d∂asma_zhîk
–
∑r£c
, 
d∂asmaUµî
, 
d∂asmaC⁄jTøns
,

38 1.0, 
Q
, -1.0, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
 );

40 
	`d∂asma_zhîk
–
∑r£c
, 
d∂asmaUµî
, 
d∂asmaNoTøns
,

41 1.0, 
Q
, -1.0, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
 );

44 
n‹mQ
 = 
	`d∂asma_zœnhe
(
∑r£c
, 
d∂asmaInfN‹m
, 
d∂asmaUµî
, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
);

46 
ªsu…
 = 
n‹mQ
 / (
möMN
 * 
ïs
);

47 i‡–
loud
 ) {

48 
	`¥ötf
("============\n");

49 
	`¥ötf
("CheckingÅhe orthogonality of Q \n");

50 
	`¥ötf
("||Id-Q'*Q||_oÿ/ (N*ïsË%ê\n", 
ªsu…
);

53 i‡–
	`i¢™
(
ªsu…
Ë|| 
	`isöf
(result) || (result > 60.0) ) {

54 i‡–
loud
 ) 
	`¥ötf
("-- Orthogonality is suspicious ! \n");

55 
öfo_‹tho
=1;

58 i‡–
loud
 ) 
	`¥ötf
("-- Orthogonality is CORRECT ! \n");

59 
öfo_‹tho
=0;

62 
	`∑r£c_d©a_‰ì
(
Id
.
m©
);

63 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
Id
);

64  
öfo_‹tho
;

65 
	}
}

67 
	$maö
(
¨gc
, ** 
¨gv
)

69 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

70 
d∂asma_qπªe_t
 
qπªe
;

71 
Cn‹m
, 
Rn‹m
, 
ªsu…
;

72 
thªshﬁd
 = 10.;

73 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

74 *
ªsu…°r
;

75 
ù¨am
[
IPARAM_SIZEOF
];

76 
ªt
 = 0;

77 
s
, 
t
;

80 
	`ù¨am_deÁu…_Á˘o
(
ù¨am
);

81 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 48, 192, 192);

82 
ù¨am
[
IPARAM_KP
] = 1;

83 
ù¨am
[
IPARAM_KQ
] = 1;

84 
ù¨am
[
IPARAM_LDA
] = -'m';

87 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

88 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

90 i‡(
N
 < 
K
) {

91 
	`¥ötf
("WARNING: N must be greater orÉqualÅo K (Set N = K)\n");

92 
N
 = 
K
;

93 
NT
 = 
KT
;

96 
LDA
 = 
	`max
(
N
, LDA);

99 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

100 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

101 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

102 
K
, 
N
, 
KP
, 
KQ
, 
P
));

103 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcTS
, 1,

104 
two_dim_block_cy˛ic
, (&
dcTS
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

105 
nodes
, 
ønk
, 
IB
, 
NB
, 
MT
*IB, 
N
, 0, 0,

106 
KT
*
IB
, 
N
, 
KP
, 
KQ
, 
P
));

107 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcTT
, 1,

108 
two_dim_block_cy˛ic
, (&
dcTT
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

109 
nodes
, 
ønk
, 
IB
, 
NB
, 
MT
*IB, 
N
, 0, 0,

110 
KT
*
IB
, 
N
, 
KP
, 
KQ
, 
P
));

111 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcQ
, 1,

112 
two_dim_block_cy˛ic
, (&
dcQ
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

113 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
N
, 0, 0,

114 
N
, N, 
KP
, 
KQ
, 
P
));

117 if(
loud
 > 3Ë
	`¥ötf
("+++ Generate matrices ... ");

118 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 3872);

119 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 0., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTS
);

120 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 0., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTT
);

121 if(
loud
 > 3Ë
	`¥ötf
("Done\n");

123 
	`d∂asma_sy°ﬁic_öô
–&
qπªe
,

124 
d∂asmaC⁄jTøns
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

125 
ù¨am
[
IPARAM_P
],

126 
ù¨am
[
IPARAM_Q
] );

128 if(
loud
 > 3Ë
	`¥ötf
("+++ Factorize A ... ");

129 
	`d∂asma_zgñqf_∑øm
–
∑r£c
, &
qπªe
,

130 (
∑r£c_tûed_m©rix_dc_t
*)&
dcA
,

131 (
∑r£c_tûed_m©rix_dc_t
*)&
dcTS
,

132 (
∑r£c_tûed_m©rix_dc_t
*)&
dcTT
 );

133 if(
loud
 > 3Ë
	`¥ötf
("Done\n");

135 if(
loud
 > 3Ë
	`¥ötf
("+++ Generate Q ... ");

136 
	`d∂asma_zunglq_∑øm
–
∑r£c
, &
qπªe
,

137 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

138 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTS
,

139 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTT
,

140 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
);

141 if(
loud
 > 3Ë
	`¥ötf
("Done\n");

143 
ªt
 |
	`check_‹thog⁄Æôy
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

144 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
);

145 i‡(
ªt
)

146  
ªt
;

148 
s
=0; s<2; s++) {

150 
Cm
 = (
side
[
s
] =
d∂asmaLe·
Ë? 
N
 : 
M
;

151 
Cn
 = (
side
[
s
] =
d∂asmaLe·
Ë? 
M
 : 
N
;

152 
LDC
 = 
	`max
(LDC, 
Cm
);

154 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC
, 1,

155 
two_dim_block_cy˛ic
, (&
dcC
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

156 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDC
, 
Cn
, 0, 0,

157 
Cm
, 
Cn
, 
KP
, 
KQ
, 
P
));

158 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC0
, 1,

159 
two_dim_block_cy˛ic
, (&
dcC0
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

160 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDC
, 
Cn
, 0, 0,

161 
Cm
, 
Cn
, 
KP
, 
KQ
, 
P
));

163 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC0
, 2354);

164 
Cn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaO√N‹m
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC0
);

166 i‡(
Cn‹m
 == 0.)

167 
Cn‹m
 = 1.;

169 
t
=0;Å<2;Å++) {

170 #i‡
	`deföed
(
PRECISION_z
Ë|| deföed(
PRECISION_c
)

171 i‡(
t
==1)Å++;

174 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

175 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC0
,

176 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

178 
	`d∂asma_zunmlq_∑øm
–
∑r£c
,

179 
side
[
s
], 
å™s
[
t
], &
qπªe
,

180 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

181 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTS
,

182 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTT
,

183 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

185 i‡(
side
[
s
] =
d∂asmaLe·
 ) {

186 
	`d∂asma_zgemm
–
∑r£c
, 
å™s
[
t
], 
d∂asmaNoTøns
,

187 -1., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
,

188 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC0
,

189 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

191 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaNoTøns
, 
å™s
[
t
],

192 -1., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC0
,

193 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
,

194 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

197 
Rn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaO√N‹m
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

198 
ªsu…
 = 
Rn‹m
 / (()
N
 * 
Cn‹m
 * 
ïs
);

200 i‡(
loud
 && 
ønk
 == 0) {

201 
	`¥ötf
("***************************************************\n");

202 i‡–
loud
 > 3 ) {

203 
	`¥ötf
( "-- ||C||_1 = %e, ||R||_1 = %e, ||R||_1 / (N * ||C||_1 *Éps) = %e\n",

204 
Cn‹m
, 
Rn‹m
, 
ªsu…
 );

207 i‡–
	`i¢™
(
Rn‹m
Ë|| 
	`isöf
(Rnorm) ||

208 
	`i¢™
(
ªsu…
Ë|| 
	`isöf
‘esu…Ë|| (ªsu… >
thªshﬁd
) ) {

209 
ªsu…°r
 = " FAILED";

210 
ªt
 |= 1;

213 
ªsu…°r
 = "... PASSED";

215 
	`¥ötf
(" ---- TESTING ZUNMLQ (%s, %s) ...%s !\n",

216 
side°r
[
s
], 
å™s°r
[
t
], 
ªsu…°r
);

220 
	`∑r£c_d©a_‰ì
(
dcC0
.
m©
);

221 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcC0
);

222 
	`∑r£c_d©a_‰ì
(
dcC
.
m©
);

223 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcC
);

226 
	`d∂asma_sy°ﬁic_föÆize
–&
qπªe
 );

228 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

229 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

230 
	`∑r£c_d©a_‰ì
(
dcTS
.
m©
);

231 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcTS
);

232 
	`∑r£c_d©a_‰ì
(
dcTT
.
m©
);

233 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcTT
);

234 
	`∑r£c_d©a_‰ì
(
dcQ
.
m©
);

235 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcQ
);

237 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

239  
ªt
;

240 
	}
}

	@testing_zunmqr.c

10 
	~"comm⁄.h
"

11 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

13 
	$maö
(
¨gc
, ** 
¨gv
)

15 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

16 
Cn‹m
, 
Rn‹m
, 
ªsu…
;

17 
thªshﬁd
 = 10.;

18 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

19 *
ªsu…°r
;

20 
ù¨am
[
IPARAM_SIZEOF
];

21 
ªt
 = 0;

22 
s
, 
t
;

25 
	`ù¨am_deÁu…_Á˘o
(
ù¨am
);

26 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 48, 192, 192);

27 
ù¨am
[
IPARAM_KP
] = 4;

28 
ù¨am
[
IPARAM_KQ
] = 1;

29 
ù¨am
[
IPARAM_LDA
] = -'m';

32 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

33 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

35 i‡(
M
 < 
K
) {

36 
	`¥ötf
("WARNING: M must be greater orÉqualÅo K (Set M = K)\n");

37 
M
 = 
K
;

38 
MT
 = 
KT
;

41 
LDA
 = 
	`max
(
M
, LDA);

44 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

45 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

46 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
K
, 0, 0,

47 
M
, 
K
, 
KP
, 
KQ
, 
P
));

48 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcT
, 1,

49 
two_dim_block_cy˛ic
, (&
dcT
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

50 
nodes
, 
ønk
, 
IB
, 
NB
, 
MT
*IB, 
K
, 0, 0,

51 
MT
*
IB
, 
K
, 
KP
, 
KQ
, 
P
));

52 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcQ
, 1,

53 
two_dim_block_cy˛ic
, (&
dcQ
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

54 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
M
, 0, 0,

55 
M
, M, 
KP
, 
KQ
, 
P
));

58 if(
loud
 > 3Ë
	`¥ötf
("+++ Generate matrices ... ");

59 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 3872);

60 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 0., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcT
);

61 if(
loud
 > 3Ë
	`¥ötf
("Done\n");

63 if(
loud
 > 3Ë
	`¥ötf
("+++ Factorize A ... ");

64 
	`d∂asma_zgeqrf
(
∑r£c
,

65 (
∑r£c_tûed_m©rix_dc_t
*)&
dcA
,

66 (
∑r£c_tûed_m©rix_dc_t
*)&
dcT
);

67 if(
loud
 > 3Ë
	`¥ötf
("Done\n");

69 if(
loud
 > 3Ë
	`¥ötf
("+++ Generate Q ... ");

70 
	`d∂asma_zungqr
–
∑r£c
,

71 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

72 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcT
,

73 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
);

74 if(
loud
 > 3Ë
	`¥ötf
("Done\n");

76 
s
=0; s<2; s++) {

78 
Cm
 = (
side
[
s
] =
d∂asmaLe·
Ë? 
M
 : 
N
;

79 
Cn
 = (
side
[
s
] =
d∂asmaLe·
Ë? 
N
 : 
M
;

80 
LDC
 = 
	`max
(LDC, 
Cm
);

82 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC
, 1,

83 
two_dim_block_cy˛ic
, (&
dcC
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

84 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDC
, 
Cn
, 0, 0,

85 
Cm
, 
Cn
, 
KP
, 
KQ
, 
P
));

86 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC0
, 1,

87 
two_dim_block_cy˛ic
, (&
dcC0
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

88 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDC
, 
Cn
, 0, 0,

89 
Cm
, 
Cn
, 
KP
, 
KQ
, 
P
));

91 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC0
, 2354);

92 
Cn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaO√N‹m
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC0
);

94 i‡(
Cn‹m
 == 0.)

95 
Cn‹m
 = 1.;

97 
t
=0;Å<2;Å++) {

98 #i‡
	`deföed
(
PRECISION_z
Ë|| deföed(
PRECISION_c
)

99 i‡(
t
==1)Å++;

102 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

103 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC0
,

104 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

106 
	`d∂asma_zunmqr
–
∑r£c
, 
side
[
s
], 
å™s
[
t
],

107 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

108 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcT
,

109 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

111 i‡(
side
[
s
] =
d∂asmaLe·
 ) {

112 
	`d∂asma_zgemm
–
∑r£c
, 
å™s
[
t
], 
d∂asmaNoTøns
,

113 -1., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
,

114 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC0
,

115 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

117 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaNoTøns
, 
å™s
[
t
],

118 -1., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC0
,

119 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
,

120 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

123 
Rn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaO√N‹m
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

124 
ªsu…
 = 
Rn‹m
 / (()
M
 * 
Cn‹m
 * 
ïs
);

126 i‡(
loud
 && 
ønk
 == 0) {

127 
	`¥ötf
("***************************************************\n");

128 i‡–
loud
 > 3 ) {

129 
	`¥ötf
( "-- ||C||_1 = %e, ||R||_1 = %e, ||R||_1 / (M * ||C||_1 *Éps) = %e\n",

130 
Cn‹m
, 
Rn‹m
, 
ªsu…
 );

133 i‡–
	`i¢™
(
Rn‹m
Ë|| 
	`isöf
(Rnorm) ||

134 
	`i¢™
(
ªsu…
Ë|| 
	`isöf
‘esu…Ë|| (ªsu… >
thªshﬁd
) ) {

135 
ªsu…°r
 = " FAILED";

136 
ªt
 |= 1;

139 
ªsu…°r
 = "... PASSED";

141 
	`¥ötf
(" ---- TESTING ZUNMQR (%s, %s) ...%s !\n",

142 
side°r
[
s
], 
å™s°r
[
t
], 
ªsu…°r
);

146 
	`∑r£c_d©a_‰ì
(
dcC0
.
m©
);

147 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcC0
);

148 
	`∑r£c_d©a_‰ì
(
dcC
.
m©
);

149 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcC
);

152 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

153 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

154 
	`∑r£c_d©a_‰ì
(
dcT
.
m©
);

155 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcT
);

156 
	`∑r£c_d©a_‰ì
(
dcQ
.
m©
);

157 
	`∑r£c_tûed_m©rix_dc_de°roy
–(
∑r£c_tûed_m©rix_dc_t
*)&
dcQ
);

159 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

161  
ªt
;

162 
	}
}

	@testing_zunmqr_hqr.c

10 
	~"comm⁄.h
"

11 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

16 
	$check_‹thog⁄Æôy
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
, 
∑r£c_tûed_m©rix_dc_t
 *
Q
)

18 
two_dim_block_cy˛ic_t
 *
twodQ
 = (two_dim_block_cy˛ic_à*)
Q
;

19 
n‹mQ
 = 999999.0;

20 
ªsu…
;

21 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

22 
öfo_‹tho
;

23 
M
 = 
Q
->
m
;

24 
N
 = 
Q
->
n
;

25 
möMN
 = 
	`mö
(
M
, 
N
);

27 
	`PASTE_CODE_ALLOCATE_MATRIX
(
Id
, 1,

28 
two_dim_block_cy˛ic
, (&
Id
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

29 
Q
->
su≥r
.
nodes
, 
twodQ
->
grid
.
ønk
,

30 
Q
->
mb
, Q->
nb
, 
möMN
, minMN, 0, 0,

31 
möMN
, möMN, 
twodQ
->
grid
.
krows
,ÅwodQ->grid.
kcﬁs
,ÅwodQ->grid.
rows
));

33 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
Id
);

36 i‡–
M
 >
N
 ) {

37 
	`d∂asma_zhîk
–
∑r£c
, 
d∂asmaUµî
, 
d∂asmaC⁄jTøns
,

38 1.0, 
Q
, -1.0, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
 );

40 
	`d∂asma_zhîk
–
∑r£c
, 
d∂asmaUµî
, 
d∂asmaNoTøns
,

41 1.0, 
Q
, -1.0, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
 );

44 
n‹mQ
 = 
	`d∂asma_zœnhe
(
∑r£c
, 
d∂asmaInfN‹m
, 
d∂asmaUµî
, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
);

46 
ªsu…
 = 
n‹mQ
 / (
möMN
 * 
ïs
);

47 i‡–
loud
 ) {

48 
	`¥ötf
("============\n");

49 
	`¥ötf
("CheckingÅhe orthogonality of Q \n");

50 
	`¥ötf
("||Id-Q'*Q||_oÿ/ (N*ïsË%ê\n", 
ªsu…
);

53 i‡–
	`i¢™
(
ªsu…
Ë|| 
	`isöf
(result) || (result > 60.0) ) {

54 i‡–
loud
 ) 
	`¥ötf
("-- Orthogonality is suspicious ! \n");

55 
öfo_‹tho
=1;

58 i‡–
loud
 ) 
	`¥ötf
("-- Orthogonality is CORRECT ! \n");

59 
öfo_‹tho
=0;

62 
	`∑r£c_d©a_‰ì
(
Id
.
m©
);

63 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
Id
);

64  
öfo_‹tho
;

65 
	}
}

67 
	$maö
(
¨gc
, ** 
¨gv
)

69 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

70 
d∂asma_qπªe_t
 
qπªe
;

71 
Cn‹m
, 
Rn‹m
, 
ªsu…
;

72 
thªshﬁd
 = 10.;

73 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

74 *
ªsu…°r
;

75 
ù¨am
[
IPARAM_SIZEOF
];

76 
ªt
 = 0;

77 
s
, 
t
;

80 
	`ù¨am_deÁu…_Á˘o
(
ù¨am
);

81 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 48, 192, 192);

82 
ù¨am
[
IPARAM_KP
] = 1;

83 
ù¨am
[
IPARAM_KQ
] = 1;

84 
ù¨am
[
IPARAM_LDA
] = -'m';

87 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

88 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

90 i‡(
M
 < 
K
) {

91 
	`¥ötf
("WARNING: M must be greater orÉqualÅo K (Set M = K)\n");

92 
M
 = 
K
;

93 
MT
 = 
KT
;

96 
LDA
 = 
	`max
(
M
, LDA);

99 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

100 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

101 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
K
, 0, 0,

102 
M
, 
K
, 
KP
, 
KQ
, 
P
));

103 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcTS
, 1,

104 
two_dim_block_cy˛ic
, (&
dcTS
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

105 
nodes
, 
ønk
, 
IB
, 
NB
, 
MT
*IB, 
K
, 0, 0,

106 
MT
*
IB
, 
K
, 
KP
, 
KQ
, 
P
));

107 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcTT
, 1,

108 
two_dim_block_cy˛ic
, (&
dcTT
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

109 
nodes
, 
ønk
, 
IB
, 
NB
, 
MT
*IB, 
K
, 0, 0,

110 
MT
*
IB
, 
K
, 
KP
, 
KQ
, 
P
));

111 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcQ
, 1,

112 
two_dim_block_cy˛ic
, (&
dcQ
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

113 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
M
, 0, 0,

114 
M
, M, 
KP
, 
KQ
, 
P
));

117 if(
loud
 > 3Ë
	`¥ötf
("+++ Generate matrices ... ");

118 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 3872);

119 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 0., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTS
);

120 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 0., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTT
);

121 if(
loud
 > 3Ë
	`¥ötf
("Done\n");

123 
	`d∂asma_hqr_öô
–&
qπªe
,

124 
d∂asmaNoTøns
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

125 
ù¨am
[
IPARAM_LOWLVL_TREE
], i∑øm[
IPARAM_HIGHLVL_TREE
],

126 
ù¨am
[
IPARAM_QR_TS_SZE
], i∑øm[
IPARAM_QR_HLVL_SZE
],

127 
ù¨am
[
IPARAM_QR_DOMINO
], i∑øm[
IPARAM_QR_TSRR
] );

129 if(
loud
 > 3Ë
	`¥ötf
("+++ Factorize A ... ");

130 
	`d∂asma_zgeqrf_∑øm
–
∑r£c
, &
qπªe
,

131 (
∑r£c_tûed_m©rix_dc_t
*)&
dcA
,

132 (
∑r£c_tûed_m©rix_dc_t
*)&
dcTS
,

133 (
∑r£c_tûed_m©rix_dc_t
*)&
dcTT
 );

134 if(
loud
 > 3Ë
	`¥ötf
("Done\n");

136 if(
loud
 > 3Ë
	`¥ötf
("+++ Generate Q ... ");

137 
	`d∂asma_zungqr_∑øm
–
∑r£c
, &
qπªe
,

138 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

139 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTS
,

140 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTT
,

141 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
);

142 if(
loud
 > 3Ë
	`¥ötf
("Done\n");

144 
ªt
 |
	`check_‹thog⁄Æôy
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

145 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
);

146 i‡(
ªt
)

147  
ªt
;

149 
s
=0; s<2; s++) {

151 
Cm
 = (
side
[
s
] =
d∂asmaLe·
Ë? 
M
 : 
N
;

152 
Cn
 = (
side
[
s
] =
d∂asmaLe·
Ë? 
N
 : 
M
;

153 
LDC
 = 
	`max
(LDC, 
Cm
);

155 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC
, 1,

156 
two_dim_block_cy˛ic
, (&
dcC
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

157 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDC
, 
Cn
, 0, 0,

158 
Cm
, 
Cn
, 
KP
, 
KQ
, 
P
));

159 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC0
, 1,

160 
two_dim_block_cy˛ic
, (&
dcC0
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

161 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDC
, 
Cn
, 0, 0,

162 
Cm
, 
Cn
, 
KP
, 
KQ
, 
P
));

164 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC0
, 2354);

165 
Cn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaO√N‹m
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC0
);

167 i‡(
Cn‹m
 == 0.)

168 
Cn‹m
 = 1.;

170 
t
=0;Å<2;Å++) {

171 #i‡
	`deföed
(
PRECISION_z
Ë|| deföed(
PRECISION_c
)

172 i‡(
t
==1)Å++;

175 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

176 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC0
,

177 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

179 
	`d∂asma_zunmqr_∑øm
–
∑r£c
,

180 
side
[
s
], 
å™s
[
t
], &
qπªe
,

181 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

182 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTS
,

183 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTT
,

184 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

186 i‡(
side
[
s
] =
d∂asmaLe·
 ) {

187 
	`d∂asma_zgemm
–
∑r£c
, 
å™s
[
t
], 
d∂asmaNoTøns
,

188 -1., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
,

189 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC0
,

190 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

192 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaNoTøns
, 
å™s
[
t
],

193 -1., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC0
,

194 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
,

195 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

198 
Rn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaO√N‹m
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

199 
ªsu…
 = 
Rn‹m
 / (()
M
 * 
Cn‹m
 * 
ïs
);

201 i‡(
loud
 && 
ønk
 == 0) {

202 
	`¥ötf
("***************************************************\n");

203 i‡–
loud
 > 3 ) {

204 
	`¥ötf
( "-- ||C||_1 = %e, ||R||_1 = %e, ||R||_1 / (M * ||C||_1 *Éps) = %e\n",

205 
Cn‹m
, 
Rn‹m
, 
ªsu…
 );

208 i‡–
	`i¢™
(
Rn‹m
Ë|| 
	`isöf
(Rnorm) ||

209 
	`i¢™
(
ªsu…
Ë|| 
	`isöf
‘esu…Ë|| (ªsu… >
thªshﬁd
) ) {

210 
ªsu…°r
 = " FAILED";

211 
ªt
 |= 1;

214 
ªsu…°r
 = "... PASSED";

216 
	`¥ötf
(" ---- TESTING ZUNMQR (%s, %s) ...%s !\n",

217 
side°r
[
s
], 
å™s°r
[
t
], 
ªsu…°r
);

221 
	`∑r£c_d©a_‰ì
(
dcC0
.
m©
);

222 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcC0
);

223 
	`∑r£c_d©a_‰ì
(
dcC
.
m©
);

224 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcC
);

227 
	`d∂asma_hqr_föÆize
–&
qπªe
 );

229 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

230 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

231 
	`∑r£c_d©a_‰ì
(
dcTS
.
m©
);

232 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcTS
);

233 
	`∑r£c_d©a_‰ì
(
dcTT
.
m©
);

234 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcTT
);

235 
	`∑r£c_d©a_‰ì
(
dcQ
.
m©
);

236 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcQ
);

238 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

240  
ªt
;

241 
	}
}

	@testing_zunmqr_systolic.c

10 
	~"comm⁄.h
"

11 
	~"∑r£c/d©a_di°/m©rix/two_dim_ª˘™gÀ_cy˛ic.h
"

16 
	$check_‹thog⁄Æôy
(
∑r£c_c⁄ãxt_t
 *
∑r£c
, 
loud
, 
∑r£c_tûed_m©rix_dc_t
 *
Q
)

18 
two_dim_block_cy˛ic_t
 *
twodQ
 = (two_dim_block_cy˛ic_à*)
Q
;

19 
n‹mQ
 = 999999.0;

20 
ªsu…
;

21 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

22 
öfo_‹tho
;

23 
M
 = 
Q
->
m
;

24 
N
 = 
Q
->
n
;

25 
möMN
 = 
	`mö
(
M
, 
N
);

27 
	`PASTE_CODE_ALLOCATE_MATRIX
(
Id
, 1,

28 
two_dim_block_cy˛ic
, (&
Id
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

29 
Q
->
su≥r
.
nodes
, 
twodQ
->
grid
.
ønk
,

30 
Q
->
mb
, Q->
nb
, 
möMN
, minMN, 0, 0,

31 
möMN
, möMN, 
twodQ
->
grid
.
krows
,ÅwodQ->grid.
kcﬁs
,ÅwodQ->grid.
rows
));

33 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
Id
);

36 i‡–
M
 >
N
 ) {

37 
	`d∂asma_zhîk
–
∑r£c
, 
d∂asmaUµî
, 
d∂asmaC⁄jTøns
,

38 1.0, 
Q
, -1.0, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
 );

40 
	`d∂asma_zhîk
–
∑r£c
, 
d∂asmaUµî
, 
d∂asmaNoTøns
,

41 1.0, 
Q
, -1.0, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
 );

44 
n‹mQ
 = 
	`d∂asma_zœnhe
(
∑r£c
, 
d∂asmaInfN‹m
, 
d∂asmaUµî
, (
∑r£c_tûed_m©rix_dc_t
*)&
Id
);

46 
ªsu…
 = 
n‹mQ
 / (
möMN
 * 
ïs
);

47 i‡–
loud
 ) {

48 
	`¥ötf
("============\n");

49 
	`¥ötf
("CheckingÅhe orthogonality of Q \n");

50 
	`¥ötf
("||Id-Q'*Q||_oÿ/ (N*ïsË%ê\n", 
ªsu…
);

53 i‡–
	`i¢™
(
ªsu…
Ë|| 
	`isöf
(result) || (result > 60.0) ) {

54 i‡–
loud
 ) 
	`¥ötf
("-- Orthogonality is suspicious ! \n");

55 
öfo_‹tho
=1;

58 i‡–
loud
 ) 
	`¥ötf
("-- Orthogonality is CORRECT ! \n");

59 
öfo_‹tho
=0;

62 
	`∑r£c_d©a_‰ì
(
Id
.
m©
);

63 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
Id
);

64  
öfo_‹tho
;

65 
	}
}

67 
	$maö
(
¨gc
, ** 
¨gv
)

69 
∑r£c_c⁄ãxt_t
* 
∑r£c
;

70 
d∂asma_qπªe_t
 
qπªe
;

71 
Cn‹m
, 
Rn‹m
, 
ªsu…
;

72 
thªshﬁd
 = 10.;

73 
ïs
 = 
	`LAPACKE_dœmch_w‹k
('e');

74 *
ªsu…°r
;

75 
ù¨am
[
IPARAM_SIZEOF
];

76 
ªt
 = 0;

77 
s
, 
t
;

80 
	`ù¨am_deÁu…_Á˘o
(
ù¨am
);

81 
	`ù¨am_deÁu…_ibnbmb
(
ù¨am
, 48, 192, 192);

82 
ù¨am
[
IPARAM_KP
] = 1;

83 
ù¨am
[
IPARAM_KQ
] = 1;

84 
ù¨am
[
IPARAM_LDA
] = -'m';

87 
∑r£c
 = 
	`£tup_∑r£c
(
¨gc
, 
¨gv
, 
ù¨am
);

88 
	`PASTE_CODE_IPARAM_LOCALS
(
ù¨am
);

90 i‡(
M
 < 
K
) {

91 
	`¥ötf
("WARNING: M must be greater orÉqualÅo K (Set M = K)\n");

92 
M
 = 
K
;

93 
MT
 = 
KT
;

96 
LDA
 = 
	`max
(
M
, LDA);

99 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcA
, 1,

100 
two_dim_block_cy˛ic
, (&
dcA
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

101 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
K
, 0, 0,

102 
M
, 
K
, 
KP
, 
KQ
, 
P
));

103 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcTS
, 1,

104 
two_dim_block_cy˛ic
, (&
dcTS
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

105 
nodes
, 
ønk
, 
IB
, 
NB
, 
MT
*IB, 
K
, 0, 0,

106 
MT
*
IB
, 
K
, 
KP
, 
KQ
, 
P
));

107 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcTT
, 1,

108 
two_dim_block_cy˛ic
, (&
dcTT
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

109 
nodes
, 
ønk
, 
IB
, 
NB
, 
MT
*IB, 
K
, 0, 0,

110 
MT
*
IB
, 
K
, 
KP
, 
KQ
, 
P
));

111 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcQ
, 1,

112 
two_dim_block_cy˛ic
, (&
dcQ
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

113 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDA
, 
M
, 0, 0,

114 
M
, M, 
KP
, 
KQ
, 
P
));

117 if(
loud
 > 3Ë
	`¥ötf
("+++ Generate matrices ... ");

118 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
, 3872);

119 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 0., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTS
);

120 
	`d∂asma_zœ£t
–
∑r£c
, 
d∂asmaUµîLowî
, 0., 0., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTT
);

121 if(
loud
 > 3Ë
	`¥ötf
("Done\n");

123 
	`d∂asma_sy°ﬁic_öô
–&
qπªe
,

124 
d∂asmaNoTøns
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

125 
ù¨am
[
IPARAM_P
],

126 
ù¨am
[
IPARAM_Q
] );

128 if(
loud
 > 3Ë
	`¥ötf
("+++ Factorize A ... ");

129 
	`d∂asma_zgeqrf_∑øm
–
∑r£c
, &
qπªe
,

130 (
∑r£c_tûed_m©rix_dc_t
*)&
dcA
,

131 (
∑r£c_tûed_m©rix_dc_t
*)&
dcTS
,

132 (
∑r£c_tûed_m©rix_dc_t
*)&
dcTT
 );

133 if(
loud
 > 3Ë
	`¥ötf
("Done\n");

135 if(
loud
 > 3Ë
	`¥ötf
("+++ Generate Q ... ");

136 
	`d∂asma_zungqr_∑øm
–
∑r£c
, &
qπªe
,

137 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

138 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTS
,

139 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTT
,

140 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
);

141 if(
loud
 > 3Ë
	`¥ötf
("Done\n");

143 
ªt
 |
	`check_‹thog⁄Æôy
–
∑r£c
, (
ønk
 =0Ë? 
loud
 : 0,

144 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
);

145 i‡(
ªt
)

146  
ªt
;

148 
s
=0; s<2; s++) {

150 
Cm
 = (
side
[
s
] =
d∂asmaLe·
Ë? 
M
 : 
N
;

151 
Cn
 = (
side
[
s
] =
d∂asmaLe·
Ë? 
N
 : 
M
;

152 
LDC
 = 
	`max
(LDC, 
Cm
);

154 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC
, 1,

155 
two_dim_block_cy˛ic
, (&
dcC
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

156 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDC
, 
Cn
, 0, 0,

157 
Cm
, 
Cn
, 
KP
, 
KQ
, 
P
));

158 
	`PASTE_CODE_ALLOCATE_MATRIX
(
dcC0
, 1,

159 
two_dim_block_cy˛ic
, (&
dcC0
, 
m©rix_Com∂exDoubÀ
, 
m©rix_Tûe
,

160 
nodes
, 
ønk
, 
MB
, 
NB
, 
LDC
, 
Cn
, 0, 0,

161 
Cm
, 
Cn
, 
KP
, 
KQ
, 
P
));

163 
	`d∂asma_z∂∫t
–
∑r£c
, 0, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC0
, 2354);

164 
Cn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaO√N‹m
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC0
);

166 i‡(
Cn‹m
 == 0.)

167 
Cn‹m
 = 1.;

169 
t
=0;Å<2;Å++) {

170 #i‡
	`deföed
(
PRECISION_z
Ë|| deföed(
PRECISION_c
)

171 i‡(
t
==1)Å++;

174 
	`d∂asma_zœ˝y
–
∑r£c
, 
d∂asmaUµîLowî
,

175 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC0
,

176 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

178 
	`d∂asma_zunmqr_∑øm
–
∑r£c
,

179 
side
[
s
], 
å™s
[
t
], &
qπªe
,

180 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcA
,

181 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTS
,

182 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcTT
,

183 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

185 i‡(
side
[
s
] =
d∂asmaLe·
 ) {

186 
	`d∂asma_zgemm
–
∑r£c
, 
å™s
[
t
], 
d∂asmaNoTøns
,

187 -1., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
,

188 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC0
,

189 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

191 
	`d∂asma_zgemm
–
∑r£c
, 
d∂asmaNoTøns
, 
å™s
[
t
],

192 -1., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC0
,

193 (
∑r£c_tûed_m©rix_dc_t
 *)&
dcQ
,

194 1., (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

197 
Rn‹m
 = 
	`d∂asma_zœnge
(
∑r£c
, 
d∂asmaO√N‹m
, (
∑r£c_tûed_m©rix_dc_t
 *)&
dcC
);

198 
ªsu…
 = 
Rn‹m
 / (()
M
 * 
Cn‹m
 * 
ïs
);

200 i‡(
loud
 && 
ønk
 == 0) {

201 
	`¥ötf
("***************************************************\n");

202 i‡–
loud
 > 3 ) {

203 
	`¥ötf
( "-- ||C||_1 = %e, ||R||_1 = %e, ||R||_1 / (M * ||C||_1 *Éps) = %e\n",

204 
Cn‹m
, 
Rn‹m
, 
ªsu…
 );

207 i‡–
	`i¢™
(
Rn‹m
Ë|| 
	`isöf
(Rnorm) ||

208 
	`i¢™
(
ªsu…
Ë|| 
	`isöf
‘esu…Ë|| (ªsu… >
thªshﬁd
) ) {

209 
ªsu…°r
 = " FAILED";

210 
ªt
 |= 1;

213 
ªsu…°r
 = "... PASSED";

215 
	`¥ötf
(" ---- TESTING ZUNMQR (%s, %s) ...%s !\n",

216 
side°r
[
s
], 
å™s°r
[
t
], 
ªsu…°r
);

220 
	`∑r£c_d©a_‰ì
(
dcC0
.
m©
);

221 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcC0
);

222 
	`∑r£c_d©a_‰ì
(
dcC
.
m©
);

223 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcC
);

226 
	`d∂asma_sy°ﬁic_föÆize
–&
qπªe
 );

228 
	`∑r£c_d©a_‰ì
(
dcA
.
m©
);

229 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcA
);

230 
	`∑r£c_d©a_‰ì
(
dcTS
.
m©
);

231 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcTS
);

232 
	`∑r£c_d©a_‰ì
(
dcTT
.
m©
);

233 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcTT
);

234 
	`∑r£c_d©a_‰ì
(
dcQ
.
m©
);

235 
	`∑r£c_tûed_m©rix_dc_de°roy
((
∑r£c_tûed_m©rix_dc_t
*)&
dcQ
);

237 
	`˛ónup_∑r£c
(
∑r£c
, 
ù¨am
);

239  
ªt
;

240 
	}
}

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


22 
	#_GETOPT_H
 1

	)

24 
	~<„©uªs.h
>

31 #i‚de‡
__gë›t_¨gv_c⁄°


32 
	#__gë›t_¨gv_c⁄°
 c⁄°

	)

35 
	~<bôs/gë›t_c‹e.h
>

36 
	~<bôs/gë›t_ext.h
>

	@/usr/include/limits.h

22 #i‚de‡
_LIBC_LIMITS_H_


23 
	#_LIBC_LIMITS_H_
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

32 
	#MB_LEN_MAX
 16

	)

37 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

42 #i‚de‡
_LIMITS_H


43 
	#_LIMITS_H
 1

	)

45 
	~<bôs/w‹dsize.h
>

54 
	#CHAR_BIT
 8

	)

57 
	#SCHAR_MIN
 (-128)

	)

58 
	#SCHAR_MAX
 127

	)

61 
	#UCHAR_MAX
 255

	)

64 #ifde‡
__CHAR_UNSIGNED__


65 
	#CHAR_MIN
 0

	)

66 
	#CHAR_MAX
 
UCHAR_MAX


	)

68 
	#CHAR_MIN
 
SCHAR_MIN


	)

69 
	#CHAR_MAX
 
SCHAR_MAX


	)

73 
	#SHRT_MIN
 (-32768)

	)

74 
	#SHRT_MAX
 32767

	)

77 
	#USHRT_MAX
 65535

	)

80 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

81 
	#INT_MAX
 2147483647

	)

84 
	#UINT_MAX
 4294967295U

	)

87 #i‡
__WORDSIZE
 == 64

88 
	#LONG_MAX
 9223372036854775807L

	)

90 
	#LONG_MAX
 2147483647L

	)

92 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

95 #i‡
__WORDSIZE
 == 64

96 
	#ULONG_MAX
 18446744073709551615UL

	)

98 
	#ULONG_MAX
 4294967295UL

	)

101 #ifde‡
__USE_ISOC99


104 
	#LLONG_MAX
 9223372036854775807LL

	)

105 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

108 
	#ULLONG_MAX
 18446744073709551615ULL

	)

122 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


124 #ö˛ude_√xà<
limôs
.
h
>

130 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


131 #i‚de‡
LLONG_MIN


132 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

134 #i‚de‡
LLONG_MAX


135 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

137 #i‚de‡
ULLONG_MAX


138 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

145 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

146 #i‚de‡
CHAR_WIDTH


147 
	#CHAR_WIDTH
 8

	)

149 #i‚de‡
SCHAR_WIDTH


150 
	#SCHAR_WIDTH
 8

	)

152 #i‚de‡
UCHAR_WIDTH


153 
	#UCHAR_WIDTH
 8

	)

155 #i‚de‡
SHRT_WIDTH


156 
	#SHRT_WIDTH
 16

	)

158 #i‚de‡
USHRT_WIDTH


159 
	#USHRT_WIDTH
 16

	)

161 #i‚de‡
INT_WIDTH


162 
	#INT_WIDTH
 32

	)

164 #i‚de‡
UINT_WIDTH


165 
	#UINT_WIDTH
 32

	)

167 #i‚de‡
LONG_WIDTH


168 
	#LONG_WIDTH
 
__WORDSIZE


	)

170 #i‚de‡
ULONG_WIDTH


171 
	#ULONG_WIDTH
 
__WORDSIZE


	)

173 #i‚de‡
LLONG_WIDTH


174 
	#LLONG_WIDTH
 64

	)

176 #i‚de‡
ULLONG_WIDTH


177 
	#ULLONG_WIDTH
 64

	)

181 #ifdef 
__USE_POSIX


183 
	~<bôs/posix1_lim.h
>

186 #ifdef 
__USE_POSIX2


187 
	~<bôs/posix2_lim.h
>

190 #ifdef 
__USE_XOPEN


191 
	~<bôs/x›í_lim.h
>

	@/usr/include/math.h

23 #i‚def 
_MATH_H


24 
	#_MATH_H
 1

	)

26 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

27 
	~<bôs/libc-hódî-°¨t.h
>

29 #i‡
deföed
 
log
 && deföed 
__GNUC__


30 #w¨nög 
A
 
ma¸o
 
ˇŒed
 
log
 
was
 
Æªady
 
deföed
 
whí
 <
m©h
.
h
> wa†
ö˛uded
.

31 #w¨nög 
This
 
wûl
 
ˇu£
 
compû©i⁄
 
¥obÀms
.

34 
	g__BEGIN_DECLS


37 
	~<bôs/ty≥s.h
>

40 
	~<bôs/m©h-ve˘‹.h
>

43 
	~<bôs/Êﬂä.h
>

47 #i‡
__GNUC_PREREQ
 (3, 3)

48 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
 ())

	)

55 
	#HUGE_VAL
 1e10000

	)

57 #ifde‡
__USE_ISOC99


58 #i‡
__GNUC_PREREQ
 (3, 3)

59 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
 ())

	)

60 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
 ())

	)

62 
	#HUGE_VALF
 1e10000f

	)

63 
	#HUGE_VALL
 1e10000L

	)

66 #i‡
__HAVE_FLOAT16
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

67 
	#HUGE_VAL_F16
 (
	`__buûtö_huge_vÆf16
 ())

	)

69 #i‡
__HAVE_FLOAT32
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

70 
	#HUGE_VAL_F32
 (
	`__buûtö_huge_vÆf32
 ())

	)

72 #i‡
__HAVE_FLOAT64
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

73 
	#HUGE_VAL_F64
 (
	`__buûtö_huge_vÆf64
 ())

	)

75 #i‡
__HAVE_FLOAT128
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

76 
	#HUGE_VAL_F128
 (
	`__buûtö_huge_vÆf128
 ())

	)

78 #i‡
__HAVE_FLOAT32X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

79 
	#HUGE_VAL_F32X
 (
	`__buûtö_huge_vÆf32x
 ())

	)

81 #i‡
__HAVE_FLOAT64X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

82 
	#HUGE_VAL_F64X
 (
	`__buûtö_huge_vÆf64x
 ())

	)

84 #i‡
__HAVE_FLOAT128X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

85 
	#HUGE_VAL_F128X
 (
	`__buûtö_huge_vÆf128x
 ())

	)

88 #ifde‡
__USE_ISOC99


90 #i‡
__GNUC_PREREQ
 (3, 3)

91 
	#INFINITY
 (
	`__buûtö_öff
 ())

	)

93 
	#INFINITY
 
HUGE_VALF


	)

97 #i‡
__GNUC_PREREQ
 (3, 3)

98 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

103 
	#NAN
 (0.0‡/ 0.0f)

	)

107 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

109 #i‡
__GNUC_PREREQ
 (3, 3)

110 
	#SNANF
 (
	`__buûtö_«nsf
 (""))

	)

111 
	#SNAN
 (
	`__buûtö_«ns
 (""))

	)

112 
	#SNANL
 (
	`__buûtö_«n¶
 (""))

	)

115 #i‡
__HAVE_FLOAT16
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

116 
	#SNANF16
 (
	`__buûtö_«nsf16
 (""))

	)

118 #i‡
__HAVE_FLOAT32
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

119 
	#SNANF32
 (
	`__buûtö_«nsf32
 (""))

	)

121 #i‡
__HAVE_FLOAT64
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

122 
	#SNANF64
 (
	`__buûtö_«nsf64
 (""))

	)

124 #i‡
__HAVE_FLOAT128
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

125 
	#SNANF128
 (
	`__buûtö_«nsf128
 (""))

	)

127 #i‡
__HAVE_FLOAT32X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

128 
	#SNANF32X
 (
	`__buûtö_«nsf32x
 (""))

	)

130 #i‡
__HAVE_FLOAT64X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

131 
	#SNANF64X
 (
	`__buûtö_«nsf64x
 (""))

	)

133 #i‡
__HAVE_FLOAT128X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

134 
	#SNANF128X
 (
	`__buûtö_«nsf128x
 (""))

	)

138 
	~<bôs/Êt-evÆ-mëhod.h
>

140 #ifde‡
__USE_ISOC99


148 #i‡
__GLIBC_FLT_EVAL_METHOD
 == 0 || __GLIBC_FLT_EVAL_METHOD == 16

149 
	tÊﬂt_t
;

150 
	tdoubÀ_t
;

151 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 1

152 
	tÊﬂt_t
;

153 
	tdoubÀ_t
;

154 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 2

155 
	tÊﬂt_t
;

156 
	tdoubÀ_t
;

157 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 32

158 
_Flﬂt32
 
	tÊﬂt_t
;

159 
	tdoubÀ_t
;

160 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 33

161 
_Flﬂt32x
 
	tÊﬂt_t
;

162 
_Flﬂt32x
 
	tdoubÀ_t
;

163 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 64

164 
_Flﬂt64
 
	tÊﬂt_t
;

165 
_Flﬂt64
 
	tdoubÀ_t
;

166 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 65

167 
_Flﬂt64x
 
	tÊﬂt_t
;

168 
_Flﬂt64x
 
	tdoubÀ_t
;

169 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 128

170 
_Flﬂt128
 
	tÊﬂt_t
;

171 
_Flﬂt128
 
	tdoubÀ_t
;

172 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 129

173 
_Flﬂt128x
 
	tÊﬂt_t
;

174 
_Flﬂt128x
 
	tdoubÀ_t
;

190 
	~<bôs/Â-logb.h
>

191 #ifde‡
__USE_ISOC99


192 #i‡
__FP_LOGB0_IS_MIN


193 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

195 
	#FP_ILOGB0
 (-2147483647)

	)

197 #i‡
__FP_LOGBNAN_IS_MIN


198 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

200 
	#FP_ILOGBNAN
 2147483647

	)

203 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

204 #i‡
__WORDSIZE
 == 32

205 
	#__FP_LONG_MAX
 0x7fffffffL

	)

207 
	#__FP_LONG_MAX
 0x7fffffffffffffffL

	)

209 #i‡
__FP_LOGB0_IS_MIN


210 
	#FP_LLOGB0
 (-
__FP_LONG_MAX
 - 1)

	)

212 
	#FP_LLOGB0
 (-
__FP_LONG_MAX
)

	)

214 #i‡
__FP_LOGBNAN_IS_MIN


215 
	#FP_LLOGBNAN
 (-
__FP_LONG_MAX
 - 1)

	)

217 
	#FP_LLOGBNAN
 
__FP_LONG_MAX


	)

233 
	~<bôs/Â-Á°.h
>

235 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

239 
	mFP_INT_UPWARD
 =

240 
	#FP_INT_UPWARD
 0

	)

241 
FP_INT_UPWARD
,

242 
	mFP_INT_DOWNWARD
 =

243 
	#FP_INT_DOWNWARD
 1

	)

244 
FP_INT_DOWNWARD
,

245 
	mFP_INT_TOWARDZERO
 =

246 
	#FP_INT_TOWARDZERO
 2

	)

247 
FP_INT_TOWARDZERO
,

248 
	mFP_INT_TONEARESTFROMZERO
 =

249 
	#FP_INT_TONEARESTFROMZERO
 3

	)

250 
FP_INT_TONEARESTFROMZERO
,

251 
	mFP_INT_TONEAREST
 =

252 
	#FP_INT_TONEAREST
 4

	)

253 
FP_INT_TONEAREST
,

262 
	#__SIMD_DECL
(
fun˘i⁄
Ë
	`__CONCAT
 (
__DECL_SIMD_
, fun˘i⁄)

	)

264 
	#__MATHCALL_VEC
(
fun˘i⁄
, 
suffix
, 
¨gs
) \

265 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

266 
	`__MATHCALL
 (
fun˘i⁄
, 
suffix
, 
¨gs
)

	)

268 
	#__MATHDECL_VEC
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

269 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

270 
	`__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
)

	)

272 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

273 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

274 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

275 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

276 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

277 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

278 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

279 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

280 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

281 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

282 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

283 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

285 
	#_MdoubÀ_
 

	)

286 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

287 
	#__MATH_DECLARING_DOUBLE
 1

	)

288 
	#__MATH_DECLARING_FLOATN
 0

	)

289 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

290 
	~<bôs/m©hˇŒs.h
>

291 #unde‡
_MdoubÀ_


292 #unde‡
__MATH_PRECNAME


293 #unde‡
__MATH_DECLARING_DOUBLE


294 #unde‡
__MATH_DECLARING_FLOATN


296 #ifde‡
__USE_ISOC99


302 
	#_MdoubÀ_
 

	)

303 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

304 
	#__MATH_DECLARING_DOUBLE
 0

	)

305 
	#__MATH_DECLARING_FLOATN
 0

	)

306 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

307 
	~<bôs/m©hˇŒs.h
>

308 #unde‡
_MdoubÀ_


309 #unde‡
__MATH_PRECNAME


310 #unde‡
__MATH_DECLARING_DOUBLE


311 #unde‡
__MATH_DECLARING_FLOATN


313 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

314 || 
deföed
 
__LDBL_COMPAT
 \

315 || 
deföed
 
_LIBC_TEST


316 #ifde‡
__LDBL_COMPAT


318 #ifde‡
__USE_ISOC99


319 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

320 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

321 #ifde‡
__REDIRECT_NTH


322 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

323 
__∆dbl_√xâow¨df
)

324 
	`__©åibuã__
 ((
__c⁄°__
));

325 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

326 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

327 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

328 (
__x
, 
__y
),

329 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

333 #unde‡
__MATHDECL_1


334 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

335 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

336 
¨gs
, 
Æüs
)

	)

337 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

338 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

344 
	#_MdoubÀ_
 

	)

345 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

346 
	#__MATH_DECLARING_DOUBLE
 0

	)

347 
	#__MATH_DECLARING_FLOATN
 0

	)

348 
	#__MATH_DECLARE_LDOUBLE
 1

	)

349 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

350 
	~<bôs/m©hˇŒs.h
>

351 #unde‡
_MdoubÀ_


352 #unde‡
__MATH_PRECNAME


353 #unde‡
__MATH_DECLARING_DOUBLE


354 #unde‡
__MATH_DECLARING_FLOATN


363 #i‡
__HAVE_DISTINCT_FLOAT16
 || (
__HAVE_FLOAT16
 && !
deföed
 
_LIBC
)

364 
	#_MdoubÀ_
 
_Flﬂt16


	)

365 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f16
##
	)
r

366 
	#__MATH_DECLARING_DOUBLE
 0

	)

367 
	#__MATH_DECLARING_FLOATN
 1

	)

368 #i‡
__HAVE_DISTINCT_FLOAT16


369 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

371 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

372 
	~<bôs/m©hˇŒs.h
>

374 #unde‡
_MdoubÀ_


375 #unde‡
__MATH_PRECNAME


376 #unde‡
__MATH_DECLARING_DOUBLE


377 #unde‡
__MATH_DECLARING_FLOATN


380 #i‡
__HAVE_DISTINCT_FLOAT32
 || (
__HAVE_FLOAT32
 && !
deföed
 
_LIBC
)

381 
	#_MdoubÀ_
 
_Flﬂt32


	)

382 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f32
##
	)
r

383 
	#__MATH_DECLARING_DOUBLE
 0

	)

384 
	#__MATH_DECLARING_FLOATN
 1

	)

385 #i‡
__HAVE_DISTINCT_FLOAT32


386 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

388 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

389 
	~<bôs/m©hˇŒs.h
>

391 #unde‡
_MdoubÀ_


392 #unde‡
__MATH_PRECNAME


393 #unde‡
__MATH_DECLARING_DOUBLE


394 #unde‡
__MATH_DECLARING_FLOATN


397 #i‡
__HAVE_DISTINCT_FLOAT64
 || (
__HAVE_FLOAT64
 && !
deföed
 
_LIBC
)

398 
	#_MdoubÀ_
 
_Flﬂt64


	)

399 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f64
##
	)
r

400 
	#__MATH_DECLARING_DOUBLE
 0

	)

401 
	#__MATH_DECLARING_FLOATN
 1

	)

402 #i‡
__HAVE_DISTINCT_FLOAT64


403 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

405 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

406 
	~<bôs/m©hˇŒs.h
>

408 #unde‡
_MdoubÀ_


409 #unde‡
__MATH_PRECNAME


410 #unde‡
__MATH_DECLARING_DOUBLE


411 #unde‡
__MATH_DECLARING_FLOATN


414 #i‡
__HAVE_DISTINCT_FLOAT128
 || (
__HAVE_FLOAT128
 && !
deföed
 
_LIBC
)

415 
	#_MdoubÀ_
 
_Flﬂt128


	)

416 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f128
##
	)
r

417 
	#__MATH_DECLARING_DOUBLE
 0

	)

418 
	#__MATH_DECLARING_FLOATN
 1

	)

419 #i‡
__HAVE_DISTINCT_FLOAT128


420 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

422 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

423 
	~<bôs/m©hˇŒs.h
>

425 #unde‡
_MdoubÀ_


426 #unde‡
__MATH_PRECNAME


427 #unde‡
__MATH_DECLARING_DOUBLE


428 #unde‡
__MATH_DECLARING_FLOATN


431 #i‡
__HAVE_DISTINCT_FLOAT32X
 || (
__HAVE_FLOAT32X
 && !
deföed
 
_LIBC
)

432 
	#_MdoubÀ_
 
_Flﬂt32x


	)

433 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f32x
##
	)
r

434 
	#__MATH_DECLARING_DOUBLE
 0

	)

435 
	#__MATH_DECLARING_FLOATN
 1

	)

436 #i‡
__HAVE_DISTINCT_FLOAT32X


437 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

439 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

440 
	~<bôs/m©hˇŒs.h
>

442 #unde‡
_MdoubÀ_


443 #unde‡
__MATH_PRECNAME


444 #unde‡
__MATH_DECLARING_DOUBLE


445 #unde‡
__MATH_DECLARING_FLOATN


448 #i‡
__HAVE_DISTINCT_FLOAT64X
 || (
__HAVE_FLOAT64X
 && !
deföed
 
_LIBC
)

449 
	#_MdoubÀ_
 
_Flﬂt64x


	)

450 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f64x
##
	)
r

451 
	#__MATH_DECLARING_DOUBLE
 0

	)

452 
	#__MATH_DECLARING_FLOATN
 1

	)

453 #i‡
__HAVE_DISTINCT_FLOAT64X


454 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

456 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

457 
	~<bôs/m©hˇŒs.h
>

459 #unde‡
_MdoubÀ_


460 #unde‡
__MATH_PRECNAME


461 #unde‡
__MATH_DECLARING_DOUBLE


462 #unde‡
__MATH_DECLARING_FLOATN


465 #i‡
__HAVE_DISTINCT_FLOAT128X
 || (
__HAVE_FLOAT128X
 && !
deföed
 
_LIBC
)

466 
	#_MdoubÀ_
 
_Flﬂt128x


	)

467 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f128x
##
	)
r

468 
	#__MATH_DECLARING_DOUBLE
 0

	)

469 
	#__MATH_DECLARING_FLOATN
 1

	)

470 #i‡
__HAVE_DISTINCT_FLOAT128X


471 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

473 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

474 
	~<bôs/m©hˇŒs.h
>

476 #unde‡
_MdoubÀ_


477 #unde‡
__MATH_PRECNAME


478 #unde‡
__MATH_DECLARING_DOUBLE


479 #unde‡
__MATH_DECLARING_FLOATN


482 #unde‡
__MATHDECL_1


483 #unde‡
__MATHDECL


484 #unde‡
__MATHCALL


487 
	#__MATHCALL_NARROW_ARGS_1
 (
_M¨g_
 
__x
)

	)

488 
	#__MATHCALL_NARROW_ARGS_2
 (
_M¨g_
 
__x
, _M¨g_ 
__y
)

	)

489 
	#__MATHCALL_NARROW_ARGS_3
 (
_M¨g_
 
__x
, _M¨g_ 
__y
, _M¨g_ 
__z
)

	)

490 
	#__MATHCALL_NARROW_NORMAL
(
func
, 
«rgs
) \

491 
_Mªt_
 
func
 
__MATHCALL_NARROW_ARGS_
 ## 
«rgs
 
__THROW


	)

492 
	#__MATHCALL_NARROW_REDIR
(
func
, 
ªdú
, 
«rgs
) \

493 
_Mªt_
 
	`__REDIRECT_NTH
 (
func
, 
__MATHCALL_NARROW_ARGS_
 ## 
«rgs
, \

494 
ªdú
)

	)

495 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

496 
	`__MATHCALL_NARROW_NORMAL
 (
func
, 
«rgs
)

	)

498 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

500 
	#_Mªt_
 

	)

501 
	#_M¨g_
 

	)

502 
	#__MATHCALL_NAME
(
«me
Ë
f
 ## 
	)
name

503 
	~<bôs/m©hˇŒs-«ºow.h
>

504 #unde‡
_Mªt_


505 #unde‡
_M¨g_


506 #unde‡
__MATHCALL_NAME


508 
	#_Mªt_
 

	)

509 
	#_M¨g_
 

	)

510 
	#__MATHCALL_NAME
(
«me
Ë
f
 ##Çamê## 
l


	)

511 #ifde‡
__LDBL_COMPAT


512 
	#__MATHCALL_REDIR_NAME
(
«me
Ë
f
 ## 
	)
name

513 #unde‡
__MATHCALL_NARROW


514 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

515 
	`__MATHCALL_NARROW_REDIR
 (
func
, 
ªdú
, 
«rgs
)

	)

517 
	~<bôs/m©hˇŒs-«ºow.h
>

518 #unde‡
_Mªt_


519 #unde‡
_M¨g_


520 #unde‡
__MATHCALL_NAME


521 #ifde‡
__LDBL_COMPAT


522 #unde‡
__MATHCALL_REDIR_NAME


523 #unde‡
__MATHCALL_NARROW


524 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

525 
	`__MATHCALL_NARROW_NORMAL
 (
func
, 
«rgs
)

	)

528 
	#_Mªt_
 

	)

529 
	#_M¨g_
 

	)

530 
	#__MATHCALL_NAME
(
«me
Ë
d
 ##Çamê## 
l


	)

531 #ifde‡
__LDBL_COMPAT


532 
	#__MATHCALL_REDIR_NAME
(
«me
Ë
__∆dbl_d
 ##Çamê## 
l


	)

533 #unde‡
__MATHCALL_NARROW


534 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

535 
	`__MATHCALL_NARROW_REDIR
 (
func
, 
ªdú
, 
«rgs
)

	)

537 
	~<bôs/m©hˇŒs-«ºow.h
>

538 #unde‡
_Mªt_


539 #unde‡
_M¨g_


540 #unde‡
__MATHCALL_NAME


541 #ifde‡
__LDBL_COMPAT


542 #unde‡
__MATHCALL_REDIR_NAME


543 #unde‡
__MATHCALL_NARROW


544 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

545 
	`__MATHCALL_NARROW_NORMAL
 (
func
, 
«rgs
)

	)

550 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

552 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT32


553 
	#_Mªt_
 
_Flﬂt16


	)

554 
	#_M¨g_
 
_Flﬂt32


	)

555 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f32


	)

556 
	~<bôs/m©hˇŒs-«ºow.h
>

557 #unde‡
_Mªt_


558 #unde‡
_M¨g_


559 #unde‡
__MATHCALL_NAME


562 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT32X


563 
	#_Mªt_
 
_Flﬂt16


	)

564 
	#_M¨g_
 
_Flﬂt32x


	)

565 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f32x


	)

566 
	~<bôs/m©hˇŒs-«ºow.h
>

567 #unde‡
_Mªt_


568 #unde‡
_M¨g_


569 #unde‡
__MATHCALL_NAME


572 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT64


573 
	#_Mªt_
 
_Flﬂt16


	)

574 
	#_M¨g_
 
_Flﬂt64


	)

575 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f64


	)

576 
	~<bôs/m©hˇŒs-«ºow.h
>

577 #unde‡
_Mªt_


578 #unde‡
_M¨g_


579 #unde‡
__MATHCALL_NAME


582 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT64X


583 
	#_Mªt_
 
_Flﬂt16


	)

584 
	#_M¨g_
 
_Flﬂt64x


	)

585 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f64x


	)

586 
	~<bôs/m©hˇŒs-«ºow.h
>

587 #unde‡
_Mªt_


588 #unde‡
_M¨g_


589 #unde‡
__MATHCALL_NAME


592 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT128


593 
	#_Mªt_
 
_Flﬂt16


	)

594 
	#_M¨g_
 
_Flﬂt128


	)

595 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f128


	)

596 
	~<bôs/m©hˇŒs-«ºow.h
>

597 #unde‡
_Mªt_


598 #unde‡
_M¨g_


599 #unde‡
__MATHCALL_NAME


602 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT128X


603 
	#_Mªt_
 
_Flﬂt16


	)

604 
	#_M¨g_
 
_Flﬂt128x


	)

605 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f128x


	)

606 
	~<bôs/m©hˇŒs-«ºow.h
>

607 #unde‡
_Mªt_


608 #unde‡
_M¨g_


609 #unde‡
__MATHCALL_NAME


612 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT32X


613 
	#_Mªt_
 
_Flﬂt32


	)

614 
	#_M¨g_
 
_Flﬂt32x


	)

615 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f32x


	)

616 
	~<bôs/m©hˇŒs-«ºow.h
>

617 #unde‡
_Mªt_


618 #unde‡
_M¨g_


619 #unde‡
__MATHCALL_NAME


622 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT64


623 
	#_Mªt_
 
_Flﬂt32


	)

624 
	#_M¨g_
 
_Flﬂt64


	)

625 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f64


	)

626 
	~<bôs/m©hˇŒs-«ºow.h
>

627 #unde‡
_Mªt_


628 #unde‡
_M¨g_


629 #unde‡
__MATHCALL_NAME


632 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT64X


633 
	#_Mªt_
 
_Flﬂt32


	)

634 
	#_M¨g_
 
_Flﬂt64x


	)

635 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f64x


	)

636 
	~<bôs/m©hˇŒs-«ºow.h
>

637 #unde‡
_Mªt_


638 #unde‡
_M¨g_


639 #unde‡
__MATHCALL_NAME


642 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT128


643 
	#_Mªt_
 
_Flﬂt32


	)

644 
	#_M¨g_
 
_Flﬂt128


	)

645 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f128


	)

646 
	~<bôs/m©hˇŒs-«ºow.h
>

647 #unde‡
_Mªt_


648 #unde‡
_M¨g_


649 #unde‡
__MATHCALL_NAME


652 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT128X


653 
	#_Mªt_
 
_Flﬂt32


	)

654 
	#_M¨g_
 
_Flﬂt128x


	)

655 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f128x


	)

656 
	~<bôs/m©hˇŒs-«ºow.h
>

657 #unde‡
_Mªt_


658 #unde‡
_M¨g_


659 #unde‡
__MATHCALL_NAME


662 #i‡
__HAVE_FLOAT32X
 && 
__HAVE_FLOAT64


663 
	#_Mªt_
 
_Flﬂt32x


	)

664 
	#_M¨g_
 
_Flﬂt64


	)

665 
	#__MATHCALL_NAME
(
«me
Ë
f32x
 ##Çamê## 
f64


	)

666 
	~<bôs/m©hˇŒs-«ºow.h
>

667 #unde‡
_Mªt_


668 #unde‡
_M¨g_


669 #unde‡
__MATHCALL_NAME


672 #i‡
__HAVE_FLOAT32X
 && 
__HAVE_FLOAT64X


673 
	#_Mªt_
 
_Flﬂt32x


	)

674 
	#_M¨g_
 
_Flﬂt64x


	)

675 
	#__MATHCALL_NAME
(
«me
Ë
f32x
 ##Çamê## 
f64x


	)

676 
	~<bôs/m©hˇŒs-«ºow.h
>

677 #unde‡
_Mªt_


678 #unde‡
_M¨g_


679 #unde‡
__MATHCALL_NAME


682 #i‡
__HAVE_FLOAT32X
 && 
__HAVE_FLOAT128


683 
	#_Mªt_
 
_Flﬂt32x


	)

684 
	#_M¨g_
 
_Flﬂt128


	)

685 
	#__MATHCALL_NAME
(
«me
Ë
f32x
 ##Çamê## 
f128


	)

686 
	~<bôs/m©hˇŒs-«ºow.h
>

687 #unde‡
_Mªt_


688 #unde‡
_M¨g_


689 #unde‡
__MATHCALL_NAME


692 #i‡
__HAVE_FLOAT32X
 && 
__HAVE_FLOAT128X


693 
	#_Mªt_
 
_Flﬂt32x


	)

694 
	#_M¨g_
 
_Flﬂt128x


	)

695 
	#__MATHCALL_NAME
(
«me
Ë
f32x
 ##Çamê## 
f128x


	)

696 
	~<bôs/m©hˇŒs-«ºow.h
>

697 #unde‡
_Mªt_


698 #unde‡
_M¨g_


699 #unde‡
__MATHCALL_NAME


702 #i‡
__HAVE_FLOAT64
 && 
__HAVE_FLOAT64X


703 
	#_Mªt_
 
_Flﬂt64


	)

704 
	#_M¨g_
 
_Flﬂt64x


	)

705 
	#__MATHCALL_NAME
(
«me
Ë
f64
 ##Çamê## 
f64x


	)

706 
	~<bôs/m©hˇŒs-«ºow.h
>

707 #unde‡
_Mªt_


708 #unde‡
_M¨g_


709 #unde‡
__MATHCALL_NAME


712 #i‡
__HAVE_FLOAT64
 && 
__HAVE_FLOAT128


713 
	#_Mªt_
 
_Flﬂt64


	)

714 
	#_M¨g_
 
_Flﬂt128


	)

715 
	#__MATHCALL_NAME
(
«me
Ë
f64
 ##Çamê## 
f128


	)

716 
	~<bôs/m©hˇŒs-«ºow.h
>

717 #unde‡
_Mªt_


718 #unde‡
_M¨g_


719 #unde‡
__MATHCALL_NAME


722 #i‡
__HAVE_FLOAT64
 && 
__HAVE_FLOAT128X


723 
	#_Mªt_
 
_Flﬂt64


	)

724 
	#_M¨g_
 
_Flﬂt128x


	)

725 
	#__MATHCALL_NAME
(
«me
Ë
f64
 ##Çamê## 
f128x


	)

726 
	~<bôs/m©hˇŒs-«ºow.h
>

727 #unde‡
_Mªt_


728 #unde‡
_M¨g_


729 #unde‡
__MATHCALL_NAME


732 #i‡
__HAVE_FLOAT64X
 && 
__HAVE_FLOAT128


733 
	#_Mªt_
 
_Flﬂt64x


	)

734 
	#_M¨g_
 
_Flﬂt128


	)

735 
	#__MATHCALL_NAME
(
«me
Ë
f64x
 ##Çamê## 
f128


	)

736 
	~<bôs/m©hˇŒs-«ºow.h
>

737 #unde‡
_Mªt_


738 #unde‡
_M¨g_


739 #unde‡
__MATHCALL_NAME


742 #i‡
__HAVE_FLOAT64X
 && 
__HAVE_FLOAT128X


743 
	#_Mªt_
 
_Flﬂt64x


	)

744 
	#_M¨g_
 
_Flﬂt128x


	)

745 
	#__MATHCALL_NAME
(
«me
Ë
f64x
 ##Çamê## 
f128x


	)

746 
	~<bôs/m©hˇŒs-«ºow.h
>

747 #unde‡
_Mªt_


748 #unde‡
_M¨g_


749 #unde‡
__MATHCALL_NAME


752 #i‡
__HAVE_FLOAT128
 && 
__HAVE_FLOAT128X


753 
	#_Mªt_
 
_Flﬂt128


	)

754 
	#_M¨g_
 
_Flﬂt128x


	)

755 
	#__MATHCALL_NAME
(
«me
Ë
f128
 ##Çamê## 
f128x


	)

756 
	~<bôs/m©hˇŒs-«ºow.h
>

757 #unde‡
_Mªt_


758 #unde‡
_M¨g_


759 #unde‡
__MATHCALL_NAME


764 #unde‡
__MATHCALL_NARROW_ARGS_1


765 #unde‡
__MATHCALL_NARROW_ARGS_2


766 #unde‡
__MATHCALL_NARROW_ARGS_3


767 #unde‡
__MATHCALL_NARROW_NORMAL


768 #unde‡
__MATHCALL_NARROW_REDIR


769 #unde‡
__MATHCALL_NARROW


771 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


773 
signgam
;

776 #i‡(
__HAVE_DISTINCT_FLOAT16
 \

777 || 
__HAVE_DISTINCT_FLOAT32
 \

778 || 
__HAVE_DISTINCT_FLOAT64
 \

779 || 
__HAVE_DISTINCT_FLOAT32X
 \

780 || 
__HAVE_DISTINCT_FLOAT64X
 \

781 || 
__HAVE_DISTINCT_FLOAT128X
)

794 #ifde‡
__NO_LONG_DOUBLE_MATH


795 #i‡
__HAVE_DISTINCT_FLOAT128


798 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

799 ( (
TG_ARG
Ë= (Ë? 
FUNC
 ## 
f
 
ARGS
 : FUNC ARGS)

	)

800 #ñi‡
__HAVE_DISTINCT_FLOAT128


801 #i‡
__HAVE_GENERIC_SELECTION


802 #i‡
__HAVE_FLOATN_NOT_TYPEDEF
 && 
__HAVE_FLOAT32


803 
	#__MATH_TG_F32
(
FUNC
, 
ARGS
Ë
_Flﬂt32
: FUNC ## 
f
 ARGS,

	)

805 
	#__MATH_TG_F32
(
FUNC
, 
ARGS
)

	)

807 #i‡
__HAVE_FLOATN_NOT_TYPEDEF
 && 
__HAVE_FLOAT64X


808 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


809 
	#__MATH_TG_F64X
(
FUNC
, 
ARGS
Ë
_Flﬂt64x
: FUNC ## 
l
 ARGS,

	)

811 
	#__MATH_TG_F64X
(
FUNC
, 
ARGS
Ë
_Flﬂt64x
: FUNC ## 
f128
 ARGS,

	)

814 
	#__MATH_TG_F64X
(
FUNC
, 
ARGS
)

	)

816 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

817 
	`_Gíîic
 ((
TG_ARG
), \

818 : 
FUNC
 ## 
f
 
ARGS
, \

819 
	`__MATH_TG_F32
 (
FUNC
, 
ARGS
) \

820 : 
FUNC
 
ARGS
, \

821 : 
FUNC
 ## 
l
 
ARGS
, \

822 
	`__MATH_TG_F64X
 (
FUNC
, 
ARGS
) \

823 
_Flﬂt128
: 
FUNC
 ## 
f128
 
ARGS
)

	)

825 #i‡
__HAVE_FLOATN_NOT_TYPEDEF


828 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

829 
__buûtö_choo£_ex¥
 \

830 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
TG_ARG
), ), \

831 
FUNC
 ## 
f
 
ARGS
, \

832 
__buûtö_choo£_ex¥
 \

833 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
TG_ARG
), ), \

834 
FUNC
 
ARGS
, \

835 
__buûtö_choo£_ex¥
 \

836 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
TG_ARG
), ), \

837 
FUNC
 ## 
l
 
ARGS
, \

838 
FUNC
 ## 
f128
 
ARGS
)))

	)

841 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

842 ( (
TG_ARG
) ==  () \

843 ? 
FUNC
 ## 
f
 
ARGS
 \

844 :  (
TG_ARG
) ==  () \

845 ? 
FUNC
 
ARGS
 \

846 : 
FUNC
 ## 
l
 
ARGS
)

	)

850 #ifde‡
__USE_ISOC99


855 
FP_NAN
 =

856 
	#FP_NAN
 0

	)

857 
FP_NAN
,

858 
FP_INFINITE
 =

859 
	#FP_INFINITE
 1

	)

860 
FP_INFINITE
,

861 
FP_ZERO
 =

862 
	#FP_ZERO
 2

	)

863 
FP_ZERO
,

864 
FP_SUBNORMAL
 =

865 
	#FP_SUBNORMAL
 3

	)

866 
FP_SUBNORMAL
,

867 
FP_NORMAL
 =

868 
	#FP_NORMAL
 4

	)

869 
FP_NORMAL


877 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
 \

878 && (!
deföed
 
__OPTIMIZE_SIZE__
 || deföed 
__˝lu•lus
)

885 
	#Â˛assify
(
x
Ë
	`__buûtö_Â˛assify
 (
FP_NAN
, 
FP_INFINITE
, \

886 
FP_NORMAL
, 
FP_SUBNORMAL
, 
FP_ZERO
, 
x
)

	)

888 
	#Â˛assify
(
x
Ë
	`__MATH_TG
 ((x), 
__Â˛assify
, (x))

	)

892 #i‡
	`__GNUC_PREREQ
 (6,0)

893 
	#signbô
(
x
Ë
	`__buûtö_signbô
 (x)

	)

894 #ñi‡
deföed
 
__˝lu•lus


902 
	#signbô
(
x
Ë
	`__buûtö_signbôl
 (x)

	)

903 #ñi‡
	`__GNUC_PREREQ
 (4,0)

904 
	#signbô
(
x
Ë
	`__MATH_TG
 ((x), 
__buûtö_signbô
, (x))

	)

906 
	#signbô
(
x
Ë
	`__MATH_TG
 ((x), 
__signbô
, (x))

	)

910 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


911 
	#isföôe
(
x
Ë
	`__buûtö_isföôe
 (x)

	)

913 
	#isföôe
(
x
Ë
	`__MATH_TG
 ((x), 
__föôe
, (x))

	)

917 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


918 
	#i¢‹mÆ
(
x
Ë
	`__buûtö_i¢‹mÆ
 (x)

	)

920 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

925 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


926 
	#i¢™
(
x
Ë
	`__buûtö_i¢™
 (x)

	)

928 
	#i¢™
(
x
Ë
	`__MATH_TG
 ((x), 
__i¢™
, (x))

	)

932 #i‡
__HAVE_DISTINCT_FLOAT128
 && !
	`__GNUC_PREREQ
 (7,0) \

933 && !
deföed
 
__SUPPORT_SNAN__
 && !deföed 
__˝lu•lus


939 
	#isöf
(
x
) \

940 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
x
), 
_Flﬂt128
) \

941 ? 
	`__isöff128
 (
x
Ë: 
	`__buûtö_isöf_sign
 (x))

	)

942 #ñi‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


943 
	#isöf
(
x
Ë
	`__buûtö_isöf_sign
 (x)

	)

945 
	#isöf
(
x
Ë
	`__MATH_TG
 ((x), 
__isöf
, (x))

	)

949 
	#MATH_ERRNO
 1

	)

950 
	#MATH_ERREXCEPT
 2

	)

957 #ifde‡
__FAST_MATH__


958 
	#m©h_îrh™dlög
 0

	)

959 #ñi‡
deföed
 
__NO_MATH_ERRNO__


960 
	#m©h_îrh™dlög
 (
MATH_ERREXCEPT
)

	)

962 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

967 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

968 
	~<bôs/isˇn⁄iˇl.h
>

971 #i‚de‡
__˝lu•lus


972 
	#issig«lög
(
x
Ë
	`__MATH_TG
 ((x), 
__issig«lög
, (x))

	)

981 
ölöe
 
	`issig«lög
 (
__vÆ
Ë{  
	`__issig«lögf
 (__val); }

982 
ölöe
 
	`issig«lög
 (
__vÆ
Ë{  
	`__issig«lög
 (__val); }

983 
ölöe
 

984 
	`issig«lög
 (
__vÆ
)

986 #ifde‡
__NO_LONG_DOUBLE_MATH


987  
	`__issig«lög
 (
__vÆ
);

989  
	`__issig«lögl
 (
__vÆ
);

992 #i‡
__HAVE_FLOAT128_UNLIKE_LDBL


995 
ölöe
 
	`issig«lög
 (
_Flﬂt128
 
__vÆ
Ë{  
	`__issig«lögf128
 (__val); }

997 
	}
}

1001 
	#issubn‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_SUBNORMAL
)

	)

1004 #i‚de‡
__˝lu•lus


1005 #ifde‡
__SUPPORT_SNAN__


1006 
	#iszîo
(
x
Ë(
	`Â˛assify
 (xË=
FP_ZERO
)

	)

1008 
	#iszîo
(
x
Ë(((
	`__ty≥of
 (x)Ë(x)Ë=0)

	)

1012 #ifde‡
__SUPPORT_SNAN__


1013 
ölöe
 

1014 
iszîo
 (
__vÆ
)

1016  
__Â˛assifyf
 (
__vÆ
Ë=
FP_ZERO
;

1018 
ölöe
 

1019 
iszîo
 (
__vÆ
)

1021  
__Â˛assify
 (
__vÆ
Ë=
FP_ZERO
;

1023 
ölöe
 

1024 
iszîo
 (
__vÆ
)

1026 #ifde‡
__NO_LONG_DOUBLE_MATH


1027  
__Â˛assify
 (
__vÆ
Ë=
FP_ZERO
;

1029  
__Â˛assifyl
 (
__vÆ
Ë=
FP_ZERO
;

1032 #i‡
__HAVE_FLOAT128_UNLIKE_LDBL


1035 
ölöe
 

1036 
iszîo
 (
_Flﬂt128
 
__vÆ
)

1038  
__Â˛assifyf128
 (
__vÆ
Ë=
FP_ZERO
;

1042 
ãm∂©e
 <
˛ass
 
__T
> 
ölöe
 
boﬁ


1043 
iszîo
 (
__T
 
__vÆ
)

1045  
__vÆ
 == 0;

1052 #ifde‡
__USE_XOPEN


1054 
	#MAXFLOAT
 3.40282347e+38F

	)

1059 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


1060 
	#M_E
 2.7182818284590452354

	)

1061 
	#M_LOG2E
 1.4426950408889634074

	)

1062 
	#M_LOG10E
 0.43429448190325182765

	)

1063 
	#M_LN2
 0.69314718055994530942

	)

1064 
	#M_LN10
 2.30258509299404568402

	)

1065 
	#M_PI
 3.14159265358979323846

	)

1066 
	#M_PI_2
 1.57079632679489661923

	)

1067 
	#M_PI_4
 0.78539816339744830962

	)

1068 
	#M_1_PI
 0.31830988618379067154

	)

1069 
	#M_2_PI
 0.63661977236758134308

	)

1070 
	#M_2_SQRTPI
 1.12837916709551257390

	)

1071 
	#M_SQRT2
 1.41421356237309504880

	)

1072 
	#M_SQRT1_2
 0.70710678118654752440

	)

1078 #ifde‡
__USE_GNU


1079 
	#M_El
 2.718281828459045235360287471352662498L

	)

1080 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

1081 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

1082 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

1083 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

1084 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

1085 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

1086 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

1087 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

1088 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

1089 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

1090 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

1091 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

1094 #i‡
__HAVE_FLOAT16
 && 
deföed
 
__USE_GNU


1095 
	#M_Ef16
 
	`__f16
 (2.718281828459045235360287471352662498Ë

	)

1096 
	#M_LOG2Ef16
 
	`__f16
 (1.442695040888963407359924681001892137Ë

	)

1097 
	#M_LOG10Ef16
 
	`__f16
 (0.434294481903251827651128918916605082Ë

	)

1098 
	#M_LN2f16
 
	`__f16
 (0.693147180559945309417232121458176568Ë

	)

1099 
	#M_LN10f16
 
	`__f16
 (2.302585092994045684017991454684364208Ë

	)

1100 
	#M_PIf16
 
	`__f16
 (3.141592653589793238462643383279502884Ë

	)

1101 
	#M_PI_2f16
 
	`__f16
 (1.570796326794896619231321691639751442Ë

	)

1102 
	#M_PI_4f16
 
	`__f16
 (0.785398163397448309615660845819875721Ë

	)

1103 
	#M_1_PIf16
 
	`__f16
 (0.318309886183790671537767526745028724Ë

	)

1104 
	#M_2_PIf16
 
	`__f16
 (0.636619772367581343075535053490057448Ë

	)

1105 
	#M_2_SQRTPIf16
 
	`__f16
 (1.128379167095512573896158903121545172Ë

	)

1106 
	#M_SQRT2f16
 
	`__f16
 (1.414213562373095048801688724209698079Ë

	)

1107 
	#M_SQRT1_2f16
 
	`__f16
 (0.707106781186547524400844362104849039Ë

	)

1110 #i‡
__HAVE_FLOAT32
 && 
deföed
 
__USE_GNU


1111 
	#M_Ef32
 
	`__f32
 (2.718281828459045235360287471352662498Ë

	)

1112 
	#M_LOG2Ef32
 
	`__f32
 (1.442695040888963407359924681001892137Ë

	)

1113 
	#M_LOG10Ef32
 
	`__f32
 (0.434294481903251827651128918916605082Ë

	)

1114 
	#M_LN2f32
 
	`__f32
 (0.693147180559945309417232121458176568Ë

	)

1115 
	#M_LN10f32
 
	`__f32
 (2.302585092994045684017991454684364208Ë

	)

1116 
	#M_PIf32
 
	`__f32
 (3.141592653589793238462643383279502884Ë

	)

1117 
	#M_PI_2f32
 
	`__f32
 (1.570796326794896619231321691639751442Ë

	)

1118 
	#M_PI_4f32
 
	`__f32
 (0.785398163397448309615660845819875721Ë

	)

1119 
	#M_1_PIf32
 
	`__f32
 (0.318309886183790671537767526745028724Ë

	)

1120 
	#M_2_PIf32
 
	`__f32
 (0.636619772367581343075535053490057448Ë

	)

1121 
	#M_2_SQRTPIf32
 
	`__f32
 (1.128379167095512573896158903121545172Ë

	)

1122 
	#M_SQRT2f32
 
	`__f32
 (1.414213562373095048801688724209698079Ë

	)

1123 
	#M_SQRT1_2f32
 
	`__f32
 (0.707106781186547524400844362104849039Ë

	)

1126 #i‡
__HAVE_FLOAT64
 && 
deföed
 
__USE_GNU


1127 
	#M_Ef64
 
	`__f64
 (2.718281828459045235360287471352662498Ë

	)

1128 
	#M_LOG2Ef64
 
	`__f64
 (1.442695040888963407359924681001892137Ë

	)

1129 
	#M_LOG10Ef64
 
	`__f64
 (0.434294481903251827651128918916605082Ë

	)

1130 
	#M_LN2f64
 
	`__f64
 (0.693147180559945309417232121458176568Ë

	)

1131 
	#M_LN10f64
 
	`__f64
 (2.302585092994045684017991454684364208Ë

	)

1132 
	#M_PIf64
 
	`__f64
 (3.141592653589793238462643383279502884Ë

	)

1133 
	#M_PI_2f64
 
	`__f64
 (1.570796326794896619231321691639751442Ë

	)

1134 
	#M_PI_4f64
 
	`__f64
 (0.785398163397448309615660845819875721Ë

	)

1135 
	#M_1_PIf64
 
	`__f64
 (0.318309886183790671537767526745028724Ë

	)

1136 
	#M_2_PIf64
 
	`__f64
 (0.636619772367581343075535053490057448Ë

	)

1137 
	#M_2_SQRTPIf64
 
	`__f64
 (1.128379167095512573896158903121545172Ë

	)

1138 
	#M_SQRT2f64
 
	`__f64
 (1.414213562373095048801688724209698079Ë

	)

1139 
	#M_SQRT1_2f64
 
	`__f64
 (0.707106781186547524400844362104849039Ë

	)

1142 #i‡
__HAVE_FLOAT128
 && 
deföed
 
__USE_GNU


1143 
	#M_Ef128
 
	`__f128
 (2.718281828459045235360287471352662498Ë

	)

1144 
	#M_LOG2Ef128
 
	`__f128
 (1.442695040888963407359924681001892137Ë

	)

1145 
	#M_LOG10Ef128
 
	`__f128
 (0.434294481903251827651128918916605082Ë

	)

1146 
	#M_LN2f128
 
	`__f128
 (0.693147180559945309417232121458176568Ë

	)

1147 
	#M_LN10f128
 
	`__f128
 (2.302585092994045684017991454684364208Ë

	)

1148 
	#M_PIf128
 
	`__f128
 (3.141592653589793238462643383279502884Ë

	)

1149 
	#M_PI_2f128
 
	`__f128
 (1.570796326794896619231321691639751442Ë

	)

1150 
	#M_PI_4f128
 
	`__f128
 (0.785398163397448309615660845819875721Ë

	)

1151 
	#M_1_PIf128
 
	`__f128
 (0.318309886183790671537767526745028724Ë

	)

1152 
	#M_2_PIf128
 
	`__f128
 (0.636619772367581343075535053490057448Ë

	)

1153 
	#M_2_SQRTPIf128
 
	`__f128
 (1.128379167095512573896158903121545172Ë

	)

1154 
	#M_SQRT2f128
 
	`__f128
 (1.414213562373095048801688724209698079Ë

	)

1155 
	#M_SQRT1_2f128
 
	`__f128
 (0.707106781186547524400844362104849039Ë

	)

1158 #i‡
__HAVE_FLOAT32X
 && 
deföed
 
__USE_GNU


1159 
	#M_Ef32x
 
	`__f32x
 (2.718281828459045235360287471352662498Ë

	)

1160 
	#M_LOG2Ef32x
 
	`__f32x
 (1.442695040888963407359924681001892137Ë

	)

1161 
	#M_LOG10Ef32x
 
	`__f32x
 (0.434294481903251827651128918916605082Ë

	)

1162 
	#M_LN2f32x
 
	`__f32x
 (0.693147180559945309417232121458176568Ë

	)

1163 
	#M_LN10f32x
 
	`__f32x
 (2.302585092994045684017991454684364208Ë

	)

1164 
	#M_PIf32x
 
	`__f32x
 (3.141592653589793238462643383279502884Ë

	)

1165 
	#M_PI_2f32x
 
	`__f32x
 (1.570796326794896619231321691639751442Ë

	)

1166 
	#M_PI_4f32x
 
	`__f32x
 (0.785398163397448309615660845819875721Ë

	)

1167 
	#M_1_PIf32x
 
	`__f32x
 (0.318309886183790671537767526745028724Ë

	)

1168 
	#M_2_PIf32x
 
	`__f32x
 (0.636619772367581343075535053490057448Ë

	)

1169 
	#M_2_SQRTPIf32x
 
	`__f32x
 (1.128379167095512573896158903121545172Ë

	)

1170 
	#M_SQRT2f32x
 
	`__f32x
 (1.414213562373095048801688724209698079Ë

	)

1171 
	#M_SQRT1_2f32x
 
	`__f32x
 (0.707106781186547524400844362104849039Ë

	)

1174 #i‡
__HAVE_FLOAT64X
 && 
deföed
 
__USE_GNU


1175 
	#M_Ef64x
 
	`__f64x
 (2.718281828459045235360287471352662498Ë

	)

1176 
	#M_LOG2Ef64x
 
	`__f64x
 (1.442695040888963407359924681001892137Ë

	)

1177 
	#M_LOG10Ef64x
 
	`__f64x
 (0.434294481903251827651128918916605082Ë

	)

1178 
	#M_LN2f64x
 
	`__f64x
 (0.693147180559945309417232121458176568Ë

	)

1179 
	#M_LN10f64x
 
	`__f64x
 (2.302585092994045684017991454684364208Ë

	)

1180 
	#M_PIf64x
 
	`__f64x
 (3.141592653589793238462643383279502884Ë

	)

1181 
	#M_PI_2f64x
 
	`__f64x
 (1.570796326794896619231321691639751442Ë

	)

1182 
	#M_PI_4f64x
 
	`__f64x
 (0.785398163397448309615660845819875721Ë

	)

1183 
	#M_1_PIf64x
 
	`__f64x
 (0.318309886183790671537767526745028724Ë

	)

1184 
	#M_2_PIf64x
 
	`__f64x
 (0.636619772367581343075535053490057448Ë

	)

1185 
	#M_2_SQRTPIf64x
 
	`__f64x
 (1.128379167095512573896158903121545172Ë

	)

1186 
	#M_SQRT2f64x
 
	`__f64x
 (1.414213562373095048801688724209698079Ë

	)

1187 
	#M_SQRT1_2f64x
 
	`__f64x
 (0.707106781186547524400844362104849039Ë

	)

1190 #i‡
__HAVE_FLOAT128X
 && 
deföed
 
__USE_GNU


1197 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


1198 
	#__NO_MATH_INLINES
 1

	)

1201 #ifde‡
__USE_ISOC99


1202 #i‡
__GNUC_PREREQ
 (3, 1)

1209 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

1210 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

1211 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

1212 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

1213 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

1214 
	#isun‹dîed
(
x
, 
y
Ë
	`__buûtö_isun‹dîed
(x, y)

	)

1216 
	#isgª©î
(
x
, 
y
) \

1217 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1218 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; }))

	)

1219 
	#isgª©îequÆ
(
x
, 
y
) \

1220 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1221 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

1222 
	#i¶ess
(
x
, 
y
) \

1223 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1224 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

1225 
	#i¶es£quÆ
(
x
, 
y
) \

1226 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1227 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

1228 
	#i¶essgª©î
(
x
, 
y
) \

1229 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1230 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x !__y; }))

	)

1232 
	#isun‹dîed
(
x
, 
y
) \

1233 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__u
 = (x); __ty≥of__ (
y
Ë
__v
 = (y); \

1234 
__u
 !
__v
 && (__u !__u || __v !__v); }))

	)

1239 #ifde‡
__USE_EXTERN_INLINES


1240 
	~<bôs/m©hölöe.h
>

1245 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0

1248 
	#_MdoubÀ_
 

	)

1249 
	#__MATH_DECLARING_DOUBLE
 1

	)

1250 
	#__MATH_DECLARING_FLOATN
 0

	)

1251 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

1252 
fun˘i⁄
 ## 
ªíå™t


	)

1253 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1254 
__
 ## 
fun˘i⁄
 ## 
ªíå™t
 ## 
_föôe


	)

1255 
	~<bôs/m©h-föôe.h
>

1256 #unde‡
_MdoubÀ_


1257 #unde‡
__MATH_DECLARING_DOUBLE


1258 #unde‡
__MATH_DECLARING_FLOATN


1259 #unde‡
__REDIRFROM_X


1260 #unde‡
__REDIRTO_X


1264 #ifde‡
__USE_ISOC99


1267 
	#_MdoubÀ_
 

	)

1268 
	#__MATH_DECLARING_DOUBLE
 0

	)

1269 
	#__MATH_DECLARING_FLOATN
 0

	)

1270 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

1271 
fun˘i⁄
 ## 
f
 ## 
ªíå™t


	)

1272 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1273 
__
 ## 
fun˘i⁄
 ## 
f
 ## 
ªíå™t
 ## 
_föôe


	)

1274 
	~<bôs/m©h-föôe.h
>

1275 #unde‡
_MdoubÀ_


1276 #unde‡
__MATH_DECLARING_DOUBLE


1277 #unde‡
__MATH_DECLARING_FLOATN


1278 #unde‡
__REDIRFROM_X


1279 #unde‡
__REDIRTO_X


1282 #ifde‡
__MATH_DECLARE_LDOUBLE


1283 
	#_MdoubÀ_
 

	)

1284 
	#__MATH_DECLARING_DOUBLE
 0

	)

1285 
	#__MATH_DECLARING_FLOATN
 0

	)

1286 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

1287 
fun˘i⁄
 ## 
l
 ## 
ªíå™t


	)

1288 #ifde‡
__NO_LONG_DOUBLE_MATH


1289 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1290 
__
 ## 
fun˘i⁄
 ## 
ªíå™t
 ## 
_föôe


	)

1292 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1293 
__
 ## 
fun˘i⁄
 ## 
l
 ## 
ªíå™t
 ## 
_föôe


	)

1295 
	~<bôs/m©h-föôe.h
>

1296 #unde‡
_MdoubÀ_


1297 #unde‡
__MATH_DECLARING_DOUBLE


1298 #unde‡
__MATH_DECLARING_FLOATN


1299 #unde‡
__REDIRFROM_X


1300 #unde‡
__REDIRTO_X


1307 #i‡(
__HAVE_DISTINCT_FLOAT16
 || (
__HAVE_FLOAT16
 && !
deföed
 
_LIBC
)) \

1308 && 
	$__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

1309 
	#_MdoubÀ_
 
_Flﬂt16


	)

1310 
	#__MATH_DECLARING_DOUBLE
 0

	)

1311 
	#__MATH_DECLARING_FLOATN
 1

	)

1312 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

1313 
fun˘i⁄
 ## 
f16
 ## 
ªíå™t


	)

1314 #i‡
__HAVE_DISTINCT_FLOAT16


1315 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1316 
__
 ## 
fun˘i⁄
 ## 
f16
 ## 
ªíå™t
 ## 
_föôe


	)

1320 
	~<bôs/m©h-föôe.h
>

1321 #unde‡
_MdoubÀ_


1322 #unde‡
__MATH_DECLARING_DOUBLE


1323 #unde‡
__MATH_DECLARING_FLOATN


1324 #unde‡
__REDIRFROM_X


1325 #unde‡
__REDIRTO_X


1328 #i‡(
__HAVE_DISTINCT_FLOAT32
 || (
__HAVE_FLOAT32
 && !
deföed
 
_LIBC
)) \

1329 && 
	$__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

1330 
	#_MdoubÀ_
 
_Flﬂt32


	)

1331 
	#__MATH_DECLARING_DOUBLE
 0

	)

1332 
	#__MATH_DECLARING_FLOATN
 1

	)

1333 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

1334 
fun˘i⁄
 ## 
f32
 ## 
ªíå™t


	)

1335 #i‡
__HAVE_DISTINCT_FLOAT32


1336 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1337 
__
 ## 
fun˘i⁄
 ## 
f32
 ## 
ªíå™t
 ## 
_föôe


	)

1339 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1340 
__
 ## 
fun˘i⁄
 ## 
f
 ## 
ªíå™t
 ## 
_föôe


	)

1342 
	~<bôs/m©h-föôe.h
>

1343 #unde‡
_MdoubÀ_


1344 #unde‡
__MATH_DECLARING_DOUBLE


1345 #unde‡
__MATH_DECLARING_FLOATN


1346 #unde‡
__REDIRFROM_X


1347 #unde‡
__REDIRTO_X


1350 #i‡(
__HAVE_DISTINCT_FLOAT64
 || (
__HAVE_FLOAT64
 && !
deföed
 
_LIBC
)) \

1351 && 
	$__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

1352 
	#_MdoubÀ_
 
_Flﬂt64


	)

1353 
	#__MATH_DECLARING_DOUBLE
 0

	)

1354 
	#__MATH_DECLARING_FLOATN
 1

	)

1355 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

1356 
fun˘i⁄
 ## 
f64
 ## 
ªíå™t


	)

1357 #i‡
__HAVE_DISTINCT_FLOAT64


1358 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1359 
__
 ## 
fun˘i⁄
 ## 
f64
 ## 
ªíå™t
 ## 
_föôe


	)

1361 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1362 
__
 ## 
fun˘i⁄
 ## 
ªíå™t
 ## 
_föôe


	)

1364 
	~<bôs/m©h-föôe.h
>

1365 #unde‡
_MdoubÀ_


1366 #unde‡
__MATH_DECLARING_DOUBLE


1367 #unde‡
__MATH_DECLARING_FLOATN


1368 #unde‡
__REDIRFROM_X


1369 #unde‡
__REDIRTO_X


1372 #i‡(
__HAVE_DISTINCT_FLOAT128
 || (
__HAVE_FLOAT128
 && !
deföed
 
_LIBC
)) \

1373 && 
	$__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

1374 
	#_MdoubÀ_
 
_Flﬂt128


	)

1375 
	#__MATH_DECLARING_DOUBLE
 0

	)

1376 
	#__MATH_DECLARING_FLOATN
 1

	)

1377 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

1378 
fun˘i⁄
 ## 
f128
 ## 
ªíå™t


	)

1379 #i‡
__HAVE_DISTINCT_FLOAT128


1380 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1381 
__
 ## 
fun˘i⁄
 ## 
f128
 ## 
ªíå™t
 ## 
_föôe


	)

1383 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1384 
__
 ## 
fun˘i⁄
 ## 
l
 ## 
ªíå™t
 ## 
_föôe


	)

1386 
	~<bôs/m©h-föôe.h
>

1387 #unde‡
_MdoubÀ_


1388 #unde‡
__MATH_DECLARING_DOUBLE


1389 #unde‡
__MATH_DECLARING_FLOATN


1390 #unde‡
__REDIRFROM_X


1391 #unde‡
__REDIRTO_X


1394 #i‡(
__HAVE_DISTINCT_FLOAT32X
 || (
__HAVE_FLOAT32X
 && !
deföed
 
_LIBC
)) \

1395 && 
	$__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

1396 
	#_MdoubÀ_
 
_Flﬂt32x


	)

1397 
	#__MATH_DECLARING_DOUBLE
 0

	)

1398 
	#__MATH_DECLARING_FLOATN
 1

	)

1399 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

1400 
fun˘i⁄
 ## 
f32x
 ## 
ªíå™t


	)

1401 #i‡
__HAVE_DISTINCT_FLOAT32X


1402 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1403 
__
 ## 
fun˘i⁄
 ## 
f32x
 ## 
ªíå™t
 ## 
_föôe


	)

1405 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1406 
__
 ## 
fun˘i⁄
 ## 
ªíå™t
 ## 
_föôe


	)

1408 
	~<bôs/m©h-föôe.h
>

1409 #unde‡
_MdoubÀ_


1410 #unde‡
__MATH_DECLARING_DOUBLE


1411 #unde‡
__MATH_DECLARING_FLOATN


1412 #unde‡
__REDIRFROM_X


1413 #unde‡
__REDIRTO_X


1416 #i‡(
__HAVE_DISTINCT_FLOAT64X
 || (
__HAVE_FLOAT64X
 && !
deföed
 
_LIBC
)) \

1417 && 
	$__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

1418 
	#_MdoubÀ_
 
_Flﬂt64x


	)

1419 
	#__MATH_DECLARING_DOUBLE
 0

	)

1420 
	#__MATH_DECLARING_FLOATN
 1

	)

1421 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

1422 
fun˘i⁄
 ## 
f64x
 ## 
ªíå™t


	)

1423 #i‡
__HAVE_DISTINCT_FLOAT64X


1424 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1425 
__
 ## 
fun˘i⁄
 ## 
f64x
 ## 
ªíå™t
 ## 
_föôe


	)

1426 #ñi‡
__HAVE_FLOAT64X_LONG_DOUBLE


1427 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1428 
__
 ## 
fun˘i⁄
 ## 
l
 ## 
ªíå™t
 ## 
_föôe


	)

1430 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1431 
__
 ## 
fun˘i⁄
 ## 
f128
 ## 
ªíå™t
 ## 
_föôe


	)

1433 
	~<bôs/m©h-föôe.h
>

1434 #unde‡
_MdoubÀ_


1435 #unde‡
__MATH_DECLARING_DOUBLE


1436 #unde‡
__MATH_DECLARING_FLOATN


1437 #unde‡
__REDIRFROM_X


1438 #unde‡
__REDIRTO_X


1441 #i‡(
__HAVE_DISTINCT_FLOAT128X
 || (
__HAVE_FLOAT128X
 && !
deföed
 
_LIBC
)) \

1442 && 
	$__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

1443 
	#_MdoubÀ_
 
_Flﬂt128x


	)

1444 
	#__MATH_DECLARING_DOUBLE
 0

	)

1445 
	#__MATH_DECLARING_FLOATN
 1

	)

1446 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

1447 
fun˘i⁄
 ## 
f128x
 ## 
ªíå™t


	)

1448 #i‡
__HAVE_DISTINCT_FLOAT128X


1449 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1450 
__
 ## 
fun˘i⁄
 ## 
f128x
 ## 
ªíå™t
 ## 
_föôe


	)

1454 
	~<bôs/m©h-föôe.h
>

1455 #unde‡
_MdoubÀ_


1456 #unde‡
__MATH_DECLARING_DOUBLE


1457 #unde‡
__MATH_DECLARING_FLOATN


1458 #unde‡
__REDIRFROM_X


1459 #unde‡
__REDIRTO_X


1464 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

1467 #i‡
__FLT_EVAL_METHOD__
 == 2 || __FLT_EVAL_METHOD__ > 64

1468 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (yË+ 0.0L)

	)

1469 #ñi‡
__FLT_EVAL_METHOD__
 == 1 || __FLT_EVAL_METHOD__ > 32

1470 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (yË+ 0.0)

	)

1471 #ñi‡
__FLT_EVAL_METHOD__
 == 0 || __FLT_EVAL_METHOD__ == 32

1472 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (yË+ 0.0f)

	)

1474 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (y))

	)

1479 #i‡!
deföed
 
__˝lu•lus
 || (__˝lu•lu†< 201103L && !deföed 
__GNUC__
)

1480 
	#i£qsig
(
x
, 
y
) \

1481 
	`__MATH_TG
 (
	`__MATH_EVAL_FMT2
 (
x
, 
y
), 
__i£qsig
, ((x), (y)))

	)

1494 
ãm∂©e
<
ty≥«me
> 
__i£qsig_ty≥
;

1496 
ãm∂©e
<> 
__i£qsig_ty≥
<>

1498 
	`__ˇŒ
 (
__x
, 
__y
Ë
	`throw
 ()

1500  
	`__i£qsigf
 (
__x
, 
__y
);

1504 
ãm∂©e
<> 
__i£qsig_ty≥
<>

1506 
	`__ˇŒ
 (
__x
, 
__y
Ë
	`throw
 ()

1508  
	`__i£qsig
 (
__x
, 
__y
);

1512 
ãm∂©e
<> 
__i£qsig_ty≥
<>

1514 
	`__ˇŒ
 (
__x
, 
__y
Ë
	`throw
 ()

1516 #i‚de‡
__NO_LONG_DOUBLE_MATH


1517  
	`__i£qsigl
 (
__x
, 
__y
);

1519  
	`__i£qsig
 (
__x
, 
__y
);

1524 #i‡
__HAVE_FLOAT128_UNLIKE_LDBL


1527 
ãm∂©e
<> 
__i£qsig_ty≥
<
_Flﬂt128
>

1529 
	`__ˇŒ
 (
_Flﬂt128
 
__x
, _Flﬂt128 
__y
Ë
	`throw
 ()

1531  
	`__i£qsigf128
 (
__x
, 
__y
);

1536 
ãm∂©e
<
ty≥«me
 
_T1
,Åy≥«mê
_T2
>

1537 
ölöe
 

1538 
	`i£qsig
 (
_T1
 
__x
, 
_T2
 
__y
Ë
	`throw
 ()

1540 #i‡
__˝lu•lus
 >= 201103L

1541 
	`de˛ty≥
 (
	t__MATH_EVAL_FMT2
 (
	t__x
, 
	t__y
)Ë
	t_T3
;

1543 
	`__ty≥of
 (
	t__MATH_EVAL_FMT2
 (
	t__x
, 
	t__y
)Ë
	t_T3
;

1545  
__i£qsig_ty≥
<
_T3
>::
	`__ˇŒ
 (
__x
, 
__y
);

1548 
	}
}

1553 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

27 
	~<bôs/ty≥s.h
>

28 
	~<bôs/wch¨.h
>

29 
	~<bôs/w‹dsize.h
>

34 
	~<bôs/°döt-öä.h
>

37 
	~<bôs/°döt-uöä.h
>

43 
__öt_Àa°8_t
 
	töt_Àa°8_t
;

44 
__öt_Àa°16_t
 
	töt_Àa°16_t
;

45 
__öt_Àa°32_t
 
	töt_Àa°32_t
;

46 
__öt_Àa°64_t
 
	töt_Àa°64_t
;

49 
__uöt_Àa°8_t
 
	tuöt_Àa°8_t
;

50 
__uöt_Àa°16_t
 
	tuöt_Àa°16_t
;

51 
__uöt_Àa°32_t
 
	tuöt_Àa°32_t
;

52 
__uöt_Àa°64_t
 
	tuöt_Àa°64_t
;

58 sig√d 
	töt_Á°8_t
;

59 #i‡
__WORDSIZE
 == 64

60 
	töt_Á°16_t
;

61 
	töt_Á°32_t
;

62 
	töt_Á°64_t
;

64 
	töt_Á°16_t
;

65 
	töt_Á°32_t
;

66 
__exãnsi⁄__


67 
	töt_Á°64_t
;

71 
	tuöt_Á°8_t
;

72 #i‡
__WORDSIZE
 == 64

73 
	tuöt_Á°16_t
;

74 
	tuöt_Á°32_t
;

75 
	tuöt_Á°64_t
;

77 
	tuöt_Á°16_t
;

78 
	tuöt_Á°32_t
;

79 
__exãnsi⁄__


80 
	tuöt_Á°64_t
;

85 #i‡
__WORDSIZE
 == 64

86 #i‚de‡
__öçå_t_deföed


87 
	töçå_t
;

88 
	#__öçå_t_deföed


	)

90 
	tuöçå_t
;

92 #i‚de‡
__öçå_t_deföed


93 
	töçå_t
;

94 
	#__öçå_t_deföed


	)

96 
	tuöçå_t
;

101 
__ötmax_t
 
	tötmax_t
;

102 
__uötmax_t
 
	tuötmax_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	#__INT64_C
(
c
Ë¯## 
L


	)

107 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

109 
	#__INT64_C
(
c
Ë¯## 
LL


	)

110 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

116 
	#INT8_MIN
 (-128)

	)

117 
	#INT16_MIN
 (-32767-1)

	)

118 
	#INT32_MIN
 (-2147483647-1)

	)

119 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

121 
	#INT8_MAX
 (127)

	)

122 
	#INT16_MAX
 (32767)

	)

123 
	#INT32_MAX
 (2147483647)

	)

124 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

127 
	#UINT8_MAX
 (255)

	)

128 
	#UINT16_MAX
 (65535)

	)

129 
	#UINT32_MAX
 (4294967295U)

	)

130 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

134 
	#INT_LEAST8_MIN
 (-128)

	)

135 
	#INT_LEAST16_MIN
 (-32767-1)

	)

136 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

137 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

139 
	#INT_LEAST8_MAX
 (127)

	)

140 
	#INT_LEAST16_MAX
 (32767)

	)

141 
	#INT_LEAST32_MAX
 (2147483647)

	)

142 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

145 
	#UINT_LEAST8_MAX
 (255)

	)

146 
	#UINT_LEAST16_MAX
 (65535)

	)

147 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

148 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

152 
	#INT_FAST8_MIN
 (-128)

	)

153 #i‡
__WORDSIZE
 == 64

154 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

155 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

157 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

158 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

160 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

162 
	#INT_FAST8_MAX
 (127)

	)

163 #i‡
__WORDSIZE
 == 64

164 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

165 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

167 
	#INT_FAST16_MAX
 (2147483647)

	)

168 
	#INT_FAST32_MAX
 (2147483647)

	)

170 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

173 
	#UINT_FAST8_MAX
 (255)

	)

174 #i‡
__WORDSIZE
 == 64

175 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

176 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

178 
	#UINT_FAST16_MAX
 (4294967295U)

	)

179 
	#UINT_FAST32_MAX
 (4294967295U)

	)

181 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

185 #i‡
__WORDSIZE
 == 64

186 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

187 
	#INTPTR_MAX
 (9223372036854775807L)

	)

188 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

190 
	#INTPTR_MIN
 (-2147483647-1)

	)

191 
	#INTPTR_MAX
 (2147483647)

	)

192 
	#UINTPTR_MAX
 (4294967295U)

	)

197 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

199 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

202 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

208 #i‡
__WORDSIZE
 == 64

209 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

210 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

212 #i‡
__WORDSIZE32_PTRDIFF_LONG


213 
	#PTRDIFF_MIN
 (-2147483647L-1)

	)

214 
	#PTRDIFF_MAX
 (2147483647L)

	)

216 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

217 
	#PTRDIFF_MAX
 (2147483647)

	)

222 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

223 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

226 #i‡
__WORDSIZE
 == 64

227 
	#SIZE_MAX
 (18446744073709551615UL)

	)

229 #i‡
__WORDSIZE32_SIZE_ULONG


230 
	#SIZE_MAX
 (4294967295UL)

	)

232 
	#SIZE_MAX
 (4294967295U)

	)

237 #i‚de‡
WCHAR_MIN


239 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

240 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

244 
	#WINT_MIN
 (0u)

	)

245 
	#WINT_MAX
 (4294967295u)

	)

248 
	#INT8_C
(
c
Ë
	)
c

249 
	#INT16_C
(
c
Ë
	)
c

250 
	#INT32_C
(
c
Ë
	)
c

251 #i‡
__WORDSIZE
 == 64

252 
	#INT64_C
(
c
Ë¯## 
L


	)

254 
	#INT64_C
(
c
Ë¯## 
LL


	)

258 
	#UINT8_C
(
c
Ë
	)
c

259 
	#UINT16_C
(
c
Ë
	)
c

260 
	#UINT32_C
(
c
Ë¯## 
U


	)

261 #i‡
__WORDSIZE
 == 64

262 
	#UINT64_C
(
c
Ë¯## 
UL


	)

264 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

268 #i‡
__WORDSIZE
 == 64

269 
	#INTMAX_C
(
c
Ë¯## 
L


	)

270 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

272 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

273 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

276 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

278 
	#INT8_WIDTH
 8

	)

279 
	#UINT8_WIDTH
 8

	)

280 
	#INT16_WIDTH
 16

	)

281 
	#UINT16_WIDTH
 16

	)

282 
	#INT32_WIDTH
 32

	)

283 
	#UINT32_WIDTH
 32

	)

284 
	#INT64_WIDTH
 64

	)

285 
	#UINT64_WIDTH
 64

	)

287 
	#INT_LEAST8_WIDTH
 8

	)

288 
	#UINT_LEAST8_WIDTH
 8

	)

289 
	#INT_LEAST16_WIDTH
 16

	)

290 
	#UINT_LEAST16_WIDTH
 16

	)

291 
	#INT_LEAST32_WIDTH
 32

	)

292 
	#UINT_LEAST32_WIDTH
 32

	)

293 
	#INT_LEAST64_WIDTH
 64

	)

294 
	#UINT_LEAST64_WIDTH
 64

	)

296 
	#INT_FAST8_WIDTH
 8

	)

297 
	#UINT_FAST8_WIDTH
 8

	)

298 
	#INT_FAST16_WIDTH
 
__WORDSIZE


	)

299 
	#UINT_FAST16_WIDTH
 
__WORDSIZE


	)

300 
	#INT_FAST32_WIDTH
 
__WORDSIZE


	)

301 
	#UINT_FAST32_WIDTH
 
__WORDSIZE


	)

302 
	#INT_FAST64_WIDTH
 64

	)

303 
	#UINT_FAST64_WIDTH
 64

	)

305 
	#INTPTR_WIDTH
 
__WORDSIZE


	)

306 
	#UINTPTR_WIDTH
 
__WORDSIZE


	)

308 
	#INTMAX_WIDTH
 64

	)

309 
	#UINTMAX_WIDTH
 64

	)

311 
	#PTRDIFF_WIDTH
 
__WORDSIZE


	)

312 
	#SIG_ATOMIC_WIDTH
 32

	)

313 
	#SIZE_WIDTH
 
__WORDSIZE


	)

314 
	#WCHAR_WIDTH
 32

	)

315 
	#WINT_WIDTH
 32

	)

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


24 
	#_STDIO_H
 1

	)

26 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

27 
	~<bôs/libc-hódî-°¨t.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	#__√ed___va_li°


	)

36 
	~<°d¨g.h
>

38 
	~<bôs/ty≥s.h
>

39 
	~<bôs/ty≥s/__Âos_t.h
>

40 
	~<bôs/ty≥s/__Âos64_t.h
>

41 
	~<bôs/ty≥s/__FILE.h
>

42 
	~<bôs/ty≥s/FILE.h
>

43 
	~<bôs/ty≥s/°ru˘_FILE.h
>

45 #ifde‡
__USE_GNU


46 
	~<bôs/ty≥s/cookõ_io_fun˘i⁄s_t.h
>

49 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


50 #ifde‡
__GNUC__


51 #i‚de‡
_VA_LIST_DEFINED


52 
__gnuc_va_li°
 
	tva_li°
;

53 
	#_VA_LIST_DEFINED


	)

56 
	~<°d¨g.h
>

60 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__off_t_deföed


62 #i‚de‡
__USE_FILE_OFFSET64


63 
__off_t
 
	toff_t
;

65 
__off64_t
 
	toff_t
;

67 
	#__off_t_deföed


	)

69 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


70 
__off64_t
 
	toff64_t
;

71 
	#__off64_t_deföed


	)

75 #ifde‡
__USE_XOPEN2K8


76 #i‚de‡
__ssize_t_deföed


77 
__ssize_t
 
	tssize_t
;

78 
	#__ssize_t_deföed


	)

83 #i‚de‡
__USE_FILE_OFFSET64


84 
__Âos_t
 
	tÂos_t
;

86 
__Âos64_t
 
	tÂos_t
;

88 #ifde‡
__USE_LARGEFILE64


89 
__Âos64_t
 
	tÂos64_t
;

93 
	#_IOFBF
 0

	)

94 
	#_IOLBF
 1

	)

95 
	#_IONBF
 2

	)

99 
	#BUFSIZ
 8192

	)

104 
	#EOF
 (-1)

	)

109 
	#SEEK_SET
 0

	)

110 
	#SEEK_CUR
 1

	)

111 
	#SEEK_END
 2

	)

112 #ifde‡
__USE_GNU


113 
	#SEEK_DATA
 3

	)

114 
	#SEEK_HOLE
 4

	)

118 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


120 
	#P_tmpdú
 "/tmp"

	)

133 
	~<bôs/°dio_lim.h
>

137 
FILE
 *
°dö
;

138 
FILE
 *
°dout
;

139 
FILE
 *
°dîr
;

141 
	#°dö
 
°dö


	)

142 
	#°dout
 
°dout


	)

143 
	#°dîr
 
°dîr


	)

146 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

148 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

150 #ifde‡
__USE_ATFILE


152 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

153 c⁄° *
__√w
Ë
__THROW
;

156 #ifde‡
__USE_GNU


158 
	#RENAME_NOREPLACE
 (1 << 0)

	)

159 
	#RENAME_EXCHANGE
 (1 << 1)

	)

160 
	#RENAME_WHITEOUT
 (1 << 2)

	)

164 
	$ª«mót2
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

165 c⁄° *
__√w
, 
__Êags
Ë
__THROW
;

172 #i‚de‡
__USE_FILE_OFFSET64


173 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

175 #ifde‡
__REDIRECT


176 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

178 
	#tmpfûe
 
tmpfûe64


	)

182 #ifde‡
__USE_LARGEFILE64


183 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

187 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

189 #ifde‡
__USE_MISC


192 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

196 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


204 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

205 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

213 
	`f˛o£
 (
FILE
 *
__°ªam
);

218 
	`fÊush
 (
FILE
 *
__°ªam
);

220 #ifde‡
__USE_MISC


227 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

230 #ifde‡
__USE_GNU


237 
	`f˛o£Æl
 ();

241 #i‚de‡
__USE_FILE_OFFSET64


246 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

247 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

252 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

253 c⁄° *
__ª°ri˘
 
__modes
,

254 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

256 #ifde‡
__REDIRECT


257 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

258 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

259 
__wur
;

260 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

261 c⁄° *
__ª°ri˘
 
__modes
,

262 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

263 
__wur
;

265 
	#f›í
 
f›í64


	)

266 
	#‰e›í
 
‰e›í64


	)

269 #ifde‡
__USE_LARGEFILE64


270 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

271 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

272 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
,

274 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

277 #ifdef 
__USE_POSIX


279 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

282 #ifdef 
__USE_GNU


285 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

286 c⁄° *
__ª°ri˘
 
__modes
,

287 
cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

290 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

292 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

293 
__THROW
 
__wur
;

298 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

304 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

308 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

309 
__modes
, 
size_t
 
__n
Ë
__THROW
;

311 #ifdef 
__USE_MISC


314 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

315 
size_t
 
__size
Ë
__THROW
;

318 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

326 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

327 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

332 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

334 
	$•rötf
 (*
__ª°ri˘
 
__s
,

335 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

341 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

342 
__gnuc_va_li°
 
__¨g
);

347 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
);

349 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

350 
__gnuc_va_li°
 
__¨g
Ë
__THROWNL
;

352 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


354 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

355 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

356 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

358 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

359 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

360 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

363 #i‡
	`__GLIBC_USE
 (
LIB_EXT2
)

366 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

367 
__gnuc_va_li°
 
__¨g
)

368 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

369 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

370 c⁄° *
__ª°ri˘
 
__fmt
, ...)

371 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

372 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

373 c⁄° *
__ª°ri˘
 
__fmt
, ...)

374 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

377 #ifde‡
__USE_XOPEN2K8


379 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

380 
__gnuc_va_li°
 
__¨g
)

381 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

382 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

383 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

391 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

392 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

397 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

399 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

400 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

402 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

403 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

404 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

405 #ifde‡
__REDIRECT


409 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

410 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

411 
__isoc99_fsˇnf
Ë
__wur
;

412 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

413 
__isoc99_sˇnf
Ë
__wur
;

414 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

415 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

416 
__isoc99_ssˇnf
);

418 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

419 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

420 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

421 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

422 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

423 
	#fsˇnf
 
__isoc99_fsˇnf


	)

424 
	#sˇnf
 
__isoc99_sˇnf


	)

425 
	#ssˇnf
 
__isoc99_ssˇnf


	)

429 #ifdef 
__USE_ISOC99


434 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

435 
__gnuc_va_li°
 
__¨g
)

436 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

442 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

443 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

446 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

447 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

448 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

450 #i‡!
deföed
 
__USE_GNU
 \

451 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

452 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

453 #ifde‡
__REDIRECT


457 
	`__REDIRECT
 (
vfsˇnf
,

458 (
FILE
 *
__ª°ri˘
 
__s
,

459 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
),

460 
__isoc99_vfsˇnf
)

461 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

462 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

463 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

464 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

465 
	`__REDIRECT_NTH
 (
vssˇnf
,

466 (c⁄° *
__ª°ri˘
 
__s
,

467 c⁄° *
__ª°ri˘
 
__f‹m©
,

468 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

469 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

471 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

472 c⁄° *
__ª°ri˘
 
__f‹m©
,

473 
__gnuc_va_li°
 
__¨g
Ë
__wur
;

474 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

475 
__gnuc_va_li°
 
__¨g
Ë
__wur
;

476 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

477 c⁄° *
__ª°ri˘
 
__f‹m©
,

478 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

479 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

480 
	#vsˇnf
 
__isoc99_vsˇnf


	)

481 
	#vssˇnf
 
__isoc99_vssˇnf


	)

491 
	`fgëc
 (
FILE
 *
__°ªam
);

492 
	`gëc
 (
FILE
 *
__°ªam
);

498 
	`gëch¨
 ();

500 #ifde‡
__USE_POSIX199506


505 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

506 
	`gëch¨_u∆ocked
 ();

509 #ifde‡
__USE_MISC


516 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

527 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

528 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

534 
	`putch¨
 (
__c
);

536 #ifde‡
__USE_MISC


543 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

546 #ifde‡
__USE_POSIX199506


551 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

552 
	`putch¨_u∆ocked
 (
__c
);

556 #i‡
deföed
 
__USE_MISC
 \

557 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

559 
	`gëw
 (
FILE
 *
__°ªam
);

562 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

570 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

571 
__wur
;

573 #i‡
	`__GLIBC_USE
 (
DEPRECATED_GETS
)

583 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

586 #ifde‡
__USE_GNU


593 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

594 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

598 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

609 
__ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

610 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

611 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

612 
__ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

613 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

614 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

622 
__ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

623 
size_t
 *
__ª°ri˘
 
__n
,

624 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

632 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

638 
	`puts
 (c⁄° *
__s
);

645 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

652 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

653 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

658 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

659 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

661 #ifde‡
__USE_GNU


668 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

669 
FILE
 *
__ª°ri˘
 
__°ªam
);

672 #ifde‡
__USE_MISC


679 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

680 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

681 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

682 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

690 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

695 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

700 
	`ªwöd
 (
FILE
 *
__°ªam
);

707 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


708 #i‚de‡
__USE_FILE_OFFSET64


713 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

718 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

720 #ifde‡
__REDIRECT


721 
	`__REDIRECT
 (
f£eko
,

722 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

723 
f£eko64
);

724 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

726 
	#f£eko
 
f£eko64


	)

727 
	#·ñlo
 
·ñlo64


	)

732 #i‚de‡
__USE_FILE_OFFSET64


737 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

742 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

744 #ifde‡
__REDIRECT


745 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

746 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

747 
	`__REDIRECT
 (
f£ços
,

748 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

750 
	#fgëpos
 
fgëpos64


	)

751 
	#f£ços
 
f£ços64


	)

755 #ifde‡
__USE_LARGEFILE64


756 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

757 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

758 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

759 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

763 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

765 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

767 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

769 #ifde‡
__USE_MISC


771 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

772 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

773 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

781 
	`≥º‹
 (c⁄° *
__s
);

787 
	~<bôs/sys_îæi°.h
>

790 #ifdef 
__USE_POSIX


792 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

795 #ifde‡
__USE_MISC


797 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

801 #ifde‡
__USE_POSIX2


806 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

812 
	`p˛o£
 (
FILE
 *
__°ªam
);

816 #ifdef 
__USE_POSIX


818 *
	$˘îmid
 (*
__s
Ë
__THROW
;

822 #i‡(
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
Ë|| deföed 
__USE_GNU


824 *
	`cu£rid
 (*
__s
);

828 #ifdef 
__USE_GNU


829 
ob°ack
;

832 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

833 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

834 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

835 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

836 c⁄° *
__ª°ri˘
 
__f‹m©
,

837 
__gnuc_va_li°
 
__¨gs
)

838 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

842 #ifde‡
__USE_POSIX199506


846 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

850 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

853 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

856 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


859 
	~<bôs/gë›t_posix.h
>

864 
	`__uÊow
 (
FILE
 *);

865 
	`__ovîÊow
 (
FILE
 *, );

869 #ifde‡
__USE_EXTERN_INLINES


870 
	~<bôs/°dio.h
>

872 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


873 
	~<bôs/°dio2.h
>

875 #ifde‡
__LDBL_COMPAT


876 
	~<bôs/°dio-ldbl.h
>

879 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

25 
	~<bôs/libc-hódî-°¨t.h
>

28 
	#__√ed_size_t


	)

29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

31 
	~<°ddef.h
>

33 
	g__BEGIN_DECLS


35 
	#_STDLIB_H
 1

	)

37 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


39 
	~<bôs/waôÊags.h
>

40 
	~<bôs/waô°©us.h
>

43 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (°©us)

	)

44 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (°©us)

	)

45 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (°©us)

	)

46 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (°©us)

	)

47 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (°©us)

	)

48 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (°©us)

	)

49 #ifde‡
__WIFCONTINUED


50 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (°©us)

	)

55 
	~<bôs/Êﬂä.h
>

60 
	mquŸ
;

61 
	mªm
;

62 } 
	tdiv_t
;

65 #i‚de‡
__ldiv_t_deföed


68 
	mquŸ
;

69 
	mªm
;

70 } 
	tldiv_t
;

71 
	#__ldiv_t_deföed
 1

	)

74 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


76 
__exãnsi⁄__
 struct

78 
	mquŸ
;

79 
	mªm
;

80 } 
	tŒdiv_t
;

81 
	#__Œdiv_t_deföed
 1

	)

86 
	#RAND_MAX
 2147483647

	)

91 
	#EXIT_FAILURE
 1

	)

92 
	#EXIT_SUCCESS
 0

	)

96 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

97 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

101 
	$©of
 (c⁄° *
__≈å
)

102 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

104 
	$©oi
 (c⁄° *
__≈å
)

105 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

107 
	$©ﬁ
 (c⁄° *
__≈å
)

108 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

110 #ifde‡
__USE_ISOC99


112 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

113 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

117 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

118 **
__ª°ri˘
 
__íd±r
)

119 
__THROW
 
	`__n⁄nuŒ
 ((1));

121 #ifdef 
__USE_ISOC99


123 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

124 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

126 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

127 **
__ª°ri˘
 
__íd±r
)

128 
__THROW
 
	`__n⁄nuŒ
 ((1));

133 #i‡
__HAVE_FLOAT16
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

134 
_Flﬂt16
 
	$°πof16
 (c⁄° *
__ª°ri˘
 
__≈å
,

135 **
__ª°ri˘
 
__íd±r
)

136 
__THROW
 
	`__n⁄nuŒ
 ((1));

139 #i‡
__HAVE_FLOAT32
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

140 
_Flﬂt32
 
	$°πof32
 (c⁄° *
__ª°ri˘
 
__≈å
,

141 **
__ª°ri˘
 
__íd±r
)

142 
__THROW
 
	`__n⁄nuŒ
 ((1));

145 #i‡
__HAVE_FLOAT64
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

146 
_Flﬂt64
 
	$°πof64
 (c⁄° *
__ª°ri˘
 
__≈å
,

147 **
__ª°ri˘
 
__íd±r
)

148 
__THROW
 
	`__n⁄nuŒ
 ((1));

151 #i‡
__HAVE_FLOAT128
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

152 
_Flﬂt128
 
	$°πof128
 (c⁄° *
__ª°ri˘
 
__≈å
,

153 **
__ª°ri˘
 
__íd±r
)

154 
__THROW
 
	`__n⁄nuŒ
 ((1));

157 #i‡
__HAVE_FLOAT32X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

158 
_Flﬂt32x
 
	$°πof32x
 (c⁄° *
__ª°ri˘
 
__≈å
,

159 **
__ª°ri˘
 
__íd±r
)

160 
__THROW
 
	`__n⁄nuŒ
 ((1));

163 #i‡
__HAVE_FLOAT64X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

164 
_Flﬂt64x
 
	$°πof64x
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

169 #i‡
__HAVE_FLOAT128X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

170 
_Flﬂt128x
 
	$°πof128x
 (c⁄° *
__ª°ri˘
 
__≈å
,

171 **
__ª°ri˘
 
__íd±r
)

172 
__THROW
 
	`__n⁄nuŒ
 ((1));

176 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1));

180 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

181 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

182 
__THROW
 
	`__n⁄nuŒ
 ((1));

184 #ifde‡
__USE_MISC


186 
__exãnsi⁄__


187 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

191 
__exãnsi⁄__


192 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

193 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

194 
__THROW
 
	`__n⁄nuŒ
 ((1));

197 #ifde‡
__USE_ISOC99


199 
__exãnsi⁄__


200 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

204 
__exãnsi⁄__


205 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

206 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

207 
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

212 
	$°r‰omd
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

213 
__f
)

214 
__THROW
 
	`__n⁄nuŒ
 ((3));

216 
	$°r‰omf
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

217 
__f
)

218 
__THROW
 
	`__n⁄nuŒ
 ((3));

220 
	$°r‰oml
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

221 
__f
)

222 
__THROW
 
	`__n⁄nuŒ
 ((3));

225 #i‡
__HAVE_FLOAT16
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

226 
	$°r‰omf16
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

227 
_Flﬂt16
 
__f
)

228 
__THROW
 
	`__n⁄nuŒ
 ((3));

231 #i‡
__HAVE_FLOAT32
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

232 
	$°r‰omf32
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

233 
_Flﬂt32
 
__f
)

234 
__THROW
 
	`__n⁄nuŒ
 ((3));

237 #i‡
__HAVE_FLOAT64
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

238 
	$°r‰omf64
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

239 
_Flﬂt64
 
__f
)

240 
__THROW
 
	`__n⁄nuŒ
 ((3));

243 #i‡
__HAVE_FLOAT128
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

244 
	$°r‰omf128
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

245 
_Flﬂt128
 
__f
)

246 
__THROW
 
	`__n⁄nuŒ
 ((3));

249 #i‡
__HAVE_FLOAT32X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

250 
	$°r‰omf32x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

251 
_Flﬂt32x
 
__f
)

252 
__THROW
 
	`__n⁄nuŒ
 ((3));

255 #i‡
__HAVE_FLOAT64X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

256 
	$°r‰omf64x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

257 
_Flﬂt64x
 
__f
)

258 
__THROW
 
	`__n⁄nuŒ
 ((3));

261 #i‡
__HAVE_FLOAT128X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

262 
	$°r‰omf128x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

263 
_Flﬂt128x
 
__f
)

264 
__THROW
 
	`__n⁄nuŒ
 ((3));

268 #ifde‡
__USE_GNU


272 
	~<bôs/ty≥s/loˇÀ_t.h
>

274 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

275 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

276 
loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

278 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

279 **
__ª°ri˘
 
__íd±r
,

280 
__ba£
, 
loˇÀ_t
 
__loc
)

281 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

283 
__exãnsi⁄__


284 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

285 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

286 
loˇÀ_t
 
__loc
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

289 
__exãnsi⁄__


290 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

291 **
__ª°ri˘
 
__íd±r
,

292 
__ba£
, 
loˇÀ_t
 
__loc
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

295 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

296 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

299 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

300 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

301 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

303 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

304 **
__ª°ri˘
 
__íd±r
,

305 
loˇÀ_t
 
__loc
)

306 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

308 #i‡
__HAVE_FLOAT16


309 
_Flﬂt16
 
	$°πof16_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

310 **
__ª°ri˘
 
__íd±r
,

311 
loˇÀ_t
 
__loc
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

315 #i‡
__HAVE_FLOAT32


316 
_Flﬂt32
 
	$°πof32_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

317 **
__ª°ri˘
 
__íd±r
,

318 
loˇÀ_t
 
__loc
)

319 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

322 #i‡
__HAVE_FLOAT64


323 
_Flﬂt64
 
	$°πof64_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

324 **
__ª°ri˘
 
__íd±r
,

325 
loˇÀ_t
 
__loc
)

326 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

329 #i‡
__HAVE_FLOAT128


330 
_Flﬂt128
 
	$°πof128_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

331 **
__ª°ri˘
 
__íd±r
,

332 
loˇÀ_t
 
__loc
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

336 #i‡
__HAVE_FLOAT32X


337 
_Flﬂt32x
 
	$°πof32x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

338 **
__ª°ri˘
 
__íd±r
,

339 
loˇÀ_t
 
__loc
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

343 #i‡
__HAVE_FLOAT64X


344 
_Flﬂt64x
 
	$°πof64x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

345 **
__ª°ri˘
 
__íd±r
,

346 
loˇÀ_t
 
__loc
)

347 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

350 #i‡
__HAVE_FLOAT128X


351 
_Flﬂt128x
 
	$°πof128x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

352 **
__ª°ri˘
 
__íd±r
,

353 
loˇÀ_t
 
__loc
)

354 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

359 #ifde‡
__USE_EXTERN_INLINES


360 
__exã∫_ölöe
 

361 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

363  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

364 
	}
}

365 
__exã∫_ölöe
 

366 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

368  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

369 
	}
}

371 #ifde‡
__USE_ISOC99


372 
__exãnsi⁄__
 
__exã∫_ölöe
 

373 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

375  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

376 
	}
}

381 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


385 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

388 
	$a64l
 (c⁄° *
__s
)

389 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

393 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


394 
	~<sys/ty≥s.h
>

401 
	$øndom
 (Ë
__THROW
;

404 
	$§™dom
 (
__£ed
Ë
__THROW
;

410 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

411 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

415 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

418 #ifde‡
__USE_MISC


423 
	søndom_d©a


425 
öt32_t
 *
Âå
;

426 
öt32_t
 *
Ωå
;

427 
öt32_t
 *
°©e
;

428 
ønd_ty≥
;

429 
ønd_deg
;

430 
ønd_£p
;

431 
öt32_t
 *
íd_±r
;

434 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

435 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

437 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

438 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

441 
size_t
 
__°©ñí
,

442 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

443 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

445 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

446 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

447 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$ønd
 (Ë
__THROW
;

455 
	$§™d
 (
__£ed
Ë
__THROW
;

457 #ifde‡
__USE_POSIX199506


459 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

463 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


467 
	$dønd48
 (Ë
__THROW
;

468 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

471 
	$Ã™d48
 (Ë
__THROW
;

472 
	$ƒ™d48
 (
__xsubi
[3])

473 
__THROW
 
	`__n⁄nuŒ
 ((1));

476 
	$mønd48
 (Ë
__THROW
;

477 
	$jønd48
 (
__xsubi
[3])

478 
__THROW
 
	`__n⁄nuŒ
 ((1));

481 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

482 *
	$£ed48
 (
__£ed16v
[3])

483 
__THROW
 
	`__n⁄nuŒ
 ((1));

484 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

486 #ifde‡
__USE_MISC


490 
	sdønd48_d©a


492 
__x
[3];

493 
__ﬁd_x
[3];

494 
__c
;

495 
__öô
;

496 
__exãnsi⁄__
 
__a
;

501 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

502 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

503 
	$î™d48_r
 (
__xsubi
[3],

504 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

505 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

508 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

509 *
__ª°ri˘
 
__ªsu…
)

510 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

511 
	$ƒ™d48_r
 (
__xsubi
[3],

512 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

513 *
__ª°ri˘
 
__ªsu…
)

514 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

517 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

518 *
__ª°ri˘
 
__ªsu…
)

519 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

520 
	$jønd48_r
 (
__xsubi
[3],

521 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

522 *
__ª°ri˘
 
__ªsu…
)

523 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

526 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

527 
__THROW
 
	`__n⁄nuŒ
 ((2));

529 
	$£ed48_r
 (
__£ed16v
[3],

530 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

532 
	$lc⁄g48_r
 (
__∑øm
[7],

533 
dønd48_d©a
 *
__buf„r
)

534 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

539 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

541 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

542 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

549 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

550 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

552 #ifde‡
__USE_GNU


558 *
	$ªÆloˇºay
 (*
__±r
, 
size_t
 
__nmemb
, size_à
__size
)

559 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

563 
	$‰ì
 (*
__±r
Ë
__THROW
;

565 #ifde‡
__USE_MISC


566 
	~<Æloˇ.h
>

569 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

570 || 
deföed
 
__USE_MISC


572 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

575 #ifde‡
__USE_XOPEN2K


577 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

581 #ifde‡
__USE_ISOC11


583 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

584 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

588 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

592 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

594 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


596 #ifde‡
__˝lu•lus


597 "C++" 
	`©_quick_exô
 ((*
__func
) ())

598 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

600 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

604 #ifdef 
__USE_MISC


607 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

608 
__THROW
 
	`__n⁄nuŒ
 ((1));

614 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

616 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


620 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

623 #ifde‡
__USE_ISOC99


626 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

631 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

633 #ifde‡
__USE_GNU


636 *
	$£cuª_gëív
 (c⁄° *
__«me
)

637 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

640 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


644 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

647 #ifde‡
__USE_XOPEN2K


650 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

651 
__THROW
 
	`__n⁄nuŒ
 ((2));

654 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

657 #ifdef 
__USE_MISC


661 
	$˛óªnv
 (Ë
__THROW
;

665 #i‡
deföed
 
__USE_MISC
 \

666 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

672 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

675 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


684 #i‚de‡
__USE_FILE_OFFSET64


685 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

687 #ifde‡
__REDIRECT


688 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

689 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

691 
	#mk°emp
 
mk°emp64


	)

694 #ifde‡
__USE_LARGEFILE64


695 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

699 #ifde‡
__USE_MISC


706 #i‚de‡
__USE_FILE_OFFSET64


707 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

709 #ifde‡
__REDIRECT


710 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

711 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

713 
	#mk°emps
 
mk°emps64


	)

716 #ifde‡
__USE_LARGEFILE64


717 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

718 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

722 #ifde‡
__USE_XOPEN2K8


728 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

731 #ifde‡
__USE_GNU


738 #i‚de‡
__USE_FILE_OFFSET64


739 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

741 #ifde‡
__REDIRECT


742 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

743 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

745 
	#mko°emp
 
mko°emp64


	)

748 #ifde‡
__USE_LARGEFILE64


749 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

758 #i‚de‡
__USE_FILE_OFFSET64


759 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

760 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

762 #ifde‡
__REDIRECT


763 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

764 
__Êags
), 
mko°emps64
)

765 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

767 
	#mko°emps
 
mko°emps64


	)

770 #ifde‡
__USE_LARGEFILE64


771 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

772 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

781 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

784 #ifdef 
__USE_GNU


787 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

788 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

791 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


797 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

798 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

803 #i‚de‡
__COMPAR_FN_T


804 
	#__COMPAR_FN_T


	)

805 (*
	t__com∑r_‚_t
) (const *, const *);

807 #ifdef 
__USE_GNU


808 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

811 #ifde‡
__USE_GNU


812 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

817 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

818 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

819 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

821 #ifde‡
__USE_EXTERN_INLINES


822 
	~<bôs/°dlib-b£¨ch.h
>

827 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

828 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

829 #ifde‡
__USE_GNU


830 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

831 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

832 
	`__n⁄nuŒ
 ((1, 4));

837 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

838 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

840 #ifde‡
__USE_ISOC99


841 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

842 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

849 
div_t
 
	$div
 (
__numî
, 
__díom
)

850 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

851 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

852 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

854 #ifde‡
__USE_ISOC99


855 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

856 
__díom
)

857 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

861 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

862 || 
deföed
 
__USE_MISC


869 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

870 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

875 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

876 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

881 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

882 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

885 #ifde‡
__USE_MISC


887 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

888 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

889 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

890 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

891 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

892 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

893 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

894 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

899 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

900 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

901 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

902 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

903 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

904 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

906 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

907 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

908 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

909 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

910 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

911 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

912 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

913 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

919 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

922 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

923 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

926 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

930 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

931 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

933 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

934 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

935 
__THROW
;

938 #ifde‡
__USE_MISC


943 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

947 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


954 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

955 *c⁄° *
__ª°ri˘
 
__tokís
,

956 **
__ª°ri˘
 
__vÆuï
)

957 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

963 #ifde‡
__USE_XOPEN2KXSI


965 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

968 #ifde‡
__USE_XOPEN_EXTENDED


973 
	$gø¡±
 (
__fd
Ë
__THROW
;

977 
	$u∆ock±
 (
__fd
Ë
__THROW
;

982 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

985 #ifde‡
__USE_GNU


989 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

990 
__THROW
 
	`__n⁄nuŒ
 ((2));

993 
	`gë±
 ();

996 #ifde‡
__USE_MISC


1000 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

1001 
__THROW
 
	`__n⁄nuŒ
 ((1));

1004 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K


1007 
	$ây¶Ÿ
 (Ë
__THROW
;

1010 
	~<bôs/°dlib-Êﬂt.h
>

1013 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1014 
	~<bôs/°dlib.h
>

1016 #ifde‡
__LDBL_COMPAT


1017 
	~<bôs/°dlib-ldbl.h
>

1020 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

37 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

42 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

43 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

46 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

52 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


53 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

54 
__c
, 
size_t
 
__n
)

55 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

60 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

63 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

64 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

67 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


70 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

71 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

72 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

73 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

75 #ifde‡
__OPTIMIZE__


76 
__exã∫_Æways_ölöe
 *

77 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


79  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

82 
__exã∫_Æways_ölöe
 const *

83 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


85  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

88 
	}
}

90 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

91 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

94 #ifde‡
__USE_GNU


97 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


98 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

99 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

100 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

101 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

103 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

104 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

108 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


109 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

110 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

112 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

121 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

122 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

124 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

125 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

129 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

132 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

133 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

137 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

139 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

140 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

146 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

147 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

148 
__THROW
 
	`__n⁄nuŒ
 ((2));

150 #ifde‡
__USE_XOPEN2K8


152 
	~<bôs/ty≥s/loˇÀ_t.h
>

155 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
loˇÀ_t
 
__l
)

156 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

159 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

160 
loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

163 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8
 \

164 || 
	$__GLIBC_USE
 (
LIB_EXT2
))

166 *
	$°rdup
 (c⁄° *
__s
)

167 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

173 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

174 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

175 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

178 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


180 
	#°rdu∑
(
s
) \

181 (
__exãnsi⁄__
 \

183 c⁄° *
__ﬁd
 = (
s
); \

184 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

185 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

186 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

187 
	}
}))

	)

190 
	#°∫du∑
(
s
, 
n
) \

191 (
__exãnsi⁄__
 \

193 c⁄° *
__ﬁd
 = (
s
); \

194 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

195 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

196 
__√w
[
__Àn
] = '\0'; \

197 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

198 }))

	)

202 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


205 *
°rchr
 (*
__s
, 
__c
)

206 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

207 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

208 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

210 #ifde‡
__OPTIMIZE__


211 
__exã∫_Æways_ölöe
 *

212 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


214  
__buûtö_°rchr
 (
__s
, 
__c
);

217 
__exã∫_Æways_ölöe
 const *

218 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


220  
__buûtö_°rchr
 (
__s
, 
__c
);

225 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

226 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

229 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


232 *
	`°ºchr
 (*
__s
, 
__c
)

233 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

234 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

235 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__OPTIMIZE__


238 
__exã∫_Æways_ölöe
 *

239 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


241  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

244 
__exã∫_Æways_ölöe
 const *

245 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


247  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

250 
	}
}

252 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

253 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

256 #ifde‡
__USE_GNU


259 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


260 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

261 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

262 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

263 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

265 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

266 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

272 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

273 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

276 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

277 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

279 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


282 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

283 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

284 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

285 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

287 #ifde‡
__OPTIMIZE__


288 
__exã∫_Æways_ölöe
 *

289 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


291  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

294 
__exã∫_Æways_ölöe
 const *

295 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


297  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

300 
	}
}

302 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

303 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

306 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


309 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

310 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

311 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

312 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

314 #ifde‡
__OPTIMIZE__


315 
__exã∫_Æways_ölöe
 *

316 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


318  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

321 
__exã∫_Æways_ölöe
 const *

322 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


324  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

327 
	}
}

329 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

330 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

335 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

336 
__THROW
 
	`__n⁄nuŒ
 ((2));

340 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

341 c⁄° *
__ª°ri˘
 
__dñim
,

342 **
__ª°ri˘
 
__ßve_±r
)

343 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

344 #ifde‡
__USE_POSIX


345 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

346 **
__ª°ri˘
 
__ßve_±r
)

347 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

350 #ifde‡
__USE_GNU


352 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


353 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

354 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

355 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

356 c⁄° *
__√edÀ
)

357 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

359 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

360 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

364 #ifde‡
__USE_GNU


368 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

369 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

370 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

374 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

375 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

377 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

378 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

379 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

384 
size_t
 
	$°æí
 (c⁄° *
__s
)

385 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

387 #ifdef 
__USE_XOPEN2K8


390 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

391 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

396 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

397 #ifde‡
__USE_XOPEN2K


405 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


408 #ifde‡
__REDIRECT_NTH


409 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

410 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

411 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

413 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

414 
__THROW
 
	`__n⁄nuŒ
 ((2));

415 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

420 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

425 #ifde‡
__USE_XOPEN2K8


427 *
	$°ªº‹_l
 (
__î∫um
, 
loˇÀ_t
 
__l
Ë
__THROW
;

430 #ifde‡
__USE_MISC


431 
	~<°rögs.h
>

435 
	$ex∂icô_bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

439 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

440 c⁄° *
__ª°ri˘
 
__dñim
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 #ifdef 
__USE_XOPEN2K8


446 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

449 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

451 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

452 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

456 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

457 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

458 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

460 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

464 #ifdef 
__USE_GNU


466 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

467 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

470 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

473 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

475 #i‚de‡
ba£«me


480 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


481 "C++" *
	$ba£«me
 (*
__fûíame
)

482 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

483 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

484 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

486 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

491 #i‡
	`__GNUC_PREREQ
 (3,4)

492 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


494 
	~<bôs/°rög_f‹tifõd.h
>

498 
__END_DECLS


	@/usr/include/sys/time.h

18 #i‚de‡
_SYS_TIME_H


19 
	#_SYS_TIME_H
 1

	)

21 
	~<„©uªs.h
>

23 
	~<bôs/ty≥s.h
>

24 
	~<bôs/ty≥s/time_t.h
>

25 
	~<bôs/ty≥s/°ru˘_timevÆ.h
>

27 #i‚de‡
__su£c⁄ds_t_deföed


28 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

29 
	#__su£c⁄ds_t_deföed


	)

32 
	~<sys/£À˘.h
>

34 
	g__BEGIN_DECLS


36 #ifde‡
__USE_GNU


38 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

39 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

40 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

41 }

	)

42 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

43 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

44 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

45 }

	)

49 #ifde‡
__USE_MISC


52 
	stimez⁄e


54 
	mtz_möuãswe°
;

55 
	mtz_d°time
;

58 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

60 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

68 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

69 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

71 #ifde‡
__USE_MISC


74 
	$£âimeofday
 (c⁄° 
timevÆ
 *
__tv
,

75 c⁄° 
timez⁄e
 *
__tz
)

76 
__THROW
;

82 
	$adjtime
 (c⁄° 
timevÆ
 *
__dñè
,

83 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

88 
	e__ôimî_which


91 
ITIMER_REAL
 = 0,

92 
	#ITIMER_REAL
 
ITIMER_REAL


	)

94 
ITIMER_VIRTUAL
 = 1,

95 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

98 
ITIMER_PROF
 = 2

99 
	#ITIMER_PROF
 
ITIMER_PROF


	)

104 
	sôimîvÆ


107 
timevÆ
 
ô_öãrvÆ
;

109 
timevÆ
 
ô_vÆue
;

112 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


115 
__ôimî_which
 
	t__ôimî_which_t
;

117 
	t__ôimî_which_t
;

122 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

123 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

128 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

129 c⁄° 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

130 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

135 
	$utimes
 (c⁄° *
__fûe
, c⁄° 
timevÆ
 
__tvp
[2])

136 
__THROW
 
	`__n⁄nuŒ
 ((1));

138 #ifde‡
__USE_MISC


140 
	$lutimes
 (c⁄° *
__fûe
, c⁄° 
timevÆ
 
__tvp
[2])

141 
__THROW
 
	`__n⁄nuŒ
 ((1));

144 
	$futimes
 (
__fd
, c⁄° 
timevÆ
 
__tvp
[2]Ë
__THROW
;

147 #ifde‡
__USE_GNU


151 
	$futimeßt
 (
__fd
, c⁄° *
__fûe
,

152 c⁄° 
timevÆ
 
__tvp
[2]Ë
__THROW
;

156 #ifde‡
__USE_MISC


159 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

160 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

161 
	#timîcmp
(
a
, 
b
, 
CMP
) \

162 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

163 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

164 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

165 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

167 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

168 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

169 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

171 ++(
ªsu…
)->
tv_£c
; \

172 (
ªsu…
)->
tv_u£c
 -= 1000000; \

174 
	}
} 0)

	)

175 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

177 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

178 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

179 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

180 --(
ªsu…
)->
tv_£c
; \

181 (
ªsu…
)->
tv_u£c
 += 1000000; \

183 } 0)

	)

186 
	g__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

70 
	#_POSIX2_C_VERSION
 
__POSIX2_THIS_VERSION


	)

74 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

78 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

82 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

86 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

89 #ifde‡
__USE_XOPEN2K8


90 
	#_XOPEN_VERSION
 700

	)

91 #ñi‡
deföed
 
__USE_XOPEN2K


92 
	#_XOPEN_VERSION
 600

	)

93 #ñi‡
deföed
 
__USE_UNIX98


94 
	#_XOPEN_VERSION
 500

	)

96 
	#_XOPEN_VERSION
 4

	)

100 
	#_XOPEN_XCU_VERSION
 4

	)

103 
	#_XOPEN_XPG2
 1

	)

104 
	#_XOPEN_XPG3
 1

	)

105 
	#_XOPEN_XPG4
 1

	)

108 
	#_XOPEN_UNIX
 1

	)

112 
	#_XOPEN_ENH_I18N
 1

	)

115 
	#_XOPEN_LEGACY
 1

	)

202 
	~<bôs/posix_›t.h
>

205 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


206 
	~<bôs/ívú⁄míts.h
>

210 
	#STDIN_FILENO
 0

	)

211 
	#STDOUT_FILENO
 1

	)

212 
	#STDERR_FILENO
 2

	)

217 
	~<bôs/ty≥s.h
>

219 #i‚def 
__ssize_t_deföed


220 
__ssize_t
 
	tssize_t
;

221 
	#__ssize_t_deföed


	)

224 
	#__√ed_size_t


	)

225 
	#__√ed_NULL


	)

226 
	~<°ddef.h
>

228 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


231 #i‚de‡
__gid_t_deföed


232 
__gid_t
 
	tgid_t
;

233 
	#__gid_t_deföed


	)

236 #i‚de‡
__uid_t_deföed


237 
__uid_t
 
	tuid_t
;

238 
	#__uid_t_deföed


	)

241 #i‚de‡
__off_t_deföed


242 #i‚de‡
__USE_FILE_OFFSET64


243 
__off_t
 
	toff_t
;

245 
__off64_t
 
	toff_t
;

247 
	#__off_t_deföed


	)

249 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


250 
__off64_t
 
	toff64_t
;

251 
	#__off64_t_deföed


	)

254 #i‚de‡
__u£c⁄ds_t_deföed


255 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

256 
	#__u£c⁄ds_t_deföed


	)

259 #i‚de‡
__pid_t_deföed


260 
__pid_t
 
	tpid_t
;

261 
	#__pid_t_deföed


	)

265 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


266 #i‚de‡
__öçå_t_deföed


267 
__öçå_t
 
	töçå_t
;

268 
	#__öçå_t_deföed


	)

272 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


273 #i‚de‡
__sockÀn_t_deföed


274 
__sockÀn_t
 
	tsockÀn_t
;

275 
	#__sockÀn_t_deföed


	)

281 
	#R_OK
 4

	)

282 
	#W_OK
 2

	)

283 
	#X_OK
 1

	)

284 
	#F_OK
 0

	)

287 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_GNU


292 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

300 #ifde‡
__USE_ATFILE


304 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

310 #i‚def 
_STDIO_H


311 
	#SEEK_SET
 0

	)

312 
	#SEEK_CUR
 1

	)

313 
	#SEEK_END
 2

	)

314 #ifde‡
__USE_GNU


315 
	#SEEK_DATA
 3

	)

316 
	#SEEK_HOLE
 4

	)

320 #i‡
deföed
 
__USE_MISC
 && !deföed 
L_SET


322 
	#L_SET
 
SEEK_SET


	)

323 
	#L_INCR
 
SEEK_CUR


	)

324 
	#L_XTND
 
SEEK_END


	)

333 #i‚de‡
__USE_FILE_OFFSET64


334 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

336 #ifde‡
__REDIRECT_NTH


337 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

338 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

339 
l£ek64
);

341 
	#l£ek
 
l£ek64


	)

344 #ifde‡
__USE_LARGEFILE64


345 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

346 
__THROW
;

353 
	`˛o£
 (
__fd
);

360 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

366 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

368 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


369 #i‚de‡
__USE_FILE_OFFSET64


376 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

377 
__off_t
 
__off£t
Ë
__wur
;

384 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

385 
__off_t
 
__off£t
Ë
__wur
;

387 #ifde‡
__REDIRECT


388 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

389 
__off64_t
 
__off£t
),

390 
¥ód64
Ë
__wur
;

391 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

392 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

393 
pwrôe64
Ë
__wur
;

395 
	#¥ód
 
¥ód64


	)

396 
	#pwrôe
 
pwrôe64


	)

400 #ifde‡
__USE_LARGEFILE64


404 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

405 
__off64_t
 
__off£t
Ë
__wur
;

408 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

409 
__off64_t
 
__off£t
Ë
__wur
;

417 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

419 #ifde‡
__USE_GNU


422 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

432 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

444 
	`¶ìp
 (
__£c⁄ds
);

446 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

447 || 
deföed
 
__USE_MISC


452 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

453 
__THROW
;

460 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

469 
	`∑u£
 ();

473 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

474 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

476 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


478 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

483 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

484 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

488 #ifde‡
__USE_ATFILE


491 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

492 
__gid_t
 
__group
, 
__Êag
)

493 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

497 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

499 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


501 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

511 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

513 #ifdef 
__USE_GNU


517 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

520 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

521 || 
deföed
 
__USE_MISC


525 *
	$gëwd
 (*
__buf
)

526 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

531 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

534 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

536 #ifde‡
__USE_GNU


539 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

543 **
__ívú⁄
;

544 #ifde‡
__USE_GNU


545 **
ívú⁄
;

551 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

552 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

554 #ifde‡
__USE_XOPEN2K8


557 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

558 
__THROW
 
	`__n⁄nuŒ
 ((2));

563 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

564 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

568 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

573 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

578 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

585 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 #ifde‡
__USE_GNU


590 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

591 *c⁄° 
__ívp
[])

592 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

596 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


598 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

603 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

609 
	~<bôs/c⁄‚ame.h
>

612 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

613 
__THROW
 
	`__n⁄nuŒ
 ((1));

616 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

619 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

621 #ifdef 
__USE_POSIX2


623 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

628 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

631 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

637 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

638 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


639 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

646 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


660 
	$£çgΩ
 (Ë
__THROW
;

667 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

669 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


671 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

675 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

678 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

681 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

689 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

691 #ifdef 
__USE_GNU


693 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

700 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

702 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


705 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

708 #ifde‡
__USE_XOPEN2K


710 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

717 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

719 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


722 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

725 #ifde‡
__USE_XOPEN2K


727 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

730 #ifde‡
__USE_GNU


733 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

734 
__THROW
;

738 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

739 
__THROW
;

743 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

744 
__THROW
 
__wur
;

748 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

749 
__THROW
 
__wur
;

756 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

758 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

759 || 
deföed
 
__USE_MISC


764 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

770 *
	$ây«me
 (
__fd
Ë
__THROW
;

774 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

775 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

779 
	$ißây
 (
__fd
Ë
__THROW
;

781 #ifde‡
__USE_MISC


784 
	$ây¶Ÿ
 (Ë
__THROW
;

789 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

790 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

792 #ifde‡
__USE_ATFILE


795 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

796 c⁄° *
__to
, 
__Êags
)

797 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

800 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


802 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

803 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

808 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

809 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

810 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

813 #ifde‡
__USE_ATFILE


815 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

816 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

819 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

820 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

821 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

825 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

827 #ifde‡
__USE_ATFILE


829 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

830 
__THROW
 
	`__n⁄nuŒ
 ((2));

834 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

838 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

841 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

848 *
	`gëlogö
 ();

849 #ifde‡
__USE_POSIX199506


856 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

859 #ifdef 
__USE_MISC


861 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

865 #ifdef 
__USE_POSIX2


869 
	~<bôs/gë›t_posix.h
>

873 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


877 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

881 #i‡
deföed
 
__USE_MISC


884 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

885 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

889 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

895 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

896 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

897 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

898 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

904 
	$vh™gup
 (Ë
__THROW
;

907 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

915 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

916 
size_t
 
__off£t
, 
__sˇÀ
)

917 
__THROW
 
	`__n⁄nuŒ
 ((1));

923 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

927 *
	$gëu£rshñl
 (Ë
__THROW
;

928 
	$ídu£rshñl
 (Ë
__THROW
;

929 
	$£tu£rshñl
 (Ë
__THROW
;

935 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

939 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

942 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

946 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

954 
	`fsync
 (
__fd
);

957 #ifde‡
__USE_GNU


960 
	$syncfs
 (
__fd
Ë
__THROW
;

964 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


967 
	`gëho°id
 ();

970 
	$sync
 (Ë
__THROW
;

973 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K


976 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

981 
	$gëdèbÀsize
 (Ë
__THROW
;

987 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


990 #i‚de‡
__USE_FILE_OFFSET64


991 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

992 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

994 #ifde‡
__REDIRECT_NTH


995 
	`__REDIRECT_NTH
 (
åunˇã
,

996 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

997 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

999 
	#åunˇã
 
åunˇã64


	)

1002 #ifde‡
__USE_LARGEFILE64


1003 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1004 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1009 #i‡
deföed
 
__USE_POSIX199309
 \

1010 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1013 #i‚de‡
__USE_FILE_OFFSET64


1014 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1016 #ifde‡
__REDIRECT_NTH


1017 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1018 
·runˇã64
Ë
__wur
;

1020 
	#·runˇã
 
·runˇã64


	)

1023 #ifde‡
__USE_LARGEFILE64


1024 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1030 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1031 || 
deföed
 
__USE_MISC


1035 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1041 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1045 #ifde‡
__USE_MISC


1056 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1061 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1073 
	#F_ULOCK
 0

	)

1074 
	#F_LOCK
 1

	)

1075 
	#F_TLOCK
 2

	)

1076 
	#F_TEST
 3

	)

1078 #i‚de‡
__USE_FILE_OFFSET64


1079 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1081 #ifde‡
__REDIRECT


1082 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1083 
lockf64
Ë
__wur
;

1085 
	#lockf
 
lockf64


	)

1088 #ifde‡
__USE_LARGEFILE64


1089 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1094 #ifde‡
__USE_GNU


1099 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1100 (
__exãnsi⁄__
 \

1101 ({ 
__ªsu…
; \

1102 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1103 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1104 
__ªsu…
; 
	}
}))

	)

1107 
ssize_t
 
c›y_fûe_ønge
 (
__öfd
, 
__off64_t
 *
__pöoff
,

1108 
__outfd
, 
__off64_t
 *
__poutoff
,

1109 
size_t
 
__Àngth
, 
__Êags
);

1112 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1115 
fd©async
 (
__fûdes
);

1118 #ifde‡
__USE_MISC


1124 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1125 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1128 #ifdef 
__USE_XOPEN


1133 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1134 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1141 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1143 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1146 *
	`cu£rid
 (*
__s
);

1152 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_XOPEN2K


1153 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1154 (*
__∑ª¡
) (),

1155 (*
__chûd
Ë()Ë
__THROW
;

1158 #ifde‡
__USE_MISC


1161 
	$gëíå›y
 (*
__buf„r
, 
size_t
 
__Àngth
Ë
__wur
;

1165 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1166 
	~<bôs/uni°d.h
>

1169 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/bits/confname.h

19 #i‚de‡
_UNISTD_H


26 
	m_PC_LINK_MAX
,

27 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

28 
	m_PC_MAX_CANON
,

29 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

30 
	m_PC_MAX_INPUT
,

31 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

32 
	m_PC_NAME_MAX
,

33 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

34 
	m_PC_PATH_MAX
,

35 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

36 
	m_PC_PIPE_BUF
,

37 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

38 
	m_PC_CHOWN_RESTRICTED
,

39 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

40 
	m_PC_NO_TRUNC
,

41 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

42 
	m_PC_VDISABLE
,

43 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

44 
	m_PC_SYNC_IO
,

45 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

46 
	m_PC_ASYNC_IO
,

47 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

48 
	m_PC_PRIO_IO
,

49 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

50 
	m_PC_SOCK_MAXBUF
,

51 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

52 
	m_PC_FILESIZEBITS
,

53 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

54 
	m_PC_REC_INCR_XFER_SIZE
,

55 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

56 
	m_PC_REC_MAX_XFER_SIZE
,

57 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

58 
	m_PC_REC_MIN_XFER_SIZE
,

59 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

60 
	m_PC_REC_XFER_ALIGN
,

61 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

62 
	m_PC_ALLOC_SIZE_MIN
,

63 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

64 
	m_PC_SYMLINK_MAX
,

65 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

66 
	m_PC_2_SYMLINKS


67 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

73 
	m_SC_ARG_MAX
,

74 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

75 
	m_SC_CHILD_MAX
,

76 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

77 
	m_SC_CLK_TCK
,

78 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

79 
	m_SC_NGROUPS_MAX
,

80 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

81 
	m_SC_OPEN_MAX
,

82 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

83 
	m_SC_STREAM_MAX
,

84 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

85 
	m_SC_TZNAME_MAX
,

86 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

87 
	m_SC_JOB_CONTROL
,

88 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

89 
	m_SC_SAVED_IDS
,

90 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

91 
	m_SC_REALTIME_SIGNALS
,

92 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

93 
	m_SC_PRIORITY_SCHEDULING
,

94 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

95 
	m_SC_TIMERS
,

96 
	#_SC_TIMERS
 
_SC_TIMERS


	)

97 
	m_SC_ASYNCHRONOUS_IO
,

98 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

99 
	m_SC_PRIORITIZED_IO
,

100 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

101 
	m_SC_SYNCHRONIZED_IO
,

102 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

103 
	m_SC_FSYNC
,

104 
	#_SC_FSYNC
 
_SC_FSYNC


	)

105 
	m_SC_MAPPED_FILES
,

106 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

107 
	m_SC_MEMLOCK
,

108 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

109 
	m_SC_MEMLOCK_RANGE
,

110 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

111 
	m_SC_MEMORY_PROTECTION
,

112 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

113 
	m_SC_MESSAGE_PASSING
,

114 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

115 
	m_SC_SEMAPHORES
,

116 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

117 
	m_SC_SHARED_MEMORY_OBJECTS
,

118 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

119 
	m_SC_AIO_LISTIO_MAX
,

120 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

121 
	m_SC_AIO_MAX
,

122 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

123 
	m_SC_AIO_PRIO_DELTA_MAX
,

124 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

125 
	m_SC_DELAYTIMER_MAX
,

126 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

127 
	m_SC_MQ_OPEN_MAX
,

128 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

129 
	m_SC_MQ_PRIO_MAX
,

130 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

131 
	m_SC_VERSION
,

132 
	#_SC_VERSION
 
_SC_VERSION


	)

133 
	m_SC_PAGESIZE
,

134 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

135 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

136 
	m_SC_RTSIG_MAX
,

137 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

138 
	m_SC_SEM_NSEMS_MAX
,

139 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

140 
	m_SC_SEM_VALUE_MAX
,

141 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

142 
	m_SC_SIGQUEUE_MAX
,

143 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

144 
	m_SC_TIMER_MAX
,

145 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

149 
	m_SC_BC_BASE_MAX
,

150 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

151 
	m_SC_BC_DIM_MAX
,

152 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

153 
	m_SC_BC_SCALE_MAX
,

154 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

155 
	m_SC_BC_STRING_MAX
,

156 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

157 
	m_SC_COLL_WEIGHTS_MAX
,

158 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

159 
	m_SC_EQUIV_CLASS_MAX
,

160 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

161 
	m_SC_EXPR_NEST_MAX
,

162 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

163 
	m_SC_LINE_MAX
,

164 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

165 
	m_SC_RE_DUP_MAX
,

166 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

167 
	m_SC_CHARCLASS_NAME_MAX
,

168 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

170 
	m_SC_2_VERSION
,

171 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

172 
	m_SC_2_C_BIND
,

173 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

174 
	m_SC_2_C_DEV
,

175 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

176 
	m_SC_2_FORT_DEV
,

177 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

178 
	m_SC_2_FORT_RUN
,

179 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

180 
	m_SC_2_SW_DEV
,

181 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

182 
	m_SC_2_LOCALEDEF
,

183 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

185 
	m_SC_PII
,

186 
	#_SC_PII
 
_SC_PII


	)

187 
	m_SC_PII_XTI
,

188 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

189 
	m_SC_PII_SOCKET
,

190 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

191 
	m_SC_PII_INTERNET
,

192 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

193 
	m_SC_PII_OSI
,

194 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

195 
	m_SC_POLL
,

196 
	#_SC_POLL
 
_SC_POLL


	)

197 
	m_SC_SELECT
,

198 
	#_SC_SELECT
 
_SC_SELECT


	)

199 
	m_SC_UIO_MAXIOV
,

200 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

201 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

202 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

203 
	m_SC_PII_INTERNET_STREAM
,

204 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

205 
	m_SC_PII_INTERNET_DGRAM
,

206 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

207 
	m_SC_PII_OSI_COTS
,

208 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

209 
	m_SC_PII_OSI_CLTS
,

210 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

211 
	m_SC_PII_OSI_M
,

212 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

213 
	m_SC_T_IOV_MAX
,

214 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

217 
	m_SC_THREADS
,

218 
	#_SC_THREADS
 
_SC_THREADS


	)

219 
	m_SC_THREAD_SAFE_FUNCTIONS
,

220 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

221 
	m_SC_GETGR_R_SIZE_MAX
,

222 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

223 
	m_SC_GETPW_R_SIZE_MAX
,

224 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

225 
	m_SC_LOGIN_NAME_MAX
,

226 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

227 
	m_SC_TTY_NAME_MAX
,

228 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

229 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

230 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

231 
	m_SC_THREAD_KEYS_MAX
,

232 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

233 
	m_SC_THREAD_STACK_MIN
,

234 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

235 
	m_SC_THREAD_THREADS_MAX
,

236 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

237 
	m_SC_THREAD_ATTR_STACKADDR
,

238 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

239 
	m_SC_THREAD_ATTR_STACKSIZE
,

240 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

241 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

242 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

243 
	m_SC_THREAD_PRIO_INHERIT
,

244 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

245 
	m_SC_THREAD_PRIO_PROTECT
,

246 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

247 
	m_SC_THREAD_PROCESS_SHARED
,

248 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

250 
	m_SC_NPROCESSORS_CONF
,

251 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

252 
	m_SC_NPROCESSORS_ONLN
,

253 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

254 
	m_SC_PHYS_PAGES
,

255 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

256 
	m_SC_AVPHYS_PAGES
,

257 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

258 
	m_SC_ATEXIT_MAX
,

259 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

260 
	m_SC_PASS_MAX
,

261 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

263 
	m_SC_XOPEN_VERSION
,

264 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

265 
	m_SC_XOPEN_XCU_VERSION
,

266 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

267 
	m_SC_XOPEN_UNIX
,

268 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

269 
	m_SC_XOPEN_CRYPT
,

270 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

271 
	m_SC_XOPEN_ENH_I18N
,

272 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

273 
	m_SC_XOPEN_SHM
,

274 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

276 
	m_SC_2_CHAR_TERM
,

277 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

278 
	m_SC_2_C_VERSION
,

279 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

280 
	m_SC_2_UPE
,

281 
	#_SC_2_UPE
 
_SC_2_UPE


	)

283 
	m_SC_XOPEN_XPG2
,

284 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

285 
	m_SC_XOPEN_XPG3
,

286 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

287 
	m_SC_XOPEN_XPG4
,

288 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

290 
	m_SC_CHAR_BIT
,

291 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

292 
	m_SC_CHAR_MAX
,

293 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

294 
	m_SC_CHAR_MIN
,

295 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

296 
	m_SC_INT_MAX
,

297 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

298 
	m_SC_INT_MIN
,

299 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

300 
	m_SC_LONG_BIT
,

301 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

302 
	m_SC_WORD_BIT
,

303 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

304 
	m_SC_MB_LEN_MAX
,

305 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

306 
	m_SC_NZERO
,

307 
	#_SC_NZERO
 
_SC_NZERO


	)

308 
	m_SC_SSIZE_MAX
,

309 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

310 
	m_SC_SCHAR_MAX
,

311 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

312 
	m_SC_SCHAR_MIN
,

313 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

314 
	m_SC_SHRT_MAX
,

315 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

316 
	m_SC_SHRT_MIN
,

317 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

318 
	m_SC_UCHAR_MAX
,

319 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

320 
	m_SC_UINT_MAX
,

321 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

322 
	m_SC_ULONG_MAX
,

323 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

324 
	m_SC_USHRT_MAX
,

325 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

327 
	m_SC_NL_ARGMAX
,

328 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

329 
	m_SC_NL_LANGMAX
,

330 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

331 
	m_SC_NL_MSGMAX
,

332 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

333 
	m_SC_NL_NMAX
,

334 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

335 
	m_SC_NL_SETMAX
,

336 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

337 
	m_SC_NL_TEXTMAX
,

338 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

340 
	m_SC_XBS5_ILP32_OFF32
,

341 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

342 
	m_SC_XBS5_ILP32_OFFBIG
,

343 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

344 
	m_SC_XBS5_LP64_OFF64
,

345 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

346 
	m_SC_XBS5_LPBIG_OFFBIG
,

347 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

349 
	m_SC_XOPEN_LEGACY
,

350 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

351 
	m_SC_XOPEN_REALTIME
,

352 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

353 
	m_SC_XOPEN_REALTIME_THREADS
,

354 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

356 
	m_SC_ADVISORY_INFO
,

357 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

358 
	m_SC_BARRIERS
,

359 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

360 
	m_SC_BASE
,

361 
	#_SC_BASE
 
_SC_BASE


	)

362 
	m_SC_C_LANG_SUPPORT
,

363 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

364 
	m_SC_C_LANG_SUPPORT_R
,

365 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

366 
	m_SC_CLOCK_SELECTION
,

367 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

368 
	m_SC_CPUTIME
,

369 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

370 
	m_SC_THREAD_CPUTIME
,

371 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

372 
	m_SC_DEVICE_IO
,

373 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

374 
	m_SC_DEVICE_SPECIFIC
,

375 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

376 
	m_SC_DEVICE_SPECIFIC_R
,

377 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

378 
	m_SC_FD_MGMT
,

379 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

380 
	m_SC_FIFO
,

381 
	#_SC_FIFO
 
_SC_FIFO


	)

382 
	m_SC_PIPE
,

383 
	#_SC_PIPE
 
_SC_PIPE


	)

384 
	m_SC_FILE_ATTRIBUTES
,

385 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

386 
	m_SC_FILE_LOCKING
,

387 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

388 
	m_SC_FILE_SYSTEM
,

389 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

390 
	m_SC_MONOTONIC_CLOCK
,

391 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

392 
	m_SC_MULTI_PROCESS
,

393 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

394 
	m_SC_SINGLE_PROCESS
,

395 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

396 
	m_SC_NETWORKING
,

397 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

398 
	m_SC_READER_WRITER_LOCKS
,

399 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

400 
	m_SC_SPIN_LOCKS
,

401 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

402 
	m_SC_REGEXP
,

403 
	#_SC_REGEXP
 
_SC_REGEXP


	)

404 
	m_SC_REGEX_VERSION
,

405 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

406 
	m_SC_SHELL
,

407 
	#_SC_SHELL
 
_SC_SHELL


	)

408 
	m_SC_SIGNALS
,

409 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

410 
	m_SC_SPAWN
,

411 
	#_SC_SPAWN
 
_SC_SPAWN


	)

412 
	m_SC_SPORADIC_SERVER
,

413 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

414 
	m_SC_THREAD_SPORADIC_SERVER
,

415 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

416 
	m_SC_SYSTEM_DATABASE
,

417 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

418 
	m_SC_SYSTEM_DATABASE_R
,

419 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

420 
	m_SC_TIMEOUTS
,

421 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

422 
	m_SC_TYPED_MEMORY_OBJECTS
,

423 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

424 
	m_SC_USER_GROUPS
,

425 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

426 
	m_SC_USER_GROUPS_R
,

427 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

428 
	m_SC_2_PBS
,

429 
	#_SC_2_PBS
 
_SC_2_PBS


	)

430 
	m_SC_2_PBS_ACCOUNTING
,

431 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

432 
	m_SC_2_PBS_LOCATE
,

433 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

434 
	m_SC_2_PBS_MESSAGE
,

435 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

436 
	m_SC_2_PBS_TRACK
,

437 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

438 
	m_SC_SYMLOOP_MAX
,

439 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

440 
	m_SC_STREAMS
,

441 
	#_SC_STREAMS
 
_SC_STREAMS


	)

442 
	m_SC_2_PBS_CHECKPOINT
,

443 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

445 
	m_SC_V6_ILP32_OFF32
,

446 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

447 
	m_SC_V6_ILP32_OFFBIG
,

448 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

449 
	m_SC_V6_LP64_OFF64
,

450 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

451 
	m_SC_V6_LPBIG_OFFBIG
,

452 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

454 
	m_SC_HOST_NAME_MAX
,

455 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

456 
	m_SC_TRACE
,

457 
	#_SC_TRACE
 
_SC_TRACE


	)

458 
	m_SC_TRACE_EVENT_FILTER
,

459 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

460 
	m_SC_TRACE_INHERIT
,

461 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

462 
	m_SC_TRACE_LOG
,

463 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

465 
	m_SC_LEVEL1_ICACHE_SIZE
,

466 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

467 
	m_SC_LEVEL1_ICACHE_ASSOC
,

468 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

469 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

470 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

471 
	m_SC_LEVEL1_DCACHE_SIZE
,

472 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

473 
	m_SC_LEVEL1_DCACHE_ASSOC
,

474 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

475 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

476 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

477 
	m_SC_LEVEL2_CACHE_SIZE
,

478 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

479 
	m_SC_LEVEL2_CACHE_ASSOC
,

480 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

481 
	m_SC_LEVEL2_CACHE_LINESIZE
,

482 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

483 
	m_SC_LEVEL3_CACHE_SIZE
,

484 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

485 
	m_SC_LEVEL3_CACHE_ASSOC
,

486 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

487 
	m_SC_LEVEL3_CACHE_LINESIZE
,

488 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

489 
	m_SC_LEVEL4_CACHE_SIZE
,

490 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

491 
	m_SC_LEVEL4_CACHE_ASSOC
,

492 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

493 
	m_SC_LEVEL4_CACHE_LINESIZE
,

494 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

497 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

498 
	#_SC_IPV6
 
_SC_IPV6


	)

499 
	m_SC_RAW_SOCKETS
,

500 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

502 
	m_SC_V7_ILP32_OFF32
,

503 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

504 
	m_SC_V7_ILP32_OFFBIG
,

505 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

506 
	m_SC_V7_LP64_OFF64
,

507 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

508 
	m_SC_V7_LPBIG_OFFBIG
,

509 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

511 
	m_SC_SS_REPL_MAX
,

512 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

514 
	m_SC_TRACE_EVENT_NAME_MAX
,

515 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

516 
	m_SC_TRACE_NAME_MAX
,

517 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

518 
	m_SC_TRACE_SYS_MAX
,

519 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

520 
	m_SC_TRACE_USER_EVENT_MAX
,

521 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

523 
	m_SC_XOPEN_STREAMS
,

524 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

526 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

527 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

528 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


529 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

535 
	m_CS_PATH
,

536 
	#_CS_PATH
 
_CS_PATH


	)

538 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

539 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

540 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	m_CS_GNU_LIBC_VERSION
,

543 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

544 
	m_CS_GNU_LIBPTHREAD_VERSION
,

545 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

547 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

548 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

549 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

552 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

553 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	m_CS_LFS_CFLAGS
 = 1000,

556 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

557 
	m_CS_LFS_LDFLAGS
,

558 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

559 
	m_CS_LFS_LIBS
,

560 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

561 
	m_CS_LFS_LINTFLAGS
,

562 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

563 
	m_CS_LFS64_CFLAGS
,

564 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

565 
	m_CS_LFS64_LDFLAGS
,

566 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

567 
	m_CS_LFS64_LIBS
,

568 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

569 
	m_CS_LFS64_LINTFLAGS
,

570 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

572 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

573 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

575 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

577 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

579 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

580 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

581 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

588 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

589 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LIBS
,

593 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

594 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

595 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

596 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

597 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

605 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

606 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

613 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

621 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

622 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

629 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

630 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

638 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

639 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

646 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

654 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

655 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

662 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

663 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

671 
	m_CS_V6_ENV
,

672 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

673 
	m_CS_V7_ENV


674 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/environments.h

18 #i‚de‡
_UNISTD_H


22 
	~<bôs/w‹dsize.h
>

42 #i‡
__WORDSIZE
 == 64

56 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

57 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

58 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

61 
	#_POSIX_V7_LP64_OFF64
 1

	)

62 
	#_POSIX_V6_LP64_OFF64
 1

	)

63 
	#_XBS5_LP64_OFF64
 1

	)

69 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

70 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

71 
	#_XBS5_ILP32_OFFBIG
 1

	)

73 #i‚de‡
__x86_64__


75 
	#_POSIX_V7_ILP32_OFF32
 1

	)

76 
	#_POSIX_V6_ILP32_OFF32
 1

	)

77 
	#_XBS5_ILP32_OFF32
 1

	)

95 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

96 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

97 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


98 
	#__ILP32_OFFBIG_CFLAGS
 "-mx32"

	)

99 
	#__ILP32_OFFBIG_LDFLAGS
 "-mx32"

	)

101 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

102 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

104 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

105 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/floatn.h

19 #i‚de‡
_BITS_FLOATN_H


20 
	#_BITS_FLOATN_H


	)

22 
	~<„©uªs.h
>

29 #i‡(
deföed
 
__x86_64__
 \

30 ? 
__GNUC_PREREQ
 (4, 3) \

31 : (
deföed
 
__GNU__
 ? 
	$__GNUC_PREREQ
 (4, 5Ë: 
	$__GNUC_PREREQ
 (4, 4)))

32 
	#__HAVE_FLOAT128
 1

	)

34 
	#__HAVE_FLOAT128
 0

	)

39 #i‡
__HAVE_FLOAT128


40 
	#__HAVE_DISTINCT_FLOAT128
 1

	)

42 
	#__HAVE_DISTINCT_FLOAT128
 0

	)

48 
	#__HAVE_FLOAT64X
 1

	)

54 
	#__HAVE_FLOAT64X_LONG_DOUBLE
 1

	)

56 #i‚de‡
__ASSEMBLER__


60 #i‡
__HAVE_FLOAT128


61 #i‡!
	`__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


63 
	#__f128
(
x
Ëx##
q


	)

65 
	#__f128
(
x
Ëx##
f128


	)

70 #i‡
__HAVE_FLOAT128


71 #i‡!
	`__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


74 
_Com∂ex
 
	t__cÊﬂt128
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__TC__
)));

75 
	#__CFLOAT128
 
__cÊﬂt128


	)

77 
	#__CFLOAT128
 
_Com∂ex
 
_Flﬂt128


	)

82 #i‡
__HAVE_FLOAT128


85 #i‡!
	`__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


86 
__Êﬂt128
 
	t_Flﬂt128
;

90 #i‡!
	`__GNUC_PREREQ
 (7, 0)

91 
	#__buûtö_huge_vÆf128
(Ë((
_Flﬂt128
Ë
	`__buûtö_huge_vÆ
 ())

	)

99 #i‡!
	`__GNUC_PREREQ
 (7, 0)

100 
	#__buûtö_c›ysignf128
 
__buûtö_c›ysignq


	)

101 
	#__buûtö_Ábsf128
 
__buûtö_Ábsq


	)

102 
	#__buûtö_öff128
(Ë((
_Flﬂt128
Ë
	`__buûtö_öf
 ())

	)

103 
	#__buûtö_«nf128
(
x
Ë((
_Flﬂt128
Ë
	`__buûtö_«n
 (x))

	)

104 
	#__buûtö_«nsf128
(
x
Ë((
_Flﬂt128
Ë
	`__buûtö_«ns
 (x))

	)

111 #i‡!
	`__GNUC_PREREQ
 (6, 0)

112 
	#__buûtö_signbôf128
 
__signbôf128


	)

119 
	~<bôs/Êﬂä-comm⁄.h
>

	@/usr/include/bits/flt-eval-method.h

19 #i‚de‡
_MATH_H


23 #ifde‡
__FLT_EVAL_METHOD__


24 #i‡
__FLT_EVAL_METHOD__
 == -1

25 
	#__GLIBC_FLT_EVAL_METHOD
 2

	)

27 
	#__GLIBC_FLT_EVAL_METHOD
 
__FLT_EVAL_METHOD__


	)

29 #ñi‡
deföed
 
__x86_64__


30 
	#__GLIBC_FLT_EVAL_METHOD
 0

	)

32 
	#__GLIBC_FLT_EVAL_METHOD
 2

	)

	@/usr/include/bits/fp-fast.h

19 #i‚de‡
_MATH_H


23 #ifde‡
__USE_ISOC99


27 #ifde‡
__FP_FAST_FMA


28 
	#FP_FAST_FMA
 1

	)

31 #ifde‡
__FP_FAST_FMAF


32 
	#FP_FAST_FMAF
 1

	)

35 #ifde‡
__FP_FAST_FMAL


36 
	#FP_FAST_FMAL
 1

	)

	@/usr/include/bits/fp-logb.h

19 #i‚de‡
_MATH_H


23 
	#__FP_LOGB0_IS_MIN
 1

	)

24 
	#__FP_LOGBNAN_IS_MIN
 1

	)

	@/usr/include/bits/getopt_core.h

20 #i‚de‡
_GETOPT_CORE_H


21 
	#_GETOPT_CORE_H
 1

	)

28 
__BEGIN_DECLS


36 *
›èrg
;

50 
›töd
;

55 
›ãº
;

59 
›t›t
;

91 
	$gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

92 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

94 
__END_DECLS


	@/usr/include/bits/getopt_ext.h

20 #i‚de‡
_GETOPT_EXT_H


21 
	#_GETOPT_EXT_H
 1

	)

27 
__BEGIN_DECLS


50 
	s›ti⁄


52 c⁄° *
	m«me
;

55 
	mhas_¨g
;

56 *
	mÊag
;

57 
	mvÆ
;

62 
	#no_¨gumít
 0

	)

63 
	#ªquúed_¨gumít
 1

	)

64 
	#›ti⁄Æ_¨gumít
 2

	)

66 
	$gë›t_l⁄g
 (
___¨gc
, *
__gë›t_¨gv_c⁄°
 *
___¨gv
,

67 c⁄° *
__sh‹t›ts
,

68 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

69 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

70 
	$gë›t_l⁄g_⁄ly
 (
___¨gc
, *
__gë›t_¨gv_c⁄°
 *
___¨gv
,

71 c⁄° *
__sh‹t›ts
,

72 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

73 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

75 
__END_DECLS


	@/usr/include/bits/getopt_posix.h

20 #i‚de‡
_GETOPT_POSIX_H


21 
	#_GETOPT_POSIX_H
 1

	)

23 #i‡!
deföed
 
_UNISTD_H
 && !deföed 
_STDIO_H


27 
	~<bôs/gë›t_c‹e.h
>

29 
	g__BEGIN_DECLS


31 #i‡
deföed
 
__USE_POSIX2
 && !deföed 
__USE_POSIX_IMPLICITLY
 \

32 && !
deföed
 
	g__USE_GNU
 && !deföed 
	g_GETOPT_H


37 #ifde‡
__REDIRECT


38 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

39 c⁄° *
__sh‹t›ts
),

40 
__posix_gë›t
);

42 
	$__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

43 c⁄° *
__sh‹t›ts
)

44 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

45 
	#gë›t
 
__posix_gë›t


	)

49 
__END_DECLS


	@/usr/include/bits/iscanonical.h

19 #i‚de‡
_MATH_H


23 
	$__isˇn⁄iˇŒ
 (
__x
)

24 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

25 
	#__isˇn⁄iˇlf
(
x
Ë((Ë(
	`__ty≥of
 (x)Ë(x), 1)

	)

26 
	#__isˇn⁄iˇl
(
x
Ë((Ë(
	`__ty≥of
 (x)Ë(x), 1)

	)

27 #i‡
__HAVE_DISTINCT_FLOAT128


28 
	#__isˇn⁄iˇlf128
(
x
Ë((Ë(
	`__ty≥of
 (x)Ë(x), 1)

	)

37 #i‚de‡
__˝lu•lus


38 
	#isˇn⁄iˇl
(
x
Ë
	`__MATH_TG
 ((x), 
__isˇn⁄iˇl
, (x))

	)

47 
ölöe
 
	`isˇn⁄iˇl
 (
__vÆ
Ë{  
	`__isˇn⁄iˇlf
 (__val); }

48 
ölöe
 
	`isˇn⁄iˇl
 (
__vÆ
Ë{  
	`__isˇn⁄iˇl
 (__val); }

49 
ölöe
 
	`isˇn⁄iˇl
 (
__vÆ
Ë{  
	`__isˇn⁄iˇŒ
 (__val); }

50 #i‡
__HAVE_DISTINCT_FLOAT128


51 
ölöe
 
	`isˇn⁄iˇl
 (
_Flﬂt128
 
__vÆ
Ë{  
	`__isˇn⁄iˇlf128
 (__val); }

53 
	}
}

	@/usr/include/bits/libc-header-start.h

27 #i‚de‡
__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


31 #unde‡
__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


33 
	~<„©uªs.h
>

37 #unde‡
__GLIBC_USE_LIB_EXT2


38 #i‡(
deföed
 
__USE_GNU
 \

39 || (
deföed
 
	g__STDC_WANT_LIB_EXT2__
 && __STDC_WANT_LIB_EXT2__ > 0))

40 
	#__GLIBC_USE_LIB_EXT2
 1

	)

42 
	#__GLIBC_USE_LIB_EXT2
 0

	)

47 #unde‡
__GLIBC_USE_IEC_60559_BFP_EXT


48 #i‡
deföed
 
__USE_GNU
 || deföed 
__STDC_WANT_IEC_60559_BFP_EXT__


49 
	#__GLIBC_USE_IEC_60559_BFP_EXT
 1

	)

51 
	#__GLIBC_USE_IEC_60559_BFP_EXT
 0

	)

56 #unde‡
__GLIBC_USE_IEC_60559_FUNCS_EXT


57 #i‡
deföed
 
__USE_GNU
 || deföed 
__STDC_WANT_IEC_60559_FUNCS_EXT__


58 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT
 1

	)

60 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT
 0

	)

65 #unde‡
__GLIBC_USE_IEC_60559_TYPES_EXT


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__STDC_WANT_IEC_60559_TYPES_EXT__


67 
	#__GLIBC_USE_IEC_60559_TYPES_EXT
 1

	)

69 
	#__GLIBC_USE_IEC_60559_TYPES_EXT
 0

	)

	@/usr/include/bits/math-finite.h

19 #i‚de‡
_MATH_H


23 
	#__REDIRFROM
(...Ë
	`__REDIRFROM_X
(
__VA_ARGS__
)

	)

25 
	#__REDIRTO
(...Ë
	`__REDIRTO_X
(
__VA_ARGS__
)

	)

27 
	#__MATH_REDIRCALL_X
(
‰om
, 
¨gs
, 
to
) \

28 
_MdoubÀ_
 
	`__REDIRECT_NTH
 (
‰om
, 
¨gs
, 
to
)

	)

29 
	#__MATH_REDIRCALL
(
fun˘i⁄
, 
ªíå™t
, 
¨gs
) \

30 
__MATH_REDIRCALL_X
 \

31 (
	`__REDIRFROM
 (
fun˘i⁄
, 
ªíå™t
), 
¨gs
, \

32 
	`__REDIRTO
 (
fun˘i⁄
, 
ªíå™t
))

	)

33 
	#__MATH_REDIRCALL_2
(
‰om
, 
ªíå™t
, 
¨gs
, 
to
) \

34 
__MATH_REDIRCALL_X
 \

35 (
	`__REDIRFROM
 (
‰om
, 
ªíå™t
), 
¨gs
, \

36 
	`__REDIRTO
 (
to
, 
ªíå™t
))

	)

38 
	#__MATH_REDIRCALL_INTERNAL
(
fun˘i⁄
, 
ªíå™t
, 
¨gs
) \

39 
__MATH_REDIRCALL_X
 \

40 (
	`__REDIRFROM
 (
	`__CONCAT
 (
__
, 
fun˘i⁄
), \

41 
	`__CONCAT
 (
ªíå™t
, 
_föôe
)), \

42 
¨gs
, 
	`__REDIRTO
 (
fun˘i⁄
, 
_r
))

	)

46 
__MATH_REDIRCALL
 (
acos
, , (
_MdoubÀ_
));

48 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


50 
__MATH_REDIRCALL
 (
acosh
, , (
_MdoubÀ_
));

54 
__MATH_REDIRCALL
 (
asö
, , (
_MdoubÀ_
));

57 
__MATH_REDIRCALL
 (
©™2
, , (
_MdoubÀ_
, _Mdouble_));

59 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


61 
__MATH_REDIRCALL
 (
©™h
, , (
_MdoubÀ_
));

65 
__MATH_REDIRCALL
 (
cosh
, , (
_MdoubÀ_
));

68 
__MATH_REDIRCALL
 (
exp
, , (
_MdoubÀ_
));

70 #i‡
__GLIBC_USE
 (
IEC_60559_FUNCS_EXT
)

72 
__MATH_REDIRCALL
 (
exp10
, , (
_MdoubÀ_
));

75 #ifde‡
__USE_ISOC99


77 
__MATH_REDIRCALL
 (
exp2
, , (
_MdoubÀ_
));

81 
__MATH_REDIRCALL
 (
fmod
, , (
_MdoubÀ_
, _Mdouble_));

83 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99


85 
__MATH_REDIRCALL
 (
hypŸ
, , (
_MdoubÀ_
, _Mdouble_));

88 #i‡(
__MATH_DECLARING_DOUBLE
 && (
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
)) \

89 || (!
	g__MATH_DECLARING_DOUBLE
 && 
deföed
 
	g__USE_MISC
)

91 
__MATH_REDIRCALL
 (
j0
, , (
_MdoubÀ_
));

94 
__MATH_REDIRCALL
 (
y0
, , (
_MdoubÀ_
));

97 
__MATH_REDIRCALL
 (
j1
, , (
_MdoubÀ_
));

100 
__MATH_REDIRCALL
 (
y1
, , (
_MdoubÀ_
));

103 
__MATH_REDIRCALL
 (
jn
, , (, 
_MdoubÀ_
));

106 
__MATH_REDIRCALL
 (
yn
, , (, 
_MdoubÀ_
));

109 #ifde‡
__USE_MISC


111 
__MATH_REDIRCALL
 (
lgamma
, 
_r
, (
_MdoubÀ_
, *));

117 
__MATH_REDIRCALL_INTERNAL
 (
lgamma
, 
_r
, (
_MdoubÀ_
, *));

119 #i‡((
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99
) \

120 && 
deföed
 
	g__exã∫_Æways_ölöe
)

122 
__exã∫_Æways_ölöe
 
_MdoubÀ_


123 
__NTH
 (
	$__REDIRFROM
 (
lgamma
, ) (
_MdoubÀ_
 
__d
))

125 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


126  
	`__REDIRTO
 (
lgamma
, 
_r
Ë(
__d
, &
signgam
);

128 
__loˇl_signgam
 = 0;

129  
	`__REDIRTO
 (
lgamma
, 
_r
Ë(
__d
, &
__loˇl_signgam
);

131 
	}
}

134 #i‡((
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)) \

135 && 
deföed
 
	g__exã∫_Æways_ölöe
Ë&& !
__MATH_DECLARING_FLOATN


137 
__exã∫_Æways_ölöe
 
_MdoubÀ_


138 
__NTH
 (
	$__REDIRFROM
 (
gamma
, ) (
_MdoubÀ_
 
__d
))

140  
	`__REDIRTO
 (
lgamma
, 
_r
Ë(
__d
, &
signgam
);

141 
	}
}

145 
__MATH_REDIRCALL
 (
log
, , (
_MdoubÀ_
));

148 
__MATH_REDIRCALL
 (
log10
, , (
_MdoubÀ_
));

150 #ifde‡
__USE_ISOC99


152 
__MATH_REDIRCALL
 (
log2
, , (
_MdoubÀ_
));

156 
__MATH_REDIRCALL
 (
pow
, , (
_MdoubÀ_
, _Mdouble_));

158 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


160 
__MATH_REDIRCALL
 (
ªmaödî
, , (
_MdoubÀ_
, _Mdouble_));

163 #i‡((
__MATH_DECLARING_DOUBLE
 \

164 && (
deföed
 
	g__USE_MISC
 \

165 || (
deföed
 
	g__USE_XOPEN_EXTENDED
 && !deföed 
	g__USE_XOPEN2K8
))) \

166 || (!
deföed
 
	g__MATH_DECLARE_LDOUBLE
 && deföed 
	g__USE_MISC
)) \

167 && !
__MATH_DECLARING_FLOATN


169 
__MATH_REDIRCALL
 (
sˇlb
, , (
_MdoubÀ_
, _Mdouble_));

173 
__MATH_REDIRCALL
 (
söh
, , (
_MdoubÀ_
));

176 
__MATH_REDIRCALL
 (
sqπ
, , (
_MdoubÀ_
));

178 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__exã∫_Æways_ölöe


180 
_MdoubÀ_


181 
	$__REDIRFROM
 (
__gamma
, 
_r_föôe
Ë(
_MdoubÀ_
, *);

183 
__exã∫_Æways_ölöe
 
_MdoubÀ_


184 
	`__NTH
 (
	$__REDIRFROM
 (
tgamma
, ) (
_MdoubÀ_
 
__d
))

186 
__loˇl_signgam
 = 0;

187 
_MdoubÀ_
 
__ªs
 = 
	`__REDIRTO
 (
gamma
, 
_r
Ë(
__d
, &
__loˇl_signgam
);

188  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

189 
	}
}

192 #unde‡
__REDIRFROM


193 #unde‡
__REDIRTO


194 #unde‡
__MATH_REDIRCALL


195 #unde‡
__MATH_REDIRCALL_2


196 #unde‡
__MATH_REDIRCALL_INTERNAL


197 #unde‡
__MATH_REDIRCALL_X


	@/usr/include/bits/math-vector.h

19 #i‚de‡
_MATH_H


25 
	~<bôs/libm-simd-de˛-°ubs.h
>

27 #i‡
deföed
 
__x86_64__
 && deföed 
__FAST_MATH__


28 #i‡
deföed
 
_OPENMP
 && _OPENMP >= 201307

30 
	#__DECL_SIMD_x86_64
 
	`_Pøgma
 ("om∞de˛¨êsimdÇŸöbønch")

	)

31 #ñi‡
__GNUC_PREREQ
 (6,0)

33 
	#__DECL_SIMD_x86_64
 
	`__©åibuã__
 ((
	`__simd__
 ("nŸöbønch")))

	)

36 #ifde‡
__DECL_SIMD_x86_64


37 #unde‡
__DECL_SIMD_cos


38 
	#__DECL_SIMD_cos
 
__DECL_SIMD_x86_64


	)

39 #unde‡
__DECL_SIMD_cosf


40 
	#__DECL_SIMD_cosf
 
__DECL_SIMD_x86_64


	)

41 #unde‡
__DECL_SIMD_sö


42 
	#__DECL_SIMD_sö
 
__DECL_SIMD_x86_64


	)

43 #unde‡
__DECL_SIMD_söf


44 
	#__DECL_SIMD_söf
 
__DECL_SIMD_x86_64


	)

45 #unde‡
__DECL_SIMD_söcos


46 
	#__DECL_SIMD_söcos
 
__DECL_SIMD_x86_64


	)

47 #unde‡
__DECL_SIMD_söcosf


48 
	#__DECL_SIMD_söcosf
 
__DECL_SIMD_x86_64


	)

49 #unde‡
__DECL_SIMD_log


50 
	#__DECL_SIMD_log
 
__DECL_SIMD_x86_64


	)

51 #unde‡
__DECL_SIMD_logf


52 
	#__DECL_SIMD_logf
 
__DECL_SIMD_x86_64


	)

53 #unde‡
__DECL_SIMD_exp


54 
	#__DECL_SIMD_exp
 
__DECL_SIMD_x86_64


	)

55 #unde‡
__DECL_SIMD_expf


56 
	#__DECL_SIMD_expf
 
__DECL_SIMD_x86_64


	)

57 #unde‡
__DECL_SIMD_pow


58 
	#__DECL_SIMD_pow
 
__DECL_SIMD_x86_64


	)

59 #unde‡
__DECL_SIMD_powf


60 
	#__DECL_SIMD_powf
 
__DECL_SIMD_x86_64


	)

	@/usr/include/bits/mathcalls-helper-functions.h

21 
__MATHDECL_1
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
))

22 
__©åibuã__
 ((
__c⁄°__
));

25 
__MATHDECL_1
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
))

26 
__©åibuã__
 ((
__c⁄°__
));

30 
__MATHDECL_1
 (, 
__isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

33 
__MATHDECL_1
 (, 
__föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

36 
__MATHDECL_1
 (, 
__i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

39 
__MATHDECL_1
 (, 
__i£qsig
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

42 
__MATHDECL_1
 (, 
__issig«lög
,, (
_MdoubÀ_
 
__vÆue
))

43 
__©åibuã__
 ((
__c⁄°__
));

	@/usr/include/bits/mathcalls-narrow.h

19 #i‚de‡
_MATH_H


24 
__MATHCALL_NARROW
 (
__MATHCALL_NAME
 (
add
), 
__MATHCALL_REDIR_NAME
 (add), 2);

27 
__MATHCALL_NARROW
 (
__MATHCALL_NAME
 (
div
), 
__MATHCALL_REDIR_NAME
 (div), 2);

30 
__MATHCALL_NARROW
 (
__MATHCALL_NAME
 (
mul
), 
__MATHCALL_REDIR_NAME
 (mul), 2);

33 
__MATHCALL_NARROW
 (
__MATHCALL_NAME
 (
sub
), 
__MATHCALL_REDIR_NAME
 (sub), 2);

	@/usr/include/bits/mathcalls.h

45 #i‚de‡
_MATH_H


53 
__MATHCALL
 (
acos
,, (
_MdoubÀ_
 
__x
));

55 
__MATHCALL
 (
asö
,, (
_MdoubÀ_
 
__x
));

57 
__MATHCALL
 (
©™
,, (
_MdoubÀ_
 
__x
));

59 
__MATHCALL
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

62 
__MATHCALL_VEC
 (
cos
,, (
_MdoubÀ_
 
__x
));

64 
__MATHCALL_VEC
 (
sö
,, (
_MdoubÀ_
 
__x
));

66 
__MATHCALL
 (
èn
,, (
_MdoubÀ_
 
__x
));

71 
__MATHCALL
 (
cosh
,, (
_MdoubÀ_
 
__x
));

73 
__MATHCALL
 (
söh
,, (
_MdoubÀ_
 
__x
));

75 
__MATHCALL
 (
ènh
,, (
_MdoubÀ_
 
__x
));

77 #ifde‡
__USE_GNU


79 
__MATHDECL_VEC
 (,
söcos
,,

80 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

83 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


85 
__MATHCALL
 (
acosh
,, (
_MdoubÀ_
 
__x
));

87 
__MATHCALL
 (
asöh
,, (
_MdoubÀ_
 
__x
));

89 
__MATHCALL
 (
©™h
,, (
_MdoubÀ_
 
__x
));

95 
__MATHCALL_VEC
 (
exp
,, (
_MdoubÀ_
 
__x
));

98 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

101 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

104 
__MATHCALL_VEC
 (
log
,, (
_MdoubÀ_
 
__x
));

107 
__MATHCALL
 (
log10
,, (
_MdoubÀ_
 
__x
));

110 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
)Ë
__n⁄nuŒ
 ((2));

112 #i‡
__GLIBC_USE
 (
IEC_60559_FUNCS_EXT
)

114 
__MATHCALL
 (
exp10
,, (
_MdoubÀ_
 
__x
));

117 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


119 
__MATHCALL
 (
expm1
,, (
_MdoubÀ_
 
__x
));

122 
__MATHCALL
 (
log1p
,, (
_MdoubÀ_
 
__x
));

125 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

128 #ifde‡
__USE_ISOC99


130 
__MATHCALL
 (
exp2
,, (
_MdoubÀ_
 
__x
));

133 
__MATHCALL
 (
log2
,, (
_MdoubÀ_
 
__x
));

140 
__MATHCALL_VEC
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

143 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

145 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99


147 
__MATHCALL
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

150 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


152 
__MATHCALL
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

159 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

162 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

165 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

168 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

170 #ifde‡
__USE_MISC


171 #i‡((!
deföed
 
__˝lu•lus
 \

172 || 
	g__˝lu•lus
 < 201103L \

173 || 
	g__MATH_DECLARING_DOUBLE
 == 0)) \

174 && !
__MATH_DECLARING_FLOATN


177 
__MATHDECL_1
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

180 #i‡!
__MATH_DECLARING_FLOATN


182 
__MATHDECL_1
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

185 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

189 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

194 #ifde‡
__USE_ISOC99


196 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

199 #ifde‡
__USE_ISOC99


201 
__MATHCALL
 (
«n
,, (c⁄° *
__ègb
));

205 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

206 #i‡((!
deföed
 
__˝lu•lus
 \

207 || 
	g__˝lu•lus
 < 201103L \

208 || 
	g__MATH_DECLARING_DOUBLE
 == 0)) \

209 && !
__MATH_DECLARING_FLOATN


211 
__MATHDECL_1
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

215 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && 
__MATH_DECLARING_DOUBLE
)

217 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

218 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

219 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

220 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

221 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

222 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

226 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99


228 
__MATHCALL
 (
îf
,, (
_MdoubÀ_
));

229 
__MATHCALL
 (
îfc
,, (
_MdoubÀ_
));

230 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

233 #ifde‡
__USE_ISOC99


235 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

238 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

239 #i‡!
__MATH_DECLARING_FLOATN


241 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

245 #ifde‡
__USE_MISC


249 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

253 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


256 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

259 
__MATHCALL
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

260 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__LDBL_COMPAT
 && !
__MATH_DECLARING_FLOATN


261 
__MATHCALL
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
));

264 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
Ë|| 
__MATH_DECLARING_FLOATN


266 
__MATHCALL
 (
√xtdown
,, (
_MdoubÀ_
 
__x
));

268 
__MATHCALL
 (
√xtup
,, (
_MdoubÀ_
 
__x
));

272 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

274 #ifde‡
__USE_ISOC99


276 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

280 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

283 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
Ë|| 
__MATH_DECLARING_FLOATN


285 
__MATHDECL
 (, 
Œogb
,, (
_MdoubÀ_
 
__x
));

288 #ifde‡
__USE_ISOC99


290 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

294 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

298 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

302 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

307 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

314 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

315 
__exãnsi⁄__


316 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

320 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

321 
__exãnsi⁄__


322 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

326 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

329 
__MATHCALLX
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

332 
__MATHCALLX
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

335 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

338 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
Ë|| 
__MATH_DECLARING_FLOATN


340 
__MATHCALLX
 (
roundeví
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

344 
__MATHDECL
 (
__ötmax_t
, 
‰omÂ
,, (
_MdoubÀ_
 
__x
, 
__round
,

345 
__width
));

349 
__MATHDECL
 (
__uötmax_t
, 
u‰omÂ
,, (
_MdoubÀ_
 
__x
, 
__round
,

350 
__width
));

355 
__MATHDECL
 (
__ötmax_t
, 
‰omÂx
,, (
_MdoubÀ_
 
__x
, 
__round
,

356 
__width
));

361 
__MATHDECL
 (
__uötmax_t
, 
u‰omÂx
,, (
_MdoubÀ_
 
__x
, 
__round
,

362 
__width
));

365 
__MATHCALLX
 (
fmaxmag
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

368 
__MATHCALLX
 (
fmömag
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

371 
__MATHDECL_1
 (, 
tŸÆ‹dî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
))

372 
__©åibuã__
 ((
__c⁄°__
));

375 
__MATHDECL_1
 (, 
tŸÆ‹dîmag
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
))

376 
__©åibuã__
 ((
__c⁄°__
));

379 
__MATHDECL_1
 (, 
ˇn⁄iˇlize
,, (
_MdoubÀ_
 *
__cx
, c⁄° _MdoubÀ_ *
__x
));

382 
__MATHCALL
 (
gë∑ylﬂd
,, (c⁄° 
_MdoubÀ_
 *
__x
));

385 
__MATHDECL_1
 (, 
£çaylﬂd
,, (
_MdoubÀ_
 *
__x
, _MdoubÀ_ 
__∑ylﬂd
));

388 
__MATHDECL_1
 (, 
£çaylﬂdsig
,, (
_MdoubÀ_
 *
__x
, _MdoubÀ_ 
__∑ylﬂd
));

391 #i‡(
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

392 && 
	g__MATH_DECLARING_DOUBLE
 \

393 && !
deföed
 
	g__USE_XOPEN2K8
)) \

394 && !
__MATH_DECLARING_FLOATN


396 
__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/mathinline.h

19 #i‚de‡
_MATH_H


23 #i‚de‡
__exã∫_Æways_ölöe


24 
	#__MATH_INLINE
 
__ölöe


	)

26 
	#__MATH_INLINE
 
__exã∫_Æways_ölöe


	)

32 #i‡!
deföed
 
__SSE2_MATH__
 && !deföed 
__x86_64__


33 #i‡((!
deföed
 
__NO_MATH_INLINES
 || deföed 
__LIBC_INTERNAL_MATH_INLINES
) \

34 && 
deföed
 
	g__OPTIMIZE__
)

38 #unde‡
m©h_îrh™dlög


47 #ifde‡
__USE_ISOC99


48 
	#__ölöe_m©h›
(
func
, 
›
) \

49 
	`__ölöe_m©h›_
 (, 
func
, 
›
) \

50 
	`__ölöe_m©h›_
 (, 
	`__CONCAT
(
func
,
f
), 
›
) \

51 
	`__ölöe_m©h›_
 (, 
	`__CONCAT
(
func
,
l
), 
›
)

	)

52 
	#__ölöe_m©h›NP
(
func
, 
›
) \

53 
	`__ölöe_m©h›NP_
 (, 
func
, 
›
) \

54 
	`__ölöe_m©h›NP_
 (, 
	`__CONCAT
(
func
,
f
), 
›
) \

55 
	`__ölöe_m©h›NP_
 (, 
	`__CONCAT
(
func
,
l
), 
›
)

	)

57 
	#__ölöe_m©h›
(
func
, 
›
) \

58 
	`__ölöe_m©h›_
 (, 
func
, 
›
)

	)

59 
	#__ölöe_m©h›NP
(
func
, 
›
) \

60 
	`__ölöe_m©h›NP_
 (, 
func
, 
›
)

	)

63 
	#__ölöe_m©h›_
(
Êﬂt_ty≥
, 
func
, 
›
) \

64 
	`__ölöe_m©h›_de˛_
 (
Êﬂt_ty≥
, 
func
, 
›
, "0" (
__x
))

	)

65 
	#__ölöe_m©h›NP_
(
Êﬂt_ty≥
, 
func
, 
›
) \

66 
	`__ölöe_m©h›_de˛NP_
 (
Êﬂt_ty≥
, 
func
, 
›
, "0" (
__x
))

	)

69 #ifde‡
__USE_ISOC99


70 
	#__ölöe_m©h›_de˛
(
func
, 
›
, 
∑øms
...) \

71 
	`__ölöe_m©h›_de˛_
 (, 
func
, 
›
, 
∑øms
) \

72 
	`__ölöe_m©h›_de˛_
 (, 
	`__CONCAT
(
func
,
f
), 
›
, 
∑øms
) \

73 
	`__ölöe_m©h›_de˛_
 (, 
	`__CONCAT
(
func
,
l
), 
›
, 
∑øms
)

	)

74 
	#__ölöe_m©h›_de˛NP
(
func
, 
›
, 
∑øms
...) \

75 
	`__ölöe_m©h›_de˛NP_
 (, 
func
, 
›
, 
∑øms
) \

76 
	`__ölöe_m©h›_de˛NP_
 (, 
	`__CONCAT
(
func
,
f
), 
›
, 
∑øms
) \

77 
	`__ölöe_m©h›_de˛NP_
 (, 
	`__CONCAT
(
func
,
l
), 
›
, 
∑øms
)

	)

79 
	#__ölöe_m©h›_de˛
(
func
, 
›
, 
∑øms
...) \

80 
	`__ölöe_m©h›_de˛_
 (, 
func
, 
›
, 
∑øms
)

	)

81 
	#__ölöe_m©h›_de˛NP
(
func
, 
›
, 
∑øms
...) \

82 
	`__ölöe_m©h›_de˛NP_
 (, 
func
, 
›
, 
∑øms
)

	)

85 
	#__ölöe_m©h›_de˛_
(
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
...) \

86 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥Ë
__THROW
; \

87 
	`__ölöe_m©h›_de˛NP_
 (
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
)

	)

89 
	#__ölöe_m©h›_de˛NP_
(
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
...) \

90 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
__x
)) \

92 
Êﬂt_ty≥
 
__ªsu…
; \

93 
__asm
 
	`__vﬁ©ûe__
 (
›
 : "Ò" (
__ªsu…
Ë: 
∑øms
); \

94  
__ªsu…
; \

95 }

	)

98 #ifde‡
__USE_ISOC99


99 
	#__ölöe_m©hcode
(
func
, 
¨g
, 
code
) \

100 
	`__ölöe_m©hcode_
 (, 
func
, 
¨g
, 
code
) \

101 
	`__ölöe_m©hcode_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g
, 
code
) \

102 
	`__ölöe_m©hcode_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g
, 
code
)

	)

103 
	#__ölöe_m©hcodeNP
(
func
, 
¨g
, 
code
) \

104 
	`__ölöe_m©hcodeNP_
 (, 
func
, 
¨g
, 
code
) \

105 
	`__ölöe_m©hcodeNP_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g
, 
code
) \

106 
	`__ölöe_m©hcodeNP_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g
, 
code
)

	)

107 
	#__ölöe_m©hcode2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

108 
	`__ölöe_m©hcode2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
) \

109 
	`__ölöe_m©hcode2_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
code
) \

110 
	`__ölöe_m©hcode2_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
code
)

	)

111 
	#__ölöe_m©hcodeNP2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

112 
	`__ölöe_m©hcodeNP2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
) \

113 
	`__ölöe_m©hcodeNP2_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
code
) \

114 
	`__ölöe_m©hcodeNP2_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
code
)

	)

115 
	#__ölöe_m©hcode3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

116 
	`__ölöe_m©hcode3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

117 
	`__ölöe_m©hcode3_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

118 
	`__ölöe_m©hcode3_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

119 
	#__ölöe_m©hcodeNP3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

120 
	`__ölöe_m©hcodeNP3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

121 
	`__ölöe_m©hcodeNP3_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

122 
	`__ölöe_m©hcodeNP3_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

124 
	#__ölöe_m©hcode
(
func
, 
¨g
, 
code
) \

125 
	`__ölöe_m©hcode_
 (, 
func
, (
¨g
), 
code
)

	)

126 
	#__ölöe_m©hcodeNP
(
func
, 
¨g
, 
code
) \

127 
	`__ölöe_m©hcodeNP_
 (, 
func
, (
¨g
), 
code
)

	)

128 
	#__ölöe_m©hcode2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

129 
	`__ölöe_m©hcode2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

130 
	#__ölöe_m©hcodeNP2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

131 
	`__ölöe_m©hcodeNP2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

132 
	#__ölöe_m©hcode3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

133 
	`__ölöe_m©hcode3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

134 
	#__ölöe_m©hcodeNP3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

135 
	`__ölöe_m©hcodeNP3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

138 
	#__ölöe_m©hcode_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
) \

139 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥Ë
__THROW
; \

140 
	`__ölöe_m©hcodeNP_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
)

	)

142 
	#__ölöe_m©hcodeNP_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
) \

143 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g
)) \

145 
code
; \

146 }

	)

149 
	#__ölöe_m©hcode2_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
) \

150 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥, flﬂt_ty≥Ë
__THROW
; \

151 
	`__ölöe_m©hcodeNP2_
 (
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

153 
	#__ölöe_m©hcodeNP2_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
) \

154 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g1
, flﬂt_ty≥ 
¨g2
)) \

156 
code
; \

157 }

	)

159 
	#__ölöe_m©hcode3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

160 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥, flﬂt_ty≥, flﬂt_ty≥Ë
__THROW
; \

161 
	`__ölöe_m©hcodeNP3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

163 
	#__ölöe_m©hcodeNP3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

164 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g1
, flﬂt_ty≥ 
¨g2
, \

165 
Êﬂt_ty≥
 
¨g3
)) \

167 
code
; \

168 }

	)

172 #i‡!
deföed
 
__NO_MATH_INLINES
 && deföed 
__OPTIMIZE__


176 #ifde‡
__FAST_MATH__


180 #i‡
__GNUC_PREREQ
 (3, 5)

181 
	#__expm1_code
 \

182 
__ãmp
; \

183 
__ãmp
 = 
	`__buûtö_expm1l
 (
__x
); \

184  
__ãmp
 ? __ãm∞: 
__x


	)

186 
	#__expm1_code
 \

187 
__vÆue
; \

188 
__exp⁄ít
; \

189 
__ãmp
; \

190 
__asm
 
__vﬁ©ûe__
 \

199 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

200 
__asm
 
__vﬁ©ûe__
 \

202 : "Ò" (
__ãmp
Ë: "0" (1.0), "u" (
__exp⁄ít
)); \

203 
__ãmp
 -= 1.0; \

204 
__ãmp
 +
__vÆue
; \

205  
__ãmp
 ? __ãm∞: 
__x


	)

207 
	$__ölöe_m©hcodeNP_
 (, 
__expm1l
, 
__x
, 
__expm1_code
)

209 #i‡
	`__GNUC_PREREQ
 (3, 4)

210 
	`__ölöe_m©hcodeNP_
 (, 
__ex∂
, 
__x
,  
	$__buûtö_ex∂
 (
__x
))

212 
	#__exp_code
 \

213 
__vÆue
; \

214 
__exp⁄ít
; \

215 
__asm
 
__vﬁ©ûe__
 \

223 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

224 
__vÆue
 += 1.0; \

225 
__asm
 
__vﬁ©ûe__
 \

227 : "Ò" (
__vÆue
Ë: "0" (__vÆue), "u" (
__exp⁄ít
)); \

228  
__vÆue


	)

229 
	$__ölöe_m©hcodeNP
 (
exp
, 
__x
, 
__exp_code
)

230 
	$__ölöe_m©hcodeNP_
 (, 
__ex∂
, 
__x
, 
__exp_code
)

235 #ifde‡
__FAST_MATH__


236 #i‡!
	`__GNUC_PREREQ
 (3,3)

237 
	`__ölöe_m©h›NP
 (
sqπ
, "fsqrt")

238 
	`__ölöe_m©h›NP_
 (, 
__sqπl
, "fsqrt")

239 
	#__libc_sqπl
(
n
Ë
	`__sqπl
 (n)

	)

241 
	#__libc_sqπl
(
n
Ë
	`__buûtö_sqπl
 (n)

	)

245 #i‡
	`__GNUC_PREREQ
 (2, 8)

246 
	`__ölöe_m©hcodeNP_
 (, 
Ábs
, 
__x
,  
	$__buûtö_Ábs
 (
__x
))

247 #ifde‡
__USE_ISOC99


248 
	`__ölöe_m©hcodeNP_
 (, 
Ábsf
, 
__x
,  
	$__buûtö_Ábsf
 (
__x
))

249 
	`__ölöe_m©hcodeNP_
 (, 
Áb¶
, 
__x
,  
	$__buûtö_Áb¶
 (
__x
))

251 
	`__ölöe_m©hcodeNP_
 (, 
__Áb¶
, 
__x
,  
	$__buûtö_Áb¶
 (
__x
))

253 
	`__ölöe_m©h›
 (
Ábs
, "fabs")

254 
	`__ölöe_m©h›_
 (, 
__Áb¶
, "fabs")

257 
	`__ölöe_m©hcode_
 (, 
__sgn1l
, 
__x
, \

258 
__exãnsi⁄__
 uni⁄ { 
__xld
; 
__xi
[3]; } 
__n
 = \

259 { 
__xld
: 
__x
 
	}
}; \

260 
	g__n
.
	g__xi
[2] = (
__n
.
__xi
[2] & 0x8000) | 0x3fff; \

261 
	g__n
.
	g__xi
[1] = 0x80000000; \

262 
	g__n
.
	g__xi
[0] = 0; \

263  
	g__n
.
	g__xld
)

266 #ifde‡
__FAST_MATH__


268 
__ölöe_m©hcodeNP
 (
söh
, 
__x
, \

269 
__exm1
 = 
__expm1l
 (
__Áb¶
 (
__x
)); \

270  0.5 * (
__exm1
 / (__exm1 + 1.0Ë+ __exm1Ë* 
	$__sgn1l
 (
__x
))

272 
	`__ölöe_m©hcodeNP
 (
cosh
, 
__x
, \

273 
__ex
 = 
	`__ex∂
 (
__x
); \

274  0.5 * (
__ex
 + 1.0 / __ex))

276 
	`__ölöe_m©hcodeNP
 (
ènh
, 
__x
, \

277 
__exm1
 = 
	`__expm1l
 (-
	`__Áb¶
 (
__x
 + __x)); \

278  
__exm1
 / (__exm1 + 2.0Ë* 
	`__sgn1l
 (-
__x
))

283 #ifde‡
__USE_ISOC99


285 #ifde‡
__FAST_MATH__


286 
	$__ölöe_m©hcodeNP
 (
expm1
, 
__x
, 
__expm1_code
)

289 
	`__ölöe_m©hcodeNP
 (
asöh
, 
__x
, \

290 
__y
 = 
	`__Áb¶
 (
__x
); \

291  (
	`log1∂
 (
__y
 * __y / (
	`__libc_sqπl
 (__y * __y + 1.0) + 1.0) + __y) \

292 * 
	$__sgn1l
 (
__x
)))

294 
	`__ölöe_m©hcodeNP
 (
acosh
, 
__x
, \

295  
	`logl
 (
__x
 + 
	`__libc_sqπl
 (__x - 1.0) * __libc_sqrtl (__x + 1.0)))

297 
	`__ölöe_m©hcodeNP
 (
©™h
, 
__x
, \

298 
__y
 = 
	`__Áb¶
 (
__x
); \

299  -0.5 * 
	`log1∂
 (-(
__y
 + __yË/ (1.0 + __y)Ë* 
	$__sgn1l
 (
__x
))

302 
	`__ölöe_m©hcodeNP2
 (
hypŸ
, 
__x
, 
__y
,

303  
	`__libc_sqπl
 (
__x
 * __x + 
__y
 * __y))

310 #ifde‡
__FAST_MATH__


311 #unde‡
__expm1_code


312 #unde‡
__exp_code


319 #ifde‡
__LIBC_INTERNAL_MATH_INLINES


320 
	`__ölöe_m©hcode2_
 (, 
__õì754_©™2l
, 
__y
, 
__x
,

321 
__vÆue
;

322 
__asm
 
	`__vﬁ©ûe__
 ("fpatan\n\t"

323 : "Ò" (
__vÆue
)

324 : "0" (
__x
), "u" (
__y
) : "st(1)");

325  
__vÆue
;)

	@/usr/include/bits/posix1_lim.h

24 #i‚def 
_BITS_POSIX1_LIM_H


25 
	#_BITS_POSIX1_LIM_H
 1

	)

27 
	~<bôs/w‹dsize.h
>

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

90 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


93 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

97 
	#_POSIX_PATH_MAX
 256

	)

100 
	#_POSIX_PIPE_BUF
 512

	)

104 
	#_POSIX_RE_DUP_MAX
 255

	)

107 
	#_POSIX_RTSIG_MAX
 8

	)

110 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

113 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

116 
	#_POSIX_SIGQUEUE_MAX
 32

	)

119 
	#_POSIX_SSIZE_MAX
 32767

	)

122 
	#_POSIX_STREAM_MAX
 8

	)

125 
	#_POSIX_SYMLINK_MAX
 255

	)

129 
	#_POSIX_SYMLOOP_MAX
 8

	)

132 
	#_POSIX_TIMER_MAX
 32

	)

135 
	#_POSIX_TTY_NAME_MAX
 9

	)

138 #ifde‡
__USE_XOPEN2K


139 
	#_POSIX_TZNAME_MAX
 6

	)

141 
	#_POSIX_TZNAME_MAX
 3

	)

144 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


146 
	#_POSIX_QLIMIT
 1

	)

150 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

153 
	#_POSIX_UIO_MAXIOV
 16

	)

157 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

161 
	~<bôs/loˇl_lim.h
>

164 #i‚def 
SSIZE_MAX


168 #i‡
__WORDSIZE
 =64 || 
__WORDSIZE32_SIZE_ULONG


169 
	#SSIZE_MAX
 
LONG_MAX


	)

171 
	#SSIZE_MAX
 
INT_MAX


	)

179 #i‚def 
NGROUPS_MAX


180 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

22 #i‚def 
_BITS_POSIX2_LIM_H


23 
	#_BITS_POSIX2_LIM_H
 1

	)

27 
	#_POSIX2_BC_BASE_MAX
 99

	)

30 
	#_POSIX2_BC_DIM_MAX
 2048

	)

33 
	#_POSIX2_BC_SCALE_MAX
 99

	)

36 
	#_POSIX2_BC_STRING_MAX
 1000

	)

40 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

44 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

47 
	#_POSIX2_LINE_MAX
 2048

	)

51 
	#_POSIX2_RE_DUP_MAX
 255

	)

55 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

62 #i‚def 
BC_BASE_MAX


63 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

65 #i‚def 
BC_DIM_MAX


66 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

68 #i‚def 
BC_SCALE_MAX


69 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

71 #i‚def 
BC_STRING_MAX


72 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

74 #i‚def 
COLL_WEIGHTS_MAX


75 
	#COLL_WEIGHTS_MAX
 255

	)

77 #i‚def 
EXPR_NEST_MAX


78 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

80 #i‚def 
LINE_MAX


81 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

83 #i‚def 
CHARCLASS_NAME_MAX


84 
	#CHARCLASS_NAME_MAX
 2048

	)

88 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/posix_opt.h

19 #i‚def 
_BITS_POSIX_OPT_H


20 
	#_BITS_POSIX_OPT_H
 1

	)

23 
	#_POSIX_JOB_CONTROL
 1

	)

26 
	#_POSIX_SAVED_IDS
 1

	)

29 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

32 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

35 
	#_POSIX_FSYNC
 200809L

	)

38 
	#_POSIX_MAPPED_FILES
 200809L

	)

41 
	#_POSIX_MEMLOCK
 200809L

	)

44 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

47 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

50 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

54 
	#_POSIX_VDISABLE
 '\0'

	)

57 
	#_POSIX_NO_TRUNC
 1

	)

60 
	#_XOPEN_REALTIME
 1

	)

63 
	#_XOPEN_REALTIME_THREADS
 1

	)

66 
	#_XOPEN_SHM
 1

	)

69 
	#_POSIX_THREADS
 200809L

	)

72 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

73 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

76 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

79 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

82 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

85 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

89 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

91 #ifde‡
__USE_XOPEN2K8


93 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

96 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

100 
	#_POSIX_SEMAPHORES
 200809L

	)

103 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

106 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

107 
	#_POSIX_ASYNC_IO
 1

	)

109 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

111 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

114 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

117 
	#_LFS_LARGEFILE
 1

	)

118 
	#_LFS64_LARGEFILE
 1

	)

119 
	#_LFS64_STDIO
 1

	)

122 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

125 
	#_POSIX_CPUTIME
 0

	)

128 
	#_POSIX_THREAD_CPUTIME
 0

	)

131 
	#_POSIX_REGEXP
 1

	)

134 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

137 
	#_POSIX_SHELL
 1

	)

140 
	#_POSIX_TIMEOUTS
 200809L

	)

143 
	#_POSIX_SPIN_LOCKS
 200809L

	)

146 
	#_POSIX_SPAWN
 200809L

	)

149 
	#_POSIX_TIMERS
 200809L

	)

152 
	#_POSIX_BARRIERS
 200809L

	)

155 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

158 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

161 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

164 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

167 
	#_POSIX_ADVISORY_INFO
 200809L

	)

170 
	#_POSIX_IPV6
 200809L

	)

173 
	#_POSIX_RAW_SOCKETS
 200809L

	)

176 
	#_POSIX2_CHAR_TERM
 200809L

	)

179 
	#_POSIX_SPORADIC_SERVER
 -1

	)

180 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

183 
	#_POSIX_TRACE
 -1

	)

184 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

185 
	#_POSIX_TRACE_INHERIT
 -1

	)

186 
	#_POSIX_TRACE_LOG
 -1

	)

189 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

192 
	#_XOPEN_STREAMS
 -1

	)

	@/usr/include/bits/stdint-intn.h

19 #i‚de‡
_BITS_STDINT_INTN_H


20 
	#_BITS_STDINT_INTN_H
 1

	)

22 
	~<bôs/ty≥s.h
>

24 
__öt8_t
 
	töt8_t
;

25 
__öt16_t
 
	töt16_t
;

26 
__öt32_t
 
	töt32_t
;

27 
__öt64_t
 
	töt64_t
;

	@/usr/include/bits/stdint-uintn.h

19 #i‚de‡
_BITS_STDINT_UINTN_H


20 
	#_BITS_STDINT_UINTN_H
 1

	)

22 
	~<bôs/ty≥s.h
>

24 
__uöt8_t
 
	tuöt8_t
;

25 
__uöt16_t
 
	tuöt16_t
;

26 
__uöt32_t
 
	tuöt32_t
;

27 
__uöt64_t
 
	tuöt64_t
;

	@/usr/include/bits/stdio-ldbl.h

19 #i‚de‡
_STDIO_H


23 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

24 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

25 
	$__LDBL_REDIR_DECL
 (
•rötf
)

26 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

27 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

28 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

29 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

30 && !
deföed
 
__REDIRECT
 \

31 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

32 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

33 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

34 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

36 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

37 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

41 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


42 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

43 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

46 #ifdef 
__USE_ISOC99


47 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

48 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

49 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

50 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

51 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

53 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

54 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

55 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

59 #ifde‡
__USE_XOPEN2K8


60 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

61 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

64 #ifde‡
__USE_GNU


65 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

66 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

67 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

68 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

72 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


73 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

74 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

75 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


76 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

77 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

79 #i‡
__USE_FORTIFY_LEVEL
 > 1

80 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

82 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

83 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

84 #ifde‡
__USE_XOPEN2K8


85 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

88 #ifde‡
__USE_GNU


89 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

90 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

91 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

19 #i‚de‡
_BITS_STDIO_H


20 
	#_BITS_STDIO_H
 1

	)

22 #i‚de‡
_STDIO_H


26 #i‚de‡
__exã∫_ölöe


27 
	#__STDIO_INLINE
 
ölöe


	)

29 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

33 #ifde‡
__USE_EXTERN_INLINES


36 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
)

38 
__STDIO_INLINE
 

39 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__¨g
)

41  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

42 
	}
}

46 
__STDIO_INLINE
 

47 
	$gëch¨
 ()

49  
	`gëc
 (
°dö
);

50 
	}
}

53 #ifde‡
__USE_MISC


55 
__STDIO_INLINE
 

56 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

58  
	`__gëc_u∆ocked_body
 (
__Â
);

59 
	}
}

63 #ifde‡
__USE_POSIX


65 
__STDIO_INLINE
 

66 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

68  
	`__gëc_u∆ocked_body
 (
__Â
);

69 
	}
}

72 
__STDIO_INLINE
 

73 
	$gëch¨_u∆ocked
 ()

75  
	`__gëc_u∆ocked_body
 (
°dö
);

76 
	}
}

81 
__STDIO_INLINE
 

82 
	$putch¨
 (
__c
)

84  
	`putc
 (
__c
, 
°dout
);

85 
	}
}

88 #ifde‡
__USE_MISC


90 
__STDIO_INLINE
 

91 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

93  
	`__putc_u∆ocked_body
 (
__c
, 
__°ªam
);

94 
	}
}

98 #ifde‡
__USE_POSIX


100 
__STDIO_INLINE
 

101 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

103  
	`__putc_u∆ocked_body
 (
__c
, 
__°ªam
);

104 
	}
}

107 
__STDIO_INLINE
 

108 
	$putch¨_u∆ocked
 (
__c
)

110  
	`__putc_u∆ocked_body
 (
__c
, 
°dout
);

111 
	}
}

115 #ifdef 
__USE_GNU


117 
__STDIO_INLINE
 
__ssize_t


118 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

120  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

121 
	}
}

125 #ifde‡
__USE_MISC


127 
__STDIO_INLINE
 

128 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

130  
	`__„of_u∆ocked_body
 (
__°ªam
);

131 
	}
}

134 
__STDIO_INLINE
 

135 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

137  
	`__„º‹_u∆ocked_body
 (
__°ªam
);

138 
	}
}

144 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

145 && !
deföed
 
	g__˝lu•lus


147 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

148 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

149 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

150 && (
size_t
Ë(
size
) != 0) \

151 ? ({ *
__±r
 = (*Ë(
±r
); \

152 
FILE
 *
__°ªam
 = (
°ªam
); \

153 
size_t
 
__˙t
; \

154 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

155 
__˙t
 > 0; --__cnt) \

157 
__c
 = 
	`gëc_u∆ocked
 (
__°ªam
); \

158 i‡(
__c
 =
EOF
) \

160 *
__±r
++ = 
__c
; \

162 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

163 / (
size_t
Ë(
size
); }) \

164 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

165 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

167 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

168 (Ë(
n
), (
size_t
) 0) \

169 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

171 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

172 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

173 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

174 && (
size_t
Ë(
size
) != 0) \

175 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

176 
FILE
 *
__°ªam
 = (
°ªam
); \

177 
size_t
 
__˙t
; \

178 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

179 
__˙t
 > 0; --__cnt) \

180 i‡(
	`putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

182 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

183 / (
size_t
Ë(
size
); }) \

184 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

185 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

187 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

188 (Ë(
n
), (
size_t
) 0) \

189 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

193 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

19 #i‚de‡
_BITS_STDIO2_H


20 
	#_BITS_STDIO2_H
 1

	)

22 #i‚de‡
_STDIO_H


26 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

28 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

29 c⁄° *
__ª°ri˘
 
__f‹m©
,

30 
__gnuc_va_li°
 
__≠
Ë
__THROW
;

32 #ifde‡
__va_¨g_∑ck


33 
__f‹tify_fun˘i⁄
 

34 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
, ...))

36  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

37 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

38 
	}
}

39 #ñi‡!
deföed
 
__˝lu•lus


40 
	#•rötf
(
°r
, ...) \

41 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

42 
__VA_ARGS__
)

	)

45 
__f‹tify_fun˘i⁄
 

46 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
,

47 
__gnuc_va_li°
 
__≠
))

49  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

50 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

51 
	}
}

53 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


55 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

56 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

57 ...Ë
__THROW
;

58 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

59 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

60 
__gnuc_va_li°
 
__≠
Ë
__THROW
;

62 #ifde‡
__va_¨g_∑ck


63 
__f‹tify_fun˘i⁄
 

64 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

65 c⁄° *
__ª°ri˘
 
__fmt
, ...))

67  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

68 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

69 
	}
}

70 #ñi‡!
deföed
 
__˝lu•lus


71 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

72 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

73 
__VA_ARGS__
)

	)

76 
__f‹tify_fun˘i⁄
 

77 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

78 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

80  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

81 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

82 
	}
}

86 #i‡
__USE_FORTIFY_LEVEL
 > 1

88 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

89 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

90 
__¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

91 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

92 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__≠
);

93 
__v¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

94 
__gnuc_va_li°
 
__≠
);

96 #ifde‡
__va_¨g_∑ck


97 
__f‹tify_fun˘i⁄
 

98 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° *__ª°ri˘ 
__fmt
, ...)

100  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

101 
	`__va_¨g_∑ck
 ());

102 
	}
}

104 
__f‹tify_fun˘i⁄
 

105 
	$¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, ...)

107  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

108 
	}
}

109 #ñi‡!
deföed
 
__˝lu•lus


110 
	#¥ötf
(...) \

111 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

112 
	#Ârötf
(
°ªam
, ...) \

113 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

116 
__f‹tify_fun˘i⁄
 

117 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

119 #ifde‡
__USE_EXTERN_INLINES


120  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

124 
	}
}

126 
__f‹tify_fun˘i⁄
 

127 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

128 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

130  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

131 
	}
}

133 #ifde‡
__USE_XOPEN2K8


134 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, c⁄° *
__ª°ri˘
 
__fmt
,

135 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

136 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

137 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__¨g
)

138 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

140 #ifde‡
__va_¨g_∑ck


141 
__f‹tify_fun˘i⁄
 

142 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

144  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

145 
	`__va_¨g_∑ck
 ());

146 
	}
}

147 #ñi‡!
deföed
 
__˝lu•lus


148 
	#d¥ötf
(
fd
, ...) \

149 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

152 
__f‹tify_fun˘i⁄
 

153 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

155  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

156 
	}
}

159 #ifde‡
__USE_GNU


161 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

162 c⁄° *
__ª°ri˘
 
__fmt
, ...)

163 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

164 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

165 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__¨g
)

166 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

167 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

168 
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

170 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

171 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

172 
__Êag
,

173 c⁄° *
__ª°ri˘
 
__f‹m©
,

174 
__gnuc_va_li°
 
__¨gs
)

175 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

177 #ifde‡
__va_¨g_∑ck


178 
__f‹tify_fun˘i⁄
 

179 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
, ...))

181  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

185 
__f‹tify_fun˘i⁄
 

186 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

189  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

190 
	`__va_¨g_∑ck
 ());

191 
	}
}

193 
__f‹tify_fun˘i⁄
 

194 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

195 c⁄° *
__ª°ri˘
 
__fmt
, ...))

197  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

198 
	`__va_¨g_∑ck
 ());

199 
	}
}

200 #ñi‡!
deföed
 
__˝lu•lus


201 
	#a•rötf
(
±r
, ...) \

202 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

203 
	#__a•rötf
(
±r
, ...) \

204 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

205 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

206 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

209 
__f‹tify_fun˘i⁄
 

210 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

211 
__gnuc_va_li°
 
__≠
))

213  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

214 
	}
}

216 
__f‹tify_fun˘i⁄
 

217 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

218 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

220  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

221 
__≠
);

222 
	}
}

228 #i‡
__GLIBC_USE
 (
DEPRECATED_GETS
)

229 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

230 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

231 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

234 
__f‹tify_fun˘i⁄
 
__wur
 *

235 
	$gës
 (*
__°r
)

237 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

238  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

239  
	`__gës_w¨n
 (
__°r
);

240 
	}
}

243 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

244 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

245 *
	`__REDIRECT
 (
__fgës_Æüs
,

246 (*
__ª°ri˘
 
__s
, 
__n
,

247 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

248 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

249 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

250 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

251 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

254 
__f‹tify_fun˘i⁄
 
__wur
 *

255 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

257 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

259 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

260  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

262 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

263  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

265  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

266 
	}
}

268 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

269 
size_t
 
__size
, size_à
__n
,

270 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

271 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

272 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

273 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

274 
‰ód
Ë
__wur
;

275 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

276 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

277 
size_t
 
__size
, size_à
__n
,

278 
FILE
 *
__ª°ri˘
 
__°ªam
),

279 
__‰ód_chk
)

280 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

283 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


284 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

285 
FILE
 *
__ª°ri˘
 
__°ªam
)

287 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

289 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

290 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

291 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

292  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

294 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

295  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

297  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

298 
	}
}

300 #ifde‡
__USE_GNU


301 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

302 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

303 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

304 (*
__ª°ri˘
 
__s
, 
__n
,

305 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

306 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

307 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

308 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

309 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

312 
__f‹tify_fun˘i⁄
 
__wur
 *

313 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

315 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

317 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

318  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

320 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

321  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

323  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

324 
	}
}

327 #ifde‡
__USE_MISC


328 #unde‡
‰ód_u∆ocked


329 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

330 
size_t
 
__size
, size_à
__n
,

331 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

332 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

333 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

334 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

335 
‰ód_u∆ocked
Ë
__wur
;

336 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

337 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

338 
size_t
 
__size
, size_à
__n
,

339 
FILE
 *
__ª°ri˘
 
__°ªam
),

340 
__‰ód_u∆ocked_chk
)

341 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

344 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


345 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

346 
FILE
 *
__ª°ri˘
 
__°ªam
)

348 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

350 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

351 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

352 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

353  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

354 
__°ªam
);

356 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

357  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

358 
__°ªam
);

361 #ifde‡
__USE_EXTERN_INLINES


362 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

363 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

364 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

365 && 
__size
 * 
__n
 <= 8)

367 
size_t
 
__˙t
 = 
__size
 * 
__n
;

368 *
__˝å
 = (*Ë
__±r
;

369 i‡(
__˙t
 == 0)

372 ; 
__˙t
 > 0; --__cnt)

374 
__c
 = 
	`gëc_u∆ocked
 (
__°ªam
);

375 i‡(
__c
 =
EOF
)

377 *
__˝å
++ = 
__c
;

379  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

382  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

383 
	}
}

	@/usr/include/bits/stdio_lim.h

18 #i‚de‡
_BITS_STDIO_LIM_H


19 
	#_BITS_STDIO_LIM_H
 1

	)

21 #i‚de‡
_STDIO_H


25 
	#L_tm≤am
 20

	)

26 
	#TMP_MAX
 238328

	)

27 
	#FILENAME_MAX
 4096

	)

29 #ifde‡
__USE_POSIX


30 
	#L_˘îmid
 9

	)

31 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


32 
	#L_cu£rid
 9

	)

36 #unde‡
FOPEN_MAX


37 
	#FOPEN_MAX
 16

	)

	@/usr/include/bits/stdlib-bsearch.h

19 
__exã∫_ölöe
 *

20 
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

21 
__com∑r_‚_t
 
__com∑r
)

23 
size_t
 
__l
, 
__u
, 
__idx
;

24 c⁄° *
__p
;

25 
__com∑ris⁄
;

27 
__l
 = 0;

28 
__u
 = 
__nmemb
;

29 
__l
 < 
__u
)

31 
__idx
 = (
__l
 + 
__u
) / 2;

32 
__p
 = (*Ë(((c⁄° *Ë
__ba£
Ë+ (
__idx
 * 
__size
));

33 
__com∑ris⁄
 = (*
__com∑r
Ë(
__key
, 
__p
);

34 i‡(
__com∑ris⁄
 < 0)

35 
__u
 = 
__idx
;

36 i‡(
__com∑ris⁄
 > 0)

37 
__l
 = 
__idx
 + 1;

39  (*Ë
__p
;

42  
NULL
;

43 
	}
}

	@/usr/include/bits/stdlib-float.h

19 #i‚de‡
_STDLIB_H


23 #ifde‡
__USE_EXTERN_INLINES


24 
__exã∫_ölöe
 

25 
__NTH
 (
	$©of
 (c⁄° *
__≈å
))

27  
	`°πod
 (
__≈å
, (**Ë
NULL
);

28 
	}
}

	@/usr/include/bits/stdlib-ldbl.h

19 #i‚de‡
_STDLIB_H


23 #ifdef 
__USE_ISOC99


24 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 #ifde‡
__USE_GNU


28 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

31 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

32 
	$__LDBL_REDIR1_DECL
 (
°r‰oml
, 
°r‰omd
)

35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

19 #i‚de‡
_STDLIB_H


23 *
	$__ªÆ∑th_chk
 (c⁄° *
__ª°ri˘
 
__«me
,

24 *
__ª°ri˘
 
__ªsﬁved
,

25 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

26 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

27 (c⁄° *
__ª°ri˘
 
__«me
,

28 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

29 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

30 (c⁄° *
__ª°ri˘
 
__«me
,

31 *
__ª°ri˘
 
__ªsﬁved
,

32 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


33 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

36 
__f‹tify_fun˘i⁄
 
__wur
 *

37 
	`__NTH
 (
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

39 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

41 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


42 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

43  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

45  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

48  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

49 
	}
}

52 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

53 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

54 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

55 
size_t
 
__buÊí
), 
±¢ame_r
)

56 
	`__n⁄nuŒ
 ((2));

57 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

58 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

59 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

60 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

63 
__f‹tify_fun˘i⁄
 

64 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

66 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

68 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

69  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

70 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

71  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

73  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

74 
	}
}

77 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

78 
__THROW
 
__wur
;

79 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

80 
w˘omb
Ë
__wur
;

82 
__f‹tify_fun˘i⁄
 
__wur
 

83 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

88 
	#__STDLIB_MB_LEN_MAX
 16

	)

89 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


92 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

93  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

94  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

95 
	}
}

98 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

99 c⁄° *
__ª°ri˘
 
__§c
,

100 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

101 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

102 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

103 c⁄° *
__ª°ri˘
 
__§c
,

104 
size_t
 
__Àn
), 
mb°owcs
);

105 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

106 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

107 c⁄° *
__ª°ri˘
 
__§c
,

108 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

109 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

112 
__f‹tify_fun˘i⁄
 
size_t


113 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° *__ª°ri˘ 
__§c
,

114 
size_t
 
__Àn
))

116 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

118 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

119  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

120 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

122 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

123  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

124 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

126  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

127 
	}
}

130 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

131 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

132 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

133 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

134 (*
__ª°ri˘
 
__d°
,

135 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

136 
size_t
 
__Àn
), 
wc°ombs
);

137 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

138 (*
__ª°ri˘
 
__d°
,

139 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

140 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

141 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

143 
__f‹tify_fun˘i⁄
 
size_t


144 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__§c
,

145 
size_t
 
__Àn
))

147 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

149 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

150  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

151 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

152  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

154  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

155 
	}
}

	@/usr/include/bits/string_fortified.h

18 #i‚de‡
_BITS_STRING_FORTIFIED_H


19 
	#_BITS_STRING_FORTIFIED_H
 1

	)

21 #i‚de‡
_STRING_H


25 #i‡!
__GNUC_PREREQ
 (5,0)

26 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

30 
__f‹tify_fun˘i⁄
 *

31 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

32 
size_t
 
__Àn
))

34  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

35 
	}
}

37 
__f‹tify_fun˘i⁄
 *

38 
__NTH
 (
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__Àn
))

40  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

41 
	}
}

43 #ifde‡
__USE_GNU


44 
__f‹tify_fun˘i⁄
 *

45 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

46 
size_t
 
__Àn
))

48  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

49 
	}
}

58 
__f‹tify_fun˘i⁄
 *

59 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

63 #i‡!
	`__GNUC_PREREQ
 (5,0)

64 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

65 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

67 
	`__w¨n_mem£t_zîo_Àn
 ();

68  
__de°
;

71  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

72 
	}
}

74 #ifde‡
__USE_MISC


75 
	~<bôs/°rögs_f‹tifõd.h
>

77 
	$__ex∂icô_bzîo_chk
 (*
__de°
, 
size_t
 
__Àn
, size_à
__de°Àn
)

78 
__THROW
 
	`__n⁄nuŒ
 ((1));

80 
__f‹tify_fun˘i⁄
 

81 
	`__NTH
 (
	$ex∂icô_bzîo
 (*
__de°
, 
size_t
 
__Àn
))

83 
	`__ex∂icô_bzîo_chk
 (
__de°
, 
__Àn
, 
	`__bos0
 (__dest));

84 
	}
}

87 
__f‹tify_fun˘i⁄
 *

88 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

90  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

91 
	}
}

93 #ifde‡
__USE_GNU


94 
__f‹tify_fun˘i⁄
 *

95 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

97  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

98 
	}
}

102 
__f‹tify_fun˘i⁄
 *

103 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

104 
size_t
 
__Àn
))

106  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

107 
	}
}

110 *
	$__°≤˝y_chk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

111 
size_t
 
__de°Àn
Ë
__THROW
;

112 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
, c⁄° *
__§c
,

113 
size_t
 
__n
), 
°≤˝y
);

115 
__f‹tify_fun˘i⁄
 *

116 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
))

118 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

119 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿> 
	`__bos
 (
__de°
)))

120  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

121  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

122 
	}
}

125 
__f‹tify_fun˘i⁄
 *

126 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

128  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

129 
	}
}

132 
__f‹tify_fun˘i⁄
 *

133 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

134 
size_t
 
__Àn
))

136  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

137 
	}
}

	@/usr/include/bits/sys_errlist.h

19 #i‚de‡
_STDIO_H


25 #ifde‡ 
__USE_MISC


26 
sys_√º
;

27 c⁄° *c⁄° 
sys_îæi°
[];

29 #ifde‡ 
__USE_GNU


30 
_sys_√º
;

31 c⁄° *c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/types.h

23 #i‚def 
_BITS_TYPES_H


24 
	#_BITS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/w‹dsize.h
>

30 
	t__u_ch¨
;

31 
	t__u_sh‹t
;

32 
	t__u_öt
;

33 
	t__u_l⁄g
;

36 sig√d 
	t__öt8_t
;

37 
	t__uöt8_t
;

38 sig√d 
	t__öt16_t
;

39 
	t__uöt16_t
;

40 sig√d 
	t__öt32_t
;

41 
	t__uöt32_t
;

42 #i‡
__WORDSIZE
 == 64

43 sig√d 
	t__öt64_t
;

44 
	t__uöt64_t
;

46 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

47 
__exãnsi⁄__
 
	t__uöt64_t
;

51 
__öt8_t
 
	t__öt_Àa°8_t
;

52 
__uöt8_t
 
	t__uöt_Àa°8_t
;

53 
__öt16_t
 
	t__öt_Àa°16_t
;

54 
__uöt16_t
 
	t__uöt_Àa°16_t
;

55 
__öt32_t
 
	t__öt_Àa°32_t
;

56 
__uöt32_t
 
	t__uöt_Àa°32_t
;

57 
__öt64_t
 
	t__öt_Àa°64_t
;

58 
__uöt64_t
 
	t__uöt_Àa°64_t
;

61 #i‡
__WORDSIZE
 == 64

62 
	t__quad_t
;

63 
	t__u_quad_t
;

65 
__exãnsi⁄__
 
	t__quad_t
;

66 
__exãnsi⁄__
 
	t__u_quad_t
;

70 #i‡
__WORDSIZE
 == 64

71 
	t__ötmax_t
;

72 
	t__uötmax_t
;

74 
__exãnsi⁄__
 
	t__ötmax_t
;

75 
__exãnsi⁄__
 
	t__uötmax_t
;

108 
	#__S16_TYPE
 

	)

109 
	#__U16_TYPE
 

	)

110 
	#__S32_TYPE
 

	)

111 
	#__U32_TYPE
 

	)

112 
	#__SLONGWORD_TYPE
 

	)

113 
	#__ULONGWORD_TYPE
 

	)

114 #i‡
__WORDSIZE
 == 32

115 
	#__SQUAD_TYPE
 
__quad_t


	)

116 
	#__UQUAD_TYPE
 
__u_quad_t


	)

117 
	#__SWORD_TYPE
 

	)

118 
	#__UWORD_TYPE
 

	)

119 
	#__SLONG32_TYPE
 

	)

120 
	#__ULONG32_TYPE
 

	)

121 
	#__S64_TYPE
 
__quad_t


	)

122 
	#__U64_TYPE
 
__u_quad_t


	)

125 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

126 #ñi‡
__WORDSIZE
 == 64

127 
	t__SQUAD_TYPE
 

	)

128 
	t__UQUAD_TYPE
 

	)

129 
	t__SWORD_TYPE
 

	)

130 
	t__UWORD_TYPE
 

	)

131 
	t__SLONG32_TYPE
 

	)

132 
	t__ULONG32_TYPE
 

	)

133 
	t__S64_TYPE
 

	)

134 
	t__U64_TYPE
 

	)

136 
	t__STD_TYPE
 

	)

140 
	~<bôs/ty≥sizes.h
>

143 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

144 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

145 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

146 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

147 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

148 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

149 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

150 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

151 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

152 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

153 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

154 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

155 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

156 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

157 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

158 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

159 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

160 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

162 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

163 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

166 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

169 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

172 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

177 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

178 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

181 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

182 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

185 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

186 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

189 
__STD_TYPE
 
__FSWORD_T_TYPE
 
	g__fsw‹d_t
;

191 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

194 
__STD_TYPE
 
__SYSCALL_SLONG_TYPE
 
	g__sysˇŒ_¶⁄g_t
;

196 
__STD_TYPE
 
__SYSCALL_ULONG_TYPE
 
	g__sysˇŒ_ul⁄g_t
;

200 
__off64_t
 
	t__loff_t
;

201 *
	t__ˇddr_t
;

204 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

207 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

212 
	t__sig_©omic_t
;

214 #unde‡
__STD_TYPE


	@/usr/include/bits/types/FILE.h

1 #i‚de‡
__FILE_deföed


2 
	#__FILE_deföed
 1

	)

4 
	g_IO_FILE
;

7 
_IO_FILE
 
	tFILE
;

	@/usr/include/bits/types/__FILE.h

1 #i‚de‡
____FILE_deföed


2 
	#____FILE_deföed
 1

	)

4 
	g_IO_FILE
;

5 
_IO_FILE
 
	t__FILE
;

	@/usr/include/bits/types/__fpos64_t.h

1 #i‚de‡
_____Âos64_t_deföed


2 
	#_____Âos64_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

5 
	~<bôs/ty≥s/__mb°©e_t.h
>

10 
	s_G_Âos64_t


12 
__off64_t
 
	m__pos
;

13 
__mb°©e_t
 
	m__°©e
;

14 } 
	t__Âos64_t
;

	@/usr/include/bits/types/__fpos_t.h

1 #i‚de‡
_____Âos_t_deföed


2 
	#_____Âos_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

5 
	~<bôs/ty≥s/__mb°©e_t.h
>

10 
	s_G_Âos_t


12 
__off_t
 
	m__pos
;

13 
__mb°©e_t
 
	m__°©e
;

14 } 
	t__Âos_t
;

	@/usr/include/bits/types/cookie_io_functions_t.h

18 #i‚de‡
__cookõ_io_fun˘i⁄s_t_deföed


19 
	#__cookõ_io_fun˘i⁄s_t_deföed
 1

	)

21 
	~<bôs/ty≥s.h
>

27 
__ssize_t
 
	tcookõ_ªad_fun˘i⁄_t
 (*
	t__cookõ
, *
	t__buf
,

28 
	tsize_t
 
	t__nbyãs
);

36 
__ssize_t
 
	tcookõ_wrôe_fun˘i⁄_t
 (*
	t__cookõ
, c⁄° *
	t__buf
,

37 
	tsize_t
 
	t__nbyãs
);

45 
	tcookõ_£ek_fun˘i⁄_t
 (*
	t__cookõ
, 
	t__off64_t
 *
	t__pos
, 
	t__w
);

48 
	tcookõ_˛o£_fun˘i⁄_t
 (*
	t__cookõ
);

55 
	s_IO_cookõ_io_fun˘i⁄s_t


57 
cookõ_ªad_fun˘i⁄_t
 *
	mªad
;

58 
cookõ_wrôe_fun˘i⁄_t
 *
	mwrôe
;

59 
cookõ_£ek_fun˘i⁄_t
 *
	m£ek
;

60 
cookõ_˛o£_fun˘i⁄_t
 *
	m˛o£
;

61 } 
	tcookõ_io_fun˘i⁄s_t
;

	@/usr/include/bits/types/locale_t.h

19 #i‚de‡
_BITS_TYPES_LOCALE_T_H


20 
	#_BITS_TYPES_LOCALE_T_H
 1

	)

22 
	~<bôs/ty≥s/__loˇÀ_t.h
>

24 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/bits/types/struct_FILE.h

18 #i‚de‡
__°ru˘_FILE_deföed


19 
	#__°ru˘_FILE_deföed
 1

	)

25 #i‡
deföed
 
_IO_USE_OLD_IO_FILE
 && !deföed 
_LIBC


29 #i‡
deföed
 
_IO_lock_t_deföed
 && !deföed 
_LIBC


33 
	~<bôs/ty≥s.h
>

35 
	g_IO_FILE
;

36 
	g_IO_m¨kî
;

37 
	g_IO_codecvt
;

38 
	g_IO_wide_d©a
;

42 #i‚de‡
_IO_lock_t_deföed


43 
	t_IO_lock_t
;

49 
	s_IO_FILE


51 
	m_Êags
;

54 *
	m_IO_ªad_±r
;

55 *
	m_IO_ªad_íd
;

56 *
	m_IO_ªad_ba£
;

57 *
	m_IO_wrôe_ba£
;

58 *
	m_IO_wrôe_±r
;

59 *
	m_IO_wrôe_íd
;

60 *
	m_IO_buf_ba£
;

61 *
	m_IO_buf_íd
;

64 *
	m_IO_ßve_ba£
;

65 *
	m_IO_backup_ba£
;

66 *
	m_IO_ßve_íd
;

68 
_IO_m¨kî
 *
	m_m¨kîs
;

70 
_IO_FILE
 *
	m_chaö
;

72 
	m_fûío
;

73 
	m_Êags2
;

74 
__off_t
 
	m_ﬁd_off£t
;

77 
	m_cur_cﬁumn
;

78 sig√d 
	m_vèbÀ_off£t
;

79 
	m_sh‹tbuf
[1];

81 
_IO_lock_t
 *
	m_lock
;

82 #ifde‡
_IO_USE_OLD_IO_FILE


85 
	s_IO_FILE_com∂ëe


87 
_IO_FILE
 
	m_fûe
;

89 
__off64_t
 
	m_off£t
;

91 
_IO_codecvt
 *
	m_codecvt
;

92 
_IO_wide_d©a
 *
	m_wide_d©a
;

93 
_IO_FILE
 *
	m_‰ìªs_li°
;

94 *
	m_‰ìªs_buf
;

95 
size_t
 
	m__∑d5
;

96 
	m_mode
;

98 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

102 
	#__gëc_u∆ocked_body
(
_Â
) \

103 (
	`__glibc_u∆ikñy
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
) \

104 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

106 
	#__putc_u∆ocked_body
(
_ch
, 
_Â
) \

107 (
	`__glibc_u∆ikñy
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
) \

108 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

109 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

111 
	#_IO_EOF_SEEN
 0x0010

	)

112 
	#__„of_u∆ocked_body
(
_Â
Ë(((_Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

114 
	#_IO_ERR_SEEN
 0x0020

	)

115 
	#__„º‹_u∆ocked_body
(
_Â
Ë(((_Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

117 
	#_IO_USER_LOCK
 0x8000

	)

	@/usr/include/bits/types/struct_timeval.h

1 #i‚de‡
__timevÆ_deföed


2 
	#__timevÆ_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

8 
	stimevÆ


10 
__time_t
 
	mtv_£c
;

11 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/types/time_t.h

1 #i‚de‡
__time_t_deföed


2 
	#__time_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__time_t
 
	ttime_t
;

	@/usr/include/bits/unistd.h

19 #i‚de‡
_UNISTD_H


23 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

24 
size_t
 
__buÊí
Ë
__wur
;

25 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

26 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

27 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

28 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

29 
size_t
 
__buÊí
), 
__ªad_chk
)

30 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

33 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


34 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

36 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

38 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

39  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

41 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

42  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

44  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

45 
	}
}

47 #ifde‡
__USE_UNIX98


48 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

49 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

50 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

51 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

52 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

53 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

54 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

55 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

56 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

57 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

58 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

60 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

61 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

63 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

64 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

65 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

66 
__¥ód64_chk
)

67 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

70 #i‚de‡
__USE_FILE_OFFSET64


71 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


72 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

74 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

76 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

77  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

79 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

80  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

81 
	`__bos0
 (
__buf
));

83  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

84 
	}
}

86 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


87 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

89 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

91 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

92  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

94 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

95  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

96 
	`__bos0
 (
__buf
));

99  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

100 
	}
}

103 #ifde‡
__USE_LARGEFILE64


104 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


105 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

107 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

109 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

110  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

112 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

113  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

114 
	`__bos0
 (
__buf
));

117  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

118 
	}
}

122 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


123 
ssize_t
 
	$__ªadlök_chk
 (c⁄° *
__ª°ri˘
 
__∑th
,

124 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

125 
size_t
 
__buÊí
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

127 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

128 (c⁄° *
__ª°ri˘
 
__∑th
,

129 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

130 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

131 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

132 (c⁄° *
__ª°ri˘
 
__∑th
,

133 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

134 
size_t
 
__buÊí
), 
__ªadlök_chk
)

135 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

138 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


139 
	`__NTH
 (
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

140 
size_t
 
__Àn
))

142 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

144 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

145  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

147 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

148  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

150  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

151 
	}
}

154 #ifde‡
__USE_ATFILE


155 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

156 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

157 
size_t
 
__buÊí
)

158 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

159 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

160 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

161 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

162 
ªadlök©
)

163 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

164 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

165 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

166 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

167 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

168 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

172 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


173 
	`__NTH
 (
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

174 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

176 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

178 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

179  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

181 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

182  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

183 
	`__bos
 (
__buf
));

185  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

186 
	}
}

189 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

190 
__THROW
 
__wur
;

191 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

192 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

193 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

194 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

195 
__gëcwd_chk
)

196 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

199 
__f‹tify_fun˘i⁄
 
__wur
 *

200 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

202 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

204 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

205  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

207 i‡(
__size
 > 
	`__bos
 (
__buf
))

208  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

210  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

211 
	}
}

213 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


214 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

215 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

216 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

217 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

220 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

221 
	`__NTH
 (
	$gëwd
 (*
__buf
))

223 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

224  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

225  
	`__gëwd_w¨n
 (
__buf
);

226 
	}
}

229 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

230 
size_t
 
__buÊí
Ë
__THROW
;

231 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

232 
size_t
 
__Àn
), 
c⁄f°r
);

233 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

234 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

235 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

236 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

239 
__f‹tify_fun˘i⁄
 
size_t


240 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

242 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

244 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

245  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

247 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

248  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

250  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

251 
	}
}

254 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

255 
__THROW
 
__wur
;

256 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

257 
gëgroups
Ë
__wur
;

258 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

259 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

260 
__gëgroups_chk
)

261 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

264 
__f‹tify_fun˘i⁄
 

265 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

267 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

269 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

270  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

272 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

273  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

275  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

276 
	}
}

279 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

280 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

281 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

282 
size_t
 
__buÊí
), 
ây«me_r
)

283 
	`__n⁄nuŒ
 ((2));

284 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

285 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

286 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

287 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

290 
__f‹tify_fun˘i⁄
 

291 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

293 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

295 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

296  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

298 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

299  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

301  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

302 
	}
}

305 #ifde‡
__USE_POSIX199506


306 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

307 
	`__n⁄nuŒ
 ((1));

308 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

309 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

310 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

311 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

312 
__gëlogö_r_chk
)

313 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

316 
__f‹tify_fun˘i⁄
 

317 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

319 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

321 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

322  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

324 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

325  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

327  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

328 
	}
}

332 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_UNIX98


333 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

335 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

336 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

337 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

338 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

339 
__gëho°«me_chk
)

340 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

343 
__f‹tify_fun˘i⁄
 

344 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

346 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

349  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

351 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

352  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

354  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

355 
	}
}

359 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

360 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

361 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

362 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

363 
size_t
 
__buÊí
),

364 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

365 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

366 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

367 
__gëdomaö«me_chk
)

368 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

372 
__f‹tify_fun˘i⁄
 

373 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

375 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

377 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

378  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

380 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

381  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

383  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

384 
	}
}

	@/usr/include/bits/waitflags.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


25 
	#WNOHANG
 1

	)

26 
	#WUNTRACED
 2

	)

29 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

36 
	#__WNOTHREAD
 0x20000000

	)

38 
	#__WALL
 0x40000000

	)

39 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


28 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

31 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

34 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

37 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

40 
	#__WIFSIGNALED
(
°©us
) \

41 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

44 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

48 #ifde‡
WCONTINUED


49 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

53 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

56 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

57 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

58 
	#__W_CONTINUED
 0xffff

	)

59 
	#__WCOREFLAG
 0x80

	)

	@/usr/include/bits/wchar.h

19 #i‚de‡
_BITS_WCHAR_H


20 
	#_BITS_WCHAR_H
 1

	)

33 #ifde‡
__WCHAR_MAX__


34 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

35 #ñi‡
L
'\0' - 1 > 0

36 
	#__WCHAR_MAX
 (0xffffffffu + 
L
'\0')

	)

38 
	#__WCHAR_MAX
 (0x7ffffff‡+ 
L
'\0')

	)

41 #ifde‡
__WCHAR_MIN__


42 
	#__WCHAR_MIN
 
__WCHAR_MIN__


	)

43 #ñi‡
L
'\0' - 1 > 0

44 
	#__WCHAR_MIN
 (
L
'\0' + 0)

	)

46 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__
 && !deföed 
__ILP32__


4 
	#__WORDSIZE
 64

	)

6 
	#__WORDSIZE
 32

	)

7 
	#__WORDSIZE32_SIZE_ULONG
 0

	)

8 
	#__WORDSIZE32_PTRDIFF_LONG
 0

	)

11 #ifde‡
__x86_64__


12 
	#__WORDSIZE_TIME64_COMPAT32
 1

	)

14 
	#__SYSCALL_WORDSIZE
 64

	)

16 
	#__WORDSIZE_TIME64_COMPAT32
 0

	)

	@/usr/include/bits/xopen_lim.h

29 #i‚de‡
_XOPEN_LIM_H


30 
	#_XOPEN_LIM_H
 1

	)

62 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

64 
	~<bôs/uio_lim.h
>

65 #ifde‡
__IOV_MAX


66 
	#IOV_MAX
 
__IOV_MAX


	)

68 #unde‡
IOV_MAX


73 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

76 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

79 
	#NL_MSGMAX
 
INT_MAX


	)

83 #i‡
deföed
 
__USE_GNU
 || !deföed 
__USE_XOPEN2K8


84 
	#NL_NMAX
 
INT_MAX


	)

88 
	#NL_SETMAX
 
INT_MAX


	)

91 
	#NL_TEXTMAX
 
INT_MAX


	)

94 
	#NZERO
 20

	)

98 #ifde‡
INT_MAX


99 #i‡
INT_MAX
 == 32767

100 
	#WORD_BIT
 16

	)

102 #i‡
INT_MAX
 == 2147483647

103 
	#WORD_BIT
 32

	)

106 
	#WORD_BIT
 64

	)

109 #ñi‡
deföed
 
__INT_MAX__


110 #i‡
__INT_MAX__
 == 32767

111 
	#WORD_BIT
 16

	)

113 #i‡
__INT_MAX__
 == 2147483647

114 
	#WORD_BIT
 32

	)

117 
	#WORD_BIT
 64

	)

121 
	#WORD_BIT
 32

	)

125 #ifde‡
LONG_MAX


126 #i‡
LONG_MAX
 == 2147483647

127 
	#LONG_BIT
 32

	)

130 
	#LONG_BIT
 64

	)

132 #ñi‡
deföed
 
__LONG_MAX__


133 #i‡
__LONG_MAX__
 == 2147483647

134 
	#LONG_BIT
 32

	)

137 
	#LONG_BIT
 64

	)

140 
	~<bôs/w‹dsize.h
>

141 #i‡
__WORDSIZE
 == 64

142 
	#LONG_BIT
 64

	)

144 
	#LONG_BIT
 32

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

119 #unde‡
__USE_ISOC11


120 #unde‡
__USE_ISOC99


121 #unde‡
__USE_ISOC95


122 #unde‡
__USE_ISOCXX11


123 #unde‡
__USE_POSIX


124 #unde‡
__USE_POSIX2


125 #unde‡
__USE_POSIX199309


126 #unde‡
__USE_POSIX199506


127 #unde‡
__USE_XOPEN


128 #unde‡
__USE_XOPEN_EXTENDED


129 #unde‡
__USE_UNIX98


130 #unde‡
__USE_XOPEN2K


131 #unde‡
__USE_XOPEN2KXSI


132 #unde‡
__USE_XOPEN2K8


133 #unde‡
__USE_XOPEN2K8XSI


134 #unde‡
__USE_LARGEFILE


135 #unde‡
__USE_LARGEFILE64


136 #unde‡
__USE_FILE_OFFSET64


137 #unde‡
__USE_MISC


138 #unde‡
__USE_ATFILE


139 #unde‡
__USE_GNU


140 #unde‡
__USE_FORTIFY_LEVEL


141 #unde‡
__KERNEL_STRICT_NAMES


142 #unde‡
__GLIBC_USE_DEPRECATED_GETS


146 #i‚de‡
_LOOSE_KERNEL_NAMES


147 
	#__KERNEL_STRICT_NAMES


	)

157 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


158 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

159 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

161 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

168 #i‡
deföed
 
__˛™g_maj‹__
 && deföed 
__˛™g_mö‹__


169 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
) \

170 ((
__˛™g_maj‹__
 << 16Ë+ 
__˛™g_mö‹__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

172 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
Ë0

	)

176 
	#__GLIBC_USE
(
F
Ë
__GLIBC_USE_
 ## 
	)
F

182 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

183 && !
deföed
 
	g_DEFAULT_SOURCE


185 #unde‡
_DEFAULT_SOURCE


186 
	#_DEFAULT_SOURCE
 1

	)

190 #ifde‡
_GNU_SOURCE


191 #unde‡
_ISOC95_SOURCE


192 
	#_ISOC95_SOURCE
 1

	)

193 #unde‡
_ISOC99_SOURCE


194 
	#_ISOC99_SOURCE
 1

	)

195 #unde‡
_ISOC11_SOURCE


196 
	#_ISOC11_SOURCE
 1

	)

197 #unde‡
_POSIX_SOURCE


198 
	#_POSIX_SOURCE
 1

	)

199 #unde‡
_POSIX_C_SOURCE


200 
	#_POSIX_C_SOURCE
 200809L

	)

201 #unde‡
_XOPEN_SOURCE


202 
	#_XOPEN_SOURCE
 700

	)

203 #unde‡
_XOPEN_SOURCE_EXTENDED


204 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

205 #unde‡
_LARGEFILE64_SOURCE


206 
	#_LARGEFILE64_SOURCE
 1

	)

207 #unde‡
_DEFAULT_SOURCE


208 
	#_DEFAULT_SOURCE
 1

	)

209 #unde‡
_ATFILE_SOURCE


210 
	#_ATFILE_SOURCE
 1

	)

215 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

216 || (!
deföed
 
	g__STRICT_ANSI__
 \

217 && !
deföed
 
	g_ISOC99_SOURCE
 && !deföed 
	g_ISOC11_SOURCE
 \

218 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

219 && !
deföed
 
	g_XOPEN_SOURCE
))

220 #unde‡
_DEFAULT_SOURCE


221 
	#_DEFAULT_SOURCE
 1

	)

225 #i‡(
deföed
 
_ISOC11_SOURCE
 \

226 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

227 
	#__USE_ISOC11
 1

	)

231 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

232 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

233 
	#__USE_ISOC99
 1

	)

237 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

238 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

239 
	#__USE_ISOC95
 1

	)

242 #ifde‡
__˝lu•lus


244 #i‡
__˝lu•lus
 >= 201703L

245 
	#__USE_ISOC11
 1

	)

249 #i‡
__˝lu•lus
 >201103L || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__


250 
	#__USE_ISOCXX11
 1

	)

251 
	#__USE_ISOC99
 1

	)

258 #ifde‡
_DEFAULT_SOURCE


259 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


260 
	#__USE_POSIX_IMPLICITLY
 1

	)

262 #unde‡
_POSIX_SOURCE


263 
	#_POSIX_SOURCE
 1

	)

264 #unde‡
_POSIX_C_SOURCE


265 
	#_POSIX_C_SOURCE
 200809L

	)

268 #i‡((!
deföed
 
__STRICT_ANSI__
 \

269 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

270 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

271 
	#_POSIX_SOURCE
 1

	)

272 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

273 
	#_POSIX_C_SOURCE
 2

	)

274 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

275 
	#_POSIX_C_SOURCE
 199506L

	)

276 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

277 
	#_POSIX_C_SOURCE
 200112L

	)

279 
	#_POSIX_C_SOURCE
 200809L

	)

281 
	#__USE_POSIX_IMPLICITLY
 1

	)

290 #i‡((!
deföed
 
_POSIX_C_SOURCE
 || (_POSIX_C_SOURCE - 0) < 199506L) \

291 && (
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE
))

292 
	#_POSIX_SOURCE
 1

	)

293 #unde‡
_POSIX_C_SOURCE


294 
	#_POSIX_C_SOURCE
 199506L

	)

297 #i‡(
deföed
 
_POSIX_SOURCE
 \

298 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

299 || 
deföed
 
_XOPEN_SOURCE
)

300 
	#__USE_POSIX
 1

	)

303 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


304 
	#__USE_POSIX2
 1

	)

307 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

308 
	#__USE_POSIX199309
 1

	)

311 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

312 
	#__USE_POSIX199506
 1

	)

315 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

316 
	#__USE_XOPEN2K
 1

	)

317 #unde‡
__USE_ISOC95


318 
	#__USE_ISOC95
 1

	)

319 #unde‡
__USE_ISOC99


320 
	#__USE_ISOC99
 1

	)

323 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

324 
	#__USE_XOPEN2K8
 1

	)

325 #unde‡
_ATFILE_SOURCE


326 
	#_ATFILE_SOURCE
 1

	)

329 #ifdef 
_XOPEN_SOURCE


330 
	#__USE_XOPEN
 1

	)

331 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

332 
	#__USE_XOPEN_EXTENDED
 1

	)

333 
	#__USE_UNIX98
 1

	)

334 #unde‡
_LARGEFILE_SOURCE


335 
	#_LARGEFILE_SOURCE
 1

	)

336 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

337 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

338 
	#__USE_XOPEN2K8
 1

	)

339 
	#__USE_XOPEN2K8XSI
 1

	)

341 
	#__USE_XOPEN2K
 1

	)

342 
	#__USE_XOPEN2KXSI
 1

	)

343 #unde‡
__USE_ISOC95


344 
	#__USE_ISOC95
 1

	)

345 #unde‡
__USE_ISOC99


346 
	#__USE_ISOC99
 1

	)

349 #ifde‡
_XOPEN_SOURCE_EXTENDED


350 
	#__USE_XOPEN_EXTENDED
 1

	)

355 #ifde‡
_LARGEFILE_SOURCE


356 
	#__USE_LARGEFILE
 1

	)

359 #ifde‡
_LARGEFILE64_SOURCE


360 
	#__USE_LARGEFILE64
 1

	)

363 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

364 
	#__USE_FILE_OFFSET64
 1

	)

367 #i‡
deföed
 
_DEFAULT_SOURCE


368 
	#__USE_MISC
 1

	)

371 #ifdef 
_ATFILE_SOURCE


372 
	#__USE_ATFILE
 1

	)

375 #ifdef 
_GNU_SOURCE


376 
	#__USE_GNU
 1

	)

379 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0

380 #i‡!
deföed
 
__OPTIMIZE__
 || __OPTIMIZE__ <= 0

381 #w¨nög 
_FORTIFY_SOURCE
 
ªquúes
 
compûög
 
wôh
 
›timiz©i⁄
 (-
O
)

382 #ñi‡!
__GNUC_PREREQ
 (4, 1)

383 #w¨nög 
_FORTIFY_SOURCE
 
ªquúes
 
GCC
 4.1 
‹
 
œãr


384 #ñi‡
_FORTIFY_SOURCE
 > 1

385 
	#__USE_FORTIFY_LEVEL
 2

	)

387 
	#__USE_FORTIFY_LEVEL
 1

	)

390 #i‚de‡
__USE_FORTIFY_LEVEL


391 
	#__USE_FORTIFY_LEVEL
 0

	)

398 #i‡
deföed
 
__˝lu•lus
 ? __˝lu•lu†>201402L : deföed 
__USE_ISOC11


399 
	#__GLIBC_USE_DEPRECATED_GETS
 0

	)

401 
	#__GLIBC_USE_DEPRECATED_GETS
 1

	)

406 
	~<°dc-¥edef.h
>

414 #unde‡
__GNU_LIBRARY__


415 
	#__GNU_LIBRARY__
 6

	)

419 
	#__GLIBC__
 2

	)

420 
	#__GLIBC_MINOR__
 28

	)

422 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

423 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

426 #i‚de‡
__ASSEMBLER__


427 #i‚de‡
_SYS_CDEFS_H


428 
	~<sys/cdefs.h
>

433 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


434 
	#__USE_LARGEFILE
 1

	)

435 
	#__USE_LARGEFILE64
 1

	)

441 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

442 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

443 && 
deföed
 
	g__exã∫_ölöe


444 
	#__USE_EXTERN_INLINES
 1

	)

452 
	~<gnu/°ubs.h
>

	@/usr/include/strings.h

18 #i‚def 
_STRINGS_H


19 
	#_STRINGS_H
 1

	)

21 
	~<„©uªs.h
>

22 
	#__√ed_size_t


	)

23 
	~<°ddef.h
>

26 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

27 
	#__CORRECT_ISO_CPP_STRINGS_H_PROTO


	)

30 
	g__BEGIN_DECLS


32 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


34 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

35 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

38 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

39 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

42 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

45 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


48 *
	`ödex
 (*
__s
, 
__c
)

49 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

50 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

51 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

53 #i‡
deföed
 
__OPTIMIZE__


54 
__exã∫_Æways_ölöe
 *

55 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


57  
	`__buûtö_ödex
 (
__s
, 
__c
);

60 
__exã∫_Æways_ölöe
 const *

61 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


63  
	`__buûtö_ödex
 (
__s
, 
__c
);

66 
	}
}

68 *
	$ödex
 (c⁄° *
__s
, 
__c
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

73 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


76 *
	`rödex
 (*
__s
, 
__c
)

77 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

79 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #i‡
deföed
 
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


85  
	`__buûtö_rödex
 (
__s
, 
__c
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


91  
	`__buûtö_rödex
 (
__s
, 
__c
);

94 
	}
}

96 *
	$rödex
 (c⁄° *
__s
, 
__c
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

101 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8
 || deföed 
__USE_XOPEN2K8XSI


104 
	$ffs
 (
__i
Ë
__THROW
 
__©åibuã_c⁄°__
;

109 #ifdef 
__USE_MISC


110 
	$ff¶
 (
__l
Ë
__THROW
 
__©åibuã_c⁄°__
;

111 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

112 
__THROW
 
__©åibuã_c⁄°__
;

116 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

117 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

120 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

123 #ifdef 
__USE_XOPEN2K8


125 
	~<bôs/ty≥s/loˇÀ_t.h
>

128 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
loˇÀ_t
 
__loc
)

129 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

133 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

134 
size_t
 
__n
, 
loˇÀ_t
 
__loc
)

135 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

138 
__END_DECLS


140 #i‡
	`__GNUC_PREREQ
 (3,4Ë&& 
__USE_FORTIFY_LEVEL
 > 0 \

141 && 
deföed
 
__f‹tify_fun˘i⁄


143 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


144 
	~<bôs/°rögs_f‹tifõd.h
>

	@/usr/include/sys/select.h

21 #i‚de‡
_SYS_SELECT_H


22 
	#_SYS_SELECT_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	~<bôs/£À˘.h
>

33 
	~<bôs/ty≥s/sig£t_t.h
>

36 
	~<bôs/ty≥s/time_t.h
>

37 
	~<bôs/ty≥s/°ru˘_timevÆ.h
>

38 #ifde‡
__USE_XOPEN2K


39 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

42 #i‚de‡
__su£c⁄ds_t_deföed


43 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

44 
	#__su£c⁄ds_t_deföed


	)

49 
	t__fd_mask
;

52 #unde‡
__NFDBITS


54 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

55 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

56 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë(1UL << ((dË% 
__NFDBITS
)))

	)

63 #ifde‡
__USE_XOPEN


64 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

65 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

67 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

68 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

70 } 
	tfd_£t
;

73 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

75 #ifde‡
__USE_MISC


77 
__fd_mask
 
	tfd_mask
;

80 
	#NFDBITS
 
__NFDBITS


	)

85 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

86 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

87 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

88 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

91 
__BEGIN_DECLS


101 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

102 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

103 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

104 
timevÆ
 *
__ª°ri˘
 
__timeout
);

106 #ifde‡
__USE_XOPEN2K


113 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

114 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

115 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

116 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

117 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

122 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


123 
	~<bôs/£À˘2.h
>

126 
	g__END_DECLS


	@/usr/include/sys/types.h

22 #i‚def 
_SYS_TYPES_H


23 
	#_SYS_TYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifdef 
__USE_MISC


32 #i‚de‡
__u_ch¨_deföed


33 
__u_ch¨
 
	tu_ch¨
;

34 
__u_sh‹t
 
	tu_sh‹t
;

35 
__u_öt
 
	tu_öt
;

36 
__u_l⁄g
 
	tu_l⁄g
;

37 
__quad_t
 
	tquad_t
;

38 
__u_quad_t
 
	tu_quad_t
;

39 
__fsid_t
 
	tfsid_t
;

40 
	#__u_ch¨_deföed


	)

42 
__loff_t
 
	tloff_t
;

45 #i‚de‡
__öo_t_deföed


46 #i‚de‡
__USE_FILE_OFFSET64


47 
__öo_t
 
	töo_t
;

49 
__öo64_t
 
	töo_t
;

51 
	#__öo_t_deföed


	)

53 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


54 
__öo64_t
 
	töo64_t
;

55 
	#__öo64_t_deföed


	)

58 #i‚de‡
__dev_t_deföed


59 
__dev_t
 
	tdev_t
;

60 
	#__dev_t_deföed


	)

63 #i‚de‡
__gid_t_deföed


64 
__gid_t
 
	tgid_t
;

65 
	#__gid_t_deföed


	)

68 #i‚de‡
__mode_t_deföed


69 
__mode_t
 
	tmode_t
;

70 
	#__mode_t_deföed


	)

73 #i‚de‡
__∆ök_t_deföed


74 
__∆ök_t
 
	t∆ök_t
;

75 
	#__∆ök_t_deföed


	)

78 #i‚de‡
__uid_t_deföed


79 
__uid_t
 
	tuid_t
;

80 
	#__uid_t_deföed


	)

83 #i‚de‡
__off_t_deföed


84 #i‚de‡
__USE_FILE_OFFSET64


85 
__off_t
 
	toff_t
;

87 
__off64_t
 
	toff_t
;

89 
	#__off_t_deföed


	)

91 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


92 
__off64_t
 
	toff64_t
;

93 
	#__off64_t_deföed


	)

96 #i‚de‡
__pid_t_deföed


97 
__pid_t
 
	tpid_t
;

98 
	#__pid_t_deföed


	)

101 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

102 && !
deföed
 
__id_t_deföed


103 
__id_t
 
	tid_t
;

104 
	#__id_t_deföed


	)

107 #i‚de‡
__ssize_t_deföed


108 
__ssize_t
 
	tssize_t
;

109 
	#__ssize_t_deföed


	)

112 #ifdef 
__USE_MISC


113 #i‚de‡
__daddr_t_deföed


114 
__daddr_t
 
	tdaddr_t
;

115 
__ˇddr_t
 
	tˇddr_t
;

116 
	#__daddr_t_deföed


	)

120 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


121 
__key_t
 
	tkey_t
;

122 
	#__key_t_deföed


	)

125 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


126 
	~<bôs/ty≥s/˛ock_t.h
>

128 
	~<bôs/ty≥s/˛ockid_t.h
>

129 
	~<bôs/ty≥s/time_t.h
>

130 
	~<bôs/ty≥s/timî_t.h
>

132 #ifde‡
__USE_XOPEN


133 #i‚de‡
__u£c⁄ds_t_deföed


134 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

135 
	#__u£c⁄ds_t_deföed


	)

137 #i‚de‡
__su£c⁄ds_t_deföed


138 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

139 
	#__su£c⁄ds_t_deföed


	)

143 
	#__√ed_size_t


	)

144 
	~<°ddef.h
>

146 #ifde‡
__USE_MISC


148 
	tul⁄g
;

149 
	tush‹t
;

150 
	tuöt
;

155 
	~<bôs/°döt-öä.h
>

157 #i‡!
__GNUC_PREREQ
 (2, 7)

160 
	tu_öt8_t
;

161 
	tu_öt16_t
;

162 
	tu_öt32_t
;

163 #i‡
__WORDSIZE
 == 64

164 
	tu_öt64_t
;

166 
__exãnsi⁄__
 
	tu_öt64_t
;

169 
	tªgi°î_t
;

174 
	#__u_ötN_t
(
N
, 
MODE
) \

175 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

177 
	t__u_ötN_t
 (8, 
	t__QI__
);

178 
__u_ötN_t
 (16, 
__HI__
);

179 
__u_ötN_t
 (32, 
__SI__
);

180 
__u_ötN_t
 (64, 
__DI__
);

182 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

188 
	#__BIT_TYPES_DEFINED__
 1

	)

191 #ifdef 
__USE_MISC


193 
	~<ídün.h
>

196 
	~<sys/£À˘.h
>

200 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

201 && !
deföed
 
__blksize_t_deföed


202 
__blksize_t
 
	tblksize_t
;

203 
	#__blksize_t_deföed


	)

207 #i‚de‡
__USE_FILE_OFFSET64


208 #i‚de‡
__blk˙t_t_deföed


209 
__blk˙t_t
 
	tblk˙t_t
;

210 
	#__blk˙t_t_deföed


	)

212 #i‚de‡
__fsblk˙t_t_deföed


213 
__fsblk˙t_t
 
	tfsblk˙t_t
;

214 
	#__fsblk˙t_t_deföed


	)

216 #i‚de‡
__fsfû˙t_t_deföed


217 
__fsfû˙t_t
 
	tfsfû˙t_t
;

218 
	#__fsfû˙t_t_deföed


	)

221 #i‚de‡
__blk˙t_t_deföed


222 
__blk˙t64_t
 
	tblk˙t_t
;

223 
	#__blk˙t_t_deföed


	)

225 #i‚de‡
__fsblk˙t_t_deföed


226 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

227 
	#__fsblk˙t_t_deföed


	)

229 #i‚de‡
__fsfû˙t_t_deföed


230 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

231 
	#__fsfû˙t_t_deföed


	)

235 #ifde‡
__USE_LARGEFILE64


236 
__blk˙t64_t
 
	tblk˙t64_t
;

237 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

238 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

243 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


244 
	~<bôs/±hªadty≥s.h
>

247 
	g__END_DECLS


	@/usr/include/bits/floatn-common.h

20 #i‚de‡
_BITS_FLOATN_COMMON_H


21 
	#_BITS_FLOATN_COMMON_H


	)

23 
	~<„©uªs.h
>

24 
	~<bôs/l⁄g-doubÀ.h
>

34 
	#__HAVE_FLOAT16
 0

	)

35 
	#__HAVE_FLOAT32
 1

	)

36 
	#__HAVE_FLOAT64
 1

	)

37 
	#__HAVE_FLOAT32X
 1

	)

38 
	#__HAVE_FLOAT128X
 0

	)

52 
	#__HAVE_DISTINCT_FLOAT16
 
__HAVE_FLOAT16


	)

53 
	#__HAVE_DISTINCT_FLOAT32
 0

	)

54 
	#__HAVE_DISTINCT_FLOAT64
 0

	)

55 
	#__HAVE_DISTINCT_FLOAT32X
 0

	)

56 
	#__HAVE_DISTINCT_FLOAT64X
 0

	)

57 
	#__HAVE_DISTINCT_FLOAT128X
 
__HAVE_FLOAT128X


	)

63 
	#__HAVE_FLOAT128_UNLIKE_LDBL
 (
__HAVE_DISTINCT_FLOAT128
 \

64 && 
__LDBL_MANT_DIG__
 !113)

	)

69 #i‡
__GNUC_PREREQ
 (7, 0Ë&& !
deföed
 
__˝lu•lus


70 
	#__HAVE_FLOATN_NOT_TYPEDEF
 1

	)

72 
	#__HAVE_FLOATN_NOT_TYPEDEF
 0

	)

75 #i‚de‡
__ASSEMBLER__


80 #i‡
__HAVE_FLOAT16


81 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


83 
	#__f16
(
x
Ë((
_Flﬂt16
Ëx##
f
)

	)

85 
	#__f16
(
x
Ëx##
f16


	)

89 #i‡
__HAVE_FLOAT32


90 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


91 
	#__f32
(
x
Ëx##
f


	)

93 
	#__f32
(
x
Ëx##
f32


	)

97 #i‡
__HAVE_FLOAT64


98 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


99 #ifde‡
__NO_LONG_DOUBLE_MATH


100 
	#__f64
(
x
Ëx##
l


	)

102 
	#__f64
(
x
Ë
	)
x

105 
	#__f64
(
x
Ëx##
f64


	)

109 #i‡
__HAVE_FLOAT32X


110 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


111 
	#__f32x
(
x
Ë
	)
x

113 
	#__f32x
(
x
Ëx##
f32x


	)

117 #i‡
__HAVE_FLOAT64X


118 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


119 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


120 
	#__f64x
(
x
Ëx##
l


	)

122 
	#__f64x
(
x
Ë
	`__f128
 (x)

	)

125 
	#__f64x
(
x
Ëx##
f64x


	)

129 #i‡
__HAVE_FLOAT128X


130 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


133 
	#__f128x
(
x
Ëx##
f128x


	)

138 #i‡
__HAVE_FLOAT16


139 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


140 
_Com∂ex
 
	t__cÊﬂt16
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HC__
)));

141 
	#__CFLOAT16
 
__cÊﬂt16


	)

143 
	#__CFLOAT16
 
_Com∂ex
 
_Flﬂt16


	)

147 #i‡
__HAVE_FLOAT32


148 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


149 
	#__CFLOAT32
 
_Com∂ex
 

	)

151 
	#__CFLOAT32
 
_Com∂ex
 
_Flﬂt32


	)

155 #i‡
__HAVE_FLOAT64


156 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


157 #ifde‡
__NO_LONG_DOUBLE_MATH


158 
	#__CFLOAT64
 
_Com∂ex
 

	)

160 
	#__CFLOAT64
 
_Com∂ex
 

	)

163 
	#__CFLOAT64
 
_Com∂ex
 
_Flﬂt64


	)

167 #i‡
__HAVE_FLOAT32X


168 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


169 
	#__CFLOAT32X
 
_Com∂ex
 

	)

171 
	#__CFLOAT32X
 
_Com∂ex
 
_Flﬂt32x


	)

175 #i‡
__HAVE_FLOAT64X


176 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


177 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


178 
	#__CFLOAT64X
 
_Com∂ex
 

	)

180 
	#__CFLOAT64X
 
__CFLOAT128


	)

183 
	#__CFLOAT64X
 
_Com∂ex
 
_Flﬂt64x


	)

187 #i‡
__HAVE_FLOAT128X


188 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


191 
	#__CFLOAT128X
 
_Com∂ex
 
_Flﬂt128x


	)

196 #i‡
__HAVE_FLOAT16


198 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


199 
	t_Flﬂt16
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HF__
)));

202 #i‡!
__GNUC_PREREQ
 (7, 0)

203 
	#__buûtö_huge_vÆf16
(Ë((
_Flﬂt16
Ë
	`__buûtö_huge_vÆ
 ())

	)

204 
	#__buûtö_öff16
(Ë((
_Flﬂt16
Ë
	`__buûtö_öf
 ())

	)

205 
	#__buûtö_«nf16
(
x
Ë((
_Flﬂt16
Ë
	`__buûtö_«n
 (x))

	)

206 
	#__buûtö_«nsf16
(
x
Ë((
_Flﬂt16
Ë
	`__buûtö_«ns
 (x))

	)

211 #i‡
__HAVE_FLOAT32


213 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


214 
	t_Flﬂt32
;

217 #i‡!
__GNUC_PREREQ
 (7, 0)

218 
	#__buûtö_huge_vÆf32
(Ë(
	`__buûtö_huge_vÆf
 ())

	)

219 
	#__buûtö_öff32
(Ë(
	`__buûtö_öff
 ())

	)

220 
	#__buûtö_«nf32
(
x
Ë(
	`__buûtö_«nf
 (x))

	)

221 
	#__buûtö_«nsf32
(
x
Ë(
	`__buûtö_«nsf
 (x))

	)

226 #i‡
__HAVE_FLOAT64


235 #ifde‡
__NO_LONG_DOUBLE_MATH


237 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


238 
	t_Flﬂt64
;

241 #i‡!
__GNUC_PREREQ
 (7, 0)

242 
	#__buûtö_huge_vÆf64
(Ë(
	`__buûtö_huge_vÆl
 ())

	)

243 
	#__buûtö_öff64
(Ë(
	`__buûtö_öÊ
 ())

	)

244 
	#__buûtö_«nf64
(
x
Ë(
	`__buûtö_«∆
 (x))

	)

245 
	#__buûtö_«nsf64
(
x
Ë(
	`__buûtö_«n¶
 (x))

	)

250 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


251 
	t_Flﬂt64
;

254 #i‡!
__GNUC_PREREQ
 (7, 0)

255 
	#__buûtö_huge_vÆf64
(Ë(
	`__buûtö_huge_vÆ
 ())

	)

256 
	#__buûtö_öff64
(Ë(
	`__buûtö_öf
 ())

	)

257 
	#__buûtö_«nf64
(
x
Ë(
	`__buûtö_«n
 (x))

	)

258 
	#__buûtö_«nsf64
(
x
Ë(
	`__buûtö_«ns
 (x))

	)

265 #i‡
__HAVE_FLOAT32X


267 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


268 
	t_Flﬂt32x
;

271 #i‡!
__GNUC_PREREQ
 (7, 0)

272 
	#__buûtö_huge_vÆf32x
(Ë(
	`__buûtö_huge_vÆ
 ())

	)

273 
	#__buûtö_öff32x
(Ë(
	`__buûtö_öf
 ())

	)

274 
	#__buûtö_«nf32x
(
x
Ë(
	`__buûtö_«n
 (x))

	)

275 
	#__buûtö_«nsf32x
(
x
Ë(
	`__buûtö_«ns
 (x))

	)

280 #i‡
__HAVE_FLOAT64X


282 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


284 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


285 
	t_Flﬂt64x
;

288 #i‡!
__GNUC_PREREQ
 (7, 0)

289 
	#__buûtö_huge_vÆf64x
(Ë(
	`__buûtö_huge_vÆl
 ())

	)

290 
	#__buûtö_öff64x
(Ë(
	`__buûtö_öÊ
 ())

	)

291 
	#__buûtö_«nf64x
(
x
Ë(
	`__buûtö_«∆
 (x))

	)

292 
	#__buûtö_«nsf64x
(
x
Ë(
	`__buûtö_«n¶
 (x))

	)

297 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


298 
_Flﬂt128
 
	t_Flﬂt64x
;

301 #i‡!
__GNUC_PREREQ
 (7, 0)

302 
	#__buûtö_huge_vÆf64x
(Ë(
	`__buûtö_huge_vÆf128
 ())

	)

303 
	#__buûtö_öff64x
(Ë(
	`__buûtö_öff128
 ())

	)

304 
	#__buûtö_«nf64x
(
x
Ë(
	`__buûtö_«nf128
 (x))

	)

305 
	#__buûtö_«nsf64x
(
x
Ë(
	`__buûtö_«nsf128
 (x))

	)

312 #i‡
__HAVE_FLOAT128X


314 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


318 #i‡!
__GNUC_PREREQ
 (7, 0)

319 
	#__buûtö_huge_vÆf128x
(Ë((
_Flﬂt128x
Ë
	`__buûtö_huge_vÆ
 ())

	)

320 
	#__buûtö_öff128x
(Ë((
_Flﬂt128x
Ë
	`__buûtö_öf
 ())

	)

321 
	#__buûtö_«nf128x
(
x
Ë((
_Flﬂt128x
Ë
	`__buûtö_«n
 (x))

	)

322 
	#__buûtö_«nsf128x
(
x
Ë((
_Flﬂt128x
Ë
	`__buûtö_«ns
 (x))

	)

	@/usr/include/bits/libm-simd-decl-stubs.h

19 #i‚de‡
_MATH_H


33 #i‚de‡
_BITS_LIBM_SIMD_DECL_STUBS_H


34 
	#_BITS_LIBM_SIMD_DECL_STUBS_H
 1

	)

36 
	#__DECL_SIMD_cos


	)

37 
	#__DECL_SIMD_cosf


	)

38 
	#__DECL_SIMD_co¶


	)

39 
	#__DECL_SIMD_cosf16


	)

40 
	#__DECL_SIMD_cosf32


	)

41 
	#__DECL_SIMD_cosf64


	)

42 
	#__DECL_SIMD_cosf128


	)

43 
	#__DECL_SIMD_cosf32x


	)

44 
	#__DECL_SIMD_cosf64x


	)

45 
	#__DECL_SIMD_cosf128x


	)

47 
	#__DECL_SIMD_sö


	)

48 
	#__DECL_SIMD_söf


	)

49 
	#__DECL_SIMD_söl


	)

50 
	#__DECL_SIMD_söf16


	)

51 
	#__DECL_SIMD_söf32


	)

52 
	#__DECL_SIMD_söf64


	)

53 
	#__DECL_SIMD_söf128


	)

54 
	#__DECL_SIMD_söf32x


	)

55 
	#__DECL_SIMD_söf64x


	)

56 
	#__DECL_SIMD_söf128x


	)

58 
	#__DECL_SIMD_söcos


	)

59 
	#__DECL_SIMD_söcosf


	)

60 
	#__DECL_SIMD_söco¶


	)

61 
	#__DECL_SIMD_söcosf16


	)

62 
	#__DECL_SIMD_söcosf32


	)

63 
	#__DECL_SIMD_söcosf64


	)

64 
	#__DECL_SIMD_söcosf128


	)

65 
	#__DECL_SIMD_söcosf32x


	)

66 
	#__DECL_SIMD_söcosf64x


	)

67 
	#__DECL_SIMD_söcosf128x


	)

69 
	#__DECL_SIMD_log


	)

70 
	#__DECL_SIMD_logf


	)

71 
	#__DECL_SIMD_logl


	)

72 
	#__DECL_SIMD_logf16


	)

73 
	#__DECL_SIMD_logf32


	)

74 
	#__DECL_SIMD_logf64


	)

75 
	#__DECL_SIMD_logf128


	)

76 
	#__DECL_SIMD_logf32x


	)

77 
	#__DECL_SIMD_logf64x


	)

78 
	#__DECL_SIMD_logf128x


	)

80 
	#__DECL_SIMD_exp


	)

81 
	#__DECL_SIMD_expf


	)

82 
	#__DECL_SIMD_ex∂


	)

83 
	#__DECL_SIMD_expf16


	)

84 
	#__DECL_SIMD_expf32


	)

85 
	#__DECL_SIMD_expf64


	)

86 
	#__DECL_SIMD_expf128


	)

87 
	#__DECL_SIMD_expf32x


	)

88 
	#__DECL_SIMD_expf64x


	)

89 
	#__DECL_SIMD_expf128x


	)

91 
	#__DECL_SIMD_pow


	)

92 
	#__DECL_SIMD_powf


	)

93 
	#__DECL_SIMD_powl


	)

94 
	#__DECL_SIMD_powf16


	)

95 
	#__DECL_SIMD_powf32


	)

96 
	#__DECL_SIMD_powf64


	)

97 
	#__DECL_SIMD_powf128


	)

98 
	#__DECL_SIMD_powf32x


	)

99 
	#__DECL_SIMD_powf64x


	)

100 
	#__DECL_SIMD_powf128x


	)

	@/usr/include/bits/local_lim.h

24 #i‚de‡
NR_OPEN


25 
	#__undef_NR_OPEN


	)

27 #i‚de‡
LINK_MAX


28 
	#__undef_LINK_MAX


	)

30 #i‚de‡
OPEN_MAX


31 
	#__undef_OPEN_MAX


	)

33 #i‚de‡
ARG_MAX


34 
	#__undef_ARG_MAX


	)

38 
	~<löux/limôs.h
>

41 #ifde‡
__undef_NR_OPEN


42 #unde‡
NR_OPEN


43 #unde‡
__undef_NR_OPEN


46 #ifde‡
__undef_LINK_MAX


47 #unde‡
LINK_MAX


48 #unde‡
__undef_LINK_MAX


51 #ifde‡
__undef_OPEN_MAX


52 #unde‡
OPEN_MAX


53 #unde‡
__undef_OPEN_MAX


56 #ifde‡
__undef_ARG_MAX


57 #unde‡
ARG_MAX


58 #unde‡
__undef_ARG_MAX


62 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

64 
	#PTHREAD_KEYS_MAX
 1024

	)

67 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

69 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

72 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

74 #unde‡
PTHREAD_THREADS_MAX


78 
	#AIO_PRIO_DELTA_MAX
 20

	)

81 
	#PTHREAD_STACK_MIN
 16384

	)

84 
	#DELAYTIMER_MAX
 2147483647

	)

87 
	#TTY_NAME_MAX
 32

	)

90 
	#LOGIN_NAME_MAX
 256

	)

93 
	#HOST_NAME_MAX
 64

	)

96 
	#MQ_PRIO_MAX
 32768

	)

99 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/pthreadtypes.h

19 #i‚de‡
_BITS_PTHREADTYPES_COMMON_H


20 
	#_BITS_PTHREADTYPES_COMMON_H
 1

	)

23 
	~<bôs/thªad-sh¨ed-ty≥s.h
>

27 
	t±hªad_t
;

34 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

35 
	m__Æign
;

36 } 
	t±hªad_muãx©å_t
;

43 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

44 
	m__Æign
;

45 } 
	t±hªad_c⁄d©å_t
;

49 
	t±hªad_key_t
;

53 
	t__ONCE_ALIGNMENT
 
	t±hªad_⁄˚_t
;

56 
	u±hªad_©å_t


58 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

59 
	m__Æign
;

61 #i‚de‡
__have_±hªad_©å_t


62 
±hªad_©å_t
 
	t±hªad_©å_t
;

63 
	#__have_±hªad_©å_t
 1

	)

69 
__±hªad_muãx_s
 
	m__d©a
;

70 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

71 
	m__Æign
;

72 } 
	t±hªad_muãx_t
;

77 
__±hªad_c⁄d_s
 
	m__d©a
;

78 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

79 
__exãnsi⁄__
 
	m__Æign
;

80 } 
	t±hªad_c⁄d_t
;

83 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


88 
__±hªad_rwlock_¨ch_t
 
	m__d©a
;

89 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

90 
	m__Æign
;

91 } 
	t±hªad_rwlock_t
;

95 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

96 
	m__Æign
;

97 } 
	t±hªad_rwlock©å_t
;

101 #ifde‡
__USE_XOPEN2K


103 vﬁ©ûê
	t±hªad_•ölock_t
;

110 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

111 
	m__Æign
;

112 } 
	t±hªad_b¨rõr_t
;

116 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

117 
	m__Æign
;

118 } 
	t±hªad_b¨rõøâr_t
;

	@/usr/include/bits/select.h

18 #i‚de‡
_SYS_SELECT_H


22 
	~<bôs/w‹dsize.h
>

25 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

27 #i‡
__WORDSIZE
 == 64

28 
	#__FD_ZERO_STOS
 "°osq"

	)

30 
	#__FD_ZERO_STOS
 "°o¶"

	)

33 
	#__FD_ZERO
(
fd•
) \

35 
__d0
, 
__d1
; \

36 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

37 : "=c" (
__d0
), "=D" (
__d1
) \

38 : "a" (0), "0" ( (
fd_£t
) \

39 /  (
__fd_mask
)), \

40 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

42 } 0)

	)

48 
	#__FD_ZERO
(
£t
) \

50 
__i
; \

51 
fd_£t
 *
__¨r
 = (
£t
); \

52 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

53 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

54 } 0)

	)

58 
	#__FD_SET
(
d
, 
£t
) \

59 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] |
	`__FD_MASK
 (d)))

	)

60 
	#__FD_CLR
(
d
, 
£t
) \

61 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] &~
	`__FD_MASK
 (d)))

	)

62 
	#__FD_ISSET
(
d
, 
£t
) \

63 ((
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

19 #i‚de‡
_SYS_SELECT_H


24 
__fdñt_chk
 (
__d
);

25 
	$__fdñt_w¨n
 (
__d
)

26 
	`__w¨«âr
 ("bit outside of fd_set selected");

27 #unde‡
__FD_ELT


28 
	#__FD_ELT
(
d
) \

29 
__exãnsi⁄__
 \

30 ({ 
__d
 = (
d
); \

31 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

32 ? (0 <
__d
 && __d < 
__FD_SETSIZE
 \

33 ? (
__d
 / 
__NFDBITS
) \

34 : 
	`__fdñt_w¨n
 (
__d
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/strings_fortified.h

19 #i‚de‡
__STRINGS_FORTIFIED


20 
	#__STRINGS_FORTIFIED
 1

	)

22 
__f‹tify_fun˘i⁄
 

23 
__NTH
 (
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__Àn
))

25 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

26 
	}
}

28 
__f‹tify_fun˘i⁄
 

29 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

31 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

32 
	}
}

	@/usr/include/bits/types/__locale_t.h

20 #i‚de‡
_BITS_TYPES___LOCALE_T_H


21 
	#_BITS_TYPES___LOCALE_T_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

42 
__loˇÀ_°ru˘
 *
	t__loˇÀ_t
;

	@/usr/include/bits/types/__mbstate_t.h

1 #i‚de‡
____mb°©e_t_deföed


2 
	#____mb°©e_t_deföed
 1

	)

8 #i‚de‡
__WINT_TYPE__


9 
	#__WINT_TYPE__
 

	)

15 
	m__cou¡
;

18 
__WINT_TYPE__
 
	m__wch
;

19 
	m__wchb
[4];

20 } 
	m__vÆue
;

21 } 
	t__mb°©e_t
;

	@/usr/include/bits/types/clock_t.h

1 #i‚de‡
__˛ock_t_deföed


2 
	#__˛ock_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__˛ock_t
 
	t˛ock_t
;

	@/usr/include/bits/types/clockid_t.h

1 #i‚de‡
__˛ockid_t_deföed


2 
	#__˛ockid_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__˛ockid_t
 
	t˛ockid_t
;

	@/usr/include/bits/types/sigset_t.h

1 #i‚de‡
__sig£t_t_deföed


2 
	#__sig£t_t_deföed
 1

	)

4 
	~<bôs/ty≥s/__sig£t_t.h
>

7 
__sig£t_t
 
	tsig£t_t
;

	@/usr/include/bits/types/struct_timespec.h

2 #i‚de‡
_STRUCT_TIMESPEC


3 
	#_STRUCT_TIMESPEC
 1

	)

5 
	~<bôs/ty≥s.h
>

9 
	stime•ec


11 
__time_t
 
	mtv_£c
;

12 
__sysˇŒ_¶⁄g_t
 
	mtv_n£c
;

	@/usr/include/bits/types/timer_t.h

1 #i‚de‡
__timî_t_deföed


2 
	#__timî_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__timî_t
 
	ttimî_t
;

	@/usr/include/bits/typesizes.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TYPESIZES_H


24 
	#_BITS_TYPESIZES_H
 1

	)

30 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


31 
	#__SYSCALL_SLONG_TYPE
 
__SQUAD_TYPE


	)

32 
	#__SYSCALL_ULONG_TYPE
 
__UQUAD_TYPE


	)

34 
	#__SYSCALL_SLONG_TYPE
 
__SLONGWORD_TYPE


	)

35 
	#__SYSCALL_ULONG_TYPE
 
__ULONGWORD_TYPE


	)

38 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

39 
	#__UID_T_TYPE
 
__U32_TYPE


	)

40 
	#__GID_T_TYPE
 
__U32_TYPE


	)

41 
	#__INO_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

42 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

43 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

44 #ifde‡
__x86_64__


45 
	#__NLINK_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

46 
	#__FSWORD_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

48 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

49 
	#__FSWORD_T_TYPE
 
__SWORD_TYPE


	)

51 
	#__OFF_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

52 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

53 
	#__PID_T_TYPE
 
__S32_TYPE


	)

54 
	#__RLIM_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

55 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

56 
	#__BLKCNT_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

57 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

58 
	#__FSBLKCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

59 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

60 
	#__FSFILCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

61 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

62 
	#__ID_T_TYPE
 
__U32_TYPE


	)

63 
	#__CLOCK_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

64 
	#__TIME_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

65 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

66 
	#__SUSECONDS_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

67 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

68 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

69 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

70 
	#__TIMER_T_TYPE
 *

	)

71 
	#__BLKSIZE_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

72 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

73 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

74 
	#__CPU_MASK_TYPE
 
__SYSCALL_ULONG_TYPE


	)

76 #ifde‡
__x86_64__


80 
	#__OFF_T_MATCHES_OFF64_T
 1

	)

83 
	#__INO_T_MATCHES_INO64_T
 1

	)

86 
	#__RLIM_T_MATCHES_RLIM64_T
 1

	)

88 
	#__RLIM_T_MATCHES_RLIM64_T
 0

	)

92 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/uio_lim.h

19 #i‚de‡
_BITS_UIO_LIM_H


20 
	#_BITS_UIO_LIM_H
 1

	)

30 
	#__IOV_MAX
 1024

	)

	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_MISC


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_MISC
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

61 
	~<bôs/uöä-idítôy.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

80 
	#htobe16
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

81 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

82 
	#be16toh
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

83 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

85 
	#htobe32
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

86 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

87 
	#be32toh
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

88 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

90 
	#htobe64
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

91 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

92 
	#be64toh
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

93 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/gnu/stubs.h

6 #i‡!
deföed
 
__x86_64__


7 
	~<gnu/°ubs-32.h
>

9 #i‡
deföed
 
__x86_64__
 && deföed 
__LP64__


10 
	~<gnu/°ubs-64.h
>

12 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


13 
	~<gnu/°ubs-x32.h
>

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

58 
	#__STDC_ISO_10646__
 201706L

	)

	@/usr/include/sys/cdefs.h

18 #i‚def 
_SYS_CDEFS_H


19 
	#_SYS_CDEFS_H
 1

	)

22 #i‚de‡
_FEATURES_H


23 
	~<„©uªs.h
>

29 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


34 #unde‡
__P


35 #unde‡
__PMT


37 #ifde‡
__GNUC__


41 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


42 
	#__LEAF
 , 
__Àaf__


	)

43 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

45 
	#__LEAF


	)

46 
	#__LEAF_ATTR


	)

54 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

55 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

56 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

57 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

58 
	#__NTHNL
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

60 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

61 
	#__THROW
 
	`throw
 ()

	)

62 
	#__THROWNL
 
	`throw
 ()

	)

63 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
	`throw
 ()

	)

64 
	#__NTHNL
(
f˘
Ëf˘ 
	`throw
 ()

	)

66 
	#__THROW


	)

67 
	#__THROWNL


	)

68 
	#__NTH
(
f˘
Ë
	)
fct

69 
	#__NTHNL
(
f˘
Ë
	)
fct

75 #i‡(
deföed
 
__˝lu•lus
 \

76 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

77 
	#__ölöe
 
ölöe


	)

79 
	#__ölöe


	)

82 
	#__THROW


	)

83 
	#__THROWNL


	)

84 
	#__NTH
(
f˘
Ë
	)
fct

91 #i‡
deföed
 
__˛™g__
 && deföed 
__has_exãnsi⁄


92 
	#__glibc_˛™g_has_exãnsi⁄
(
ext
Ë
	`__has_exãnsi⁄
 (ext)

	)

94 
	#__glibc_˛™g_has_exãnsi⁄
(
ext
Ë0

	)

99 
	#__P
(
¨gs
Ë
	)
args

100 
	#__PMT
(
¨gs
Ë
	)
args

105 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

106 
	#__STRING
(
x
Ë#x

	)

109 
	#__±r_t
 *

	)

113 #ifdef 
__˝lu•lus


114 
	#__BEGIN_DECLS
 "C" {

	)

115 
	#__END_DECLS
 }

	)

117 
	#__BEGIN_DECLS


	)

118 
	#__END_DECLS


	)

123 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

124 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

126 #i‡
__GNUC_PREREQ
 (4,3)

127 
	#__w¨nde˛
(
«me
, 
msg
) \

128 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

129 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

130 
	#__îr‹de˛
(
«me
, 
msg
) \

131 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

133 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

134 
	#__w¨«âr
(
msg
)

	)

135 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

142 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

143 
	#__Êex¨r
 []

	)

144 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

145 #ñi‡
__GNUC_PREREQ
 (2,97)

148 
	#__Êex¨r
 []

	)

149 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

150 #ñi‡
deföed
 
__GNUC__


153 
	#__Êex¨r
 [0]

	)

154 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

157 
	#__Êex¨r
 [1]

	)

158 
	#__glibc_c99_Êex¨r_avaûabÀ
 0

	)

172 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

174 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

175 #ifde‡
__˝lu•lus


176 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

177 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

178 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

179 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

181 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

182 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

183 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

184 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

186 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

187 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

200 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

201 
	#__©åibuã__
(
xyz
Ë

	)

207 #i‡
__GNUC_PREREQ
 (2,96)

208 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

210 
	#__©åibuã_mÆloc__


	)

215 #i‡
__GNUC_PREREQ
 (4, 3)

216 
	#__©åibuã_Æloc_size__
(
∑øms
) \

217 
	`__©åibuã__
 ((
__Æloc_size__
 
∑øms
))

	)

219 
	#__©åibuã_Æloc_size__
(
∑øms
Ë

	)

225 #i‡
__GNUC_PREREQ
 (2,96)

226 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

228 
	#__©åibuã_puª__


	)

232 #i‡
__GNUC_PREREQ
 (2,5)

233 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

235 
	#__©åibuã_c⁄°__


	)

241 #i‡
__GNUC_PREREQ
 (3,1)

242 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

243 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

245 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

246 
	#__©åibuã_noölöe__


	)

250 #i‡
__GNUC_PREREQ
 (3,2)

251 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

253 
	#__©åibuã_dïªˇãd__


	)

259 #i‡
__GNUC_PREREQ
 (4,5) || \

260 
	$__glibc_˛™g_has_exãnsi⁄
 (
__©åibuã_dïªˇãd_wôh_mesßge__
)

261 
	#__©åibuã_dïªˇãd_msg__
(
msg
) \

262 
	`__©åibuã__
 ((
	`__dïªˇãd__
 (
msg
)))

	)

264 
	#__©åibuã_dïªˇãd_msg__
(
msg
Ë
__©åibuã_dïªˇãd__


	)

273 #i‡
	`__GNUC_PREREQ
 (2,8)

274 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

276 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

283 #i‡
	`__GNUC_PREREQ
 (2,97)

284 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

285 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

287 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

292 #i‡
	`__GNUC_PREREQ
 (3,3)

293 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

295 
	#__n⁄nuŒ
(
∑øms
)

	)

300 #i‡
	`__GNUC_PREREQ
 (3,4)

301 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

302 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

303 #i‡
__USE_FORTIFY_LEVEL
 > 0

304 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

307 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

309 #i‚de‡
__wur


310 
	#__wur


	)

314 #i‡
	`__GNUC_PREREQ
 (3,2)

318 #unde‡
__Æways_ölöe


319 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

321 #unde‡
__Æways_ölöe


322 
	#__Æways_ölöe
 
__ölöe


	)

327 #i‡
	`__GNUC_PREREQ
 (4,3)

328 
	#__©åibuã_¨tificül__
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

330 
	#__©åibuã_¨tificül__


	)

342 #i‡(!
deföed
 
__˝lu•lus
 || 
	`__GNUC_PREREQ
 (4,3) \

343 || (
deföed
 
__˛™g__
 && (deföed 
__GNUC_STDC_INLINE__
 \

344 || 
deföed
 
__GNUC_GNU_INLINE__
)))

345 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


346 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

347 
	#__exã∫_Æways_ölöe
 \

348 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

350 
	#__exã∫_ölöe
 
__ölöe


	)

351 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

355 #ifde‡
__exã∫_Æways_ölöe


356 
	#__f‹tify_fun˘i⁄
 
__exã∫_Æways_ölöe
 
__©åibuã_¨tificül__


	)

361 #i‡
	`__GNUC_PREREQ
 (4,3)

362 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

363 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

370 #i‡!
	`__GNUC_PREREQ
 (2,8)

371 
	#__exãnsi⁄__


	)

375 #i‡!
	`__GNUC_PREREQ
 (2,92)

376 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

377 
	#__ª°ri˘
 
ª°ri˘


	)

379 
	#__ª°ri˘


	)

386 #i‡
	`__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


387 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

389 #ifde‡
__GNUC__


390 
	#__ª°ri˘_¨r


	)

392 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

393 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

396 
	#__ª°ri˘_¨r


	)

401 #i‡
__GNUC__
 >= 3

402 
	#__glibc_u∆ikñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 0)

	)

403 
	#__glibc_likñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 1)

	)

405 
	#__glibc_u∆ikñy
(
c⁄d
Ë(c⁄d)

	)

406 
	#__glibc_likñy
(
c⁄d
Ë(c⁄d)

	)

409 #ifde‡
__has_©åibuã


410 
	#__glibc_has_©åibuã
(
©å
Ë
	`__has_©åibuã
 (©å)

	)

412 
	#__glibc_has_©åibuã
(
©å
Ë0

	)

415 #ifde‡
__has_ö˛ude


418 
	#__glibc_has_ö˛ude
 
__has_ö˛ude


	)

420 
	#__glibc_has_ö˛ude
(
hódî
Ë0

	)

423 #i‡(!
deföed
 
_N‹ëu∫
 \

424 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

425 && !
	$__GNUC_PREREQ
 (4,7))

426 #i‡
	`__GNUC_PREREQ
 (2,8)

427 
	#_N‹ëu∫
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

	)

429 
	#_N‹ëu∫


	)

433 #i‡
	`__GNUC_PREREQ
 (8, 0)

437 
	#__©åibuã_n⁄°rög__
 
	`__©åibuã__
 ((
__n⁄°rög__
))

	)

439 
	#__©åibuã_n⁄°rög__


	)

442 #i‡(!
deföed
 
_Sètic_as£π
 && !deföed 
__˝lu•lus
 \

443 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

444 && (!
	`__GNUC_PREREQ
 (4, 6Ë|| 
deföed
 
__STRICT_ANSI__
))

445 
	#_Sètic_as£π
(
ex¥
, 
dügno°ic
) \

446 (*
	`__Sètic_as£π_fun˘i⁄
 ()) \

447 [!! (°ru˘ { 
__îr‹_if_√g©ive
: (
ex¥
Ë? 2 : -1; })]

	)

450 
	~<bôs/w‹dsize.h
>

451 
	~<bôs/l⁄g-doubÀ.h
>

453 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


454 
	#__LDBL_COMPAT
 1

	)

455 #ifde‡
__REDIRECT


456 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

457 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

458 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

459 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

460 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

461 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

462 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

463 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

464 
	#__LDBL_REDIR_DECL
(
«me
) \

465 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

466 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

467 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

468 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

469 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

472 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


473 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

474 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

475 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

476 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

477 
	#__LDBL_REDIR_DECL
(
«me
)

	)

478 #ifde‡
__REDIRECT


479 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

480 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

481 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

490 #i‡
	`__GNUC_PREREQ
 (4,8Ë|| 
	`__glibc_˛™g_¥îeq
 (3,5)

491 
	#__glibc_ma¸o_w¨nög1
(
mesßge
Ë
	`_Pøgma
 (#mesßge)

	)

492 
	#__glibc_ma¸o_w¨nög
(
mesßge
) \

493 
	`__glibc_ma¸o_w¨nög1
 (
GCC
 
w¨nög
 
mesßge
)

	)

495 
	#__glibc_ma¸o_w¨nög
(
msg
)

	)

505 #i‡!
deföed
 
__˝lu•lus
 \

506 && (
	`__GNUC_PREREQ
 (4, 9) \

507 || 
	`__glibc_˛™g_has_exãnsi⁄
 (
c_gíîic_£À˘i⁄s
) \

508 || (!
deföed
 
__GNUC__
 && deföed 
__STDC_VERSION__
 \

509 && 
__STDC_VERSION__
 >= 201112L))

510 
	#__HAVE_GENERIC_SELECTION
 1

	)

512 
	#__HAVE_GENERIC_SELECTION
 0

	)

	@/usr/include/bits/byteswap.h

19 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_BYTESWAP_H


24 
	#_BITS_BYTESWAP_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	#__bsw≠_c⁄°™t_16
(
x
) \

31 ((
__uöt16_t
Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

33 
__ölöe
 
__uöt16_t


34 
	$__bsw≠_16
 (
__uöt16_t
 
__bsx
)

36 #i‡
	`__GNUC_PREREQ
 (4, 8)

37  
	`__buûtö_bsw≠16
 (
__bsx
);

39  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

41 
	}
}

44 
	#__bsw≠_c⁄°™t_32
(
x
) \

45 ((((
x
) & 0xff000000u) >> 24) | (((x) & 0x00ff0000u) >> 8) \

46 | (((
x
Ë& 0x0000ff00uË<< 8Ë| (((xË& 0x000000ffuË<< 24))

	)

48 
__ölöe
 
__uöt32_t


49 
	$__bsw≠_32
 (
__uöt32_t
 
__bsx
)

51 #i‡
	`__GNUC_PREREQ
 (4, 3)

52  
	`__buûtö_bsw≠32
 (
__bsx
);

54  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

56 
	}
}

59 
	#__bsw≠_c⁄°™t_64
(
x
) \

60 ((((
x
) & 0xff00000000000000ull) >> 56) \

61 | (((
x
) & 0x00ff000000000000ull) >> 40) \

62 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

63 | (((
x
) & 0x000000ff00000000ull) >> 8) \

64 | (((
x
) & 0x00000000ff000000ull) << 8) \

65 | (((
x
) & 0x0000000000ff0000ull) << 24) \

66 | (((
x
) & 0x000000000000ff00ull) << 40) \

67 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

69 
__exãnsi⁄__
 
__ölöe
 
__uöt64_t


70 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

72 #i‡
	`__GNUC_PREREQ
 (4, 3)

73  
	`__buûtö_bsw≠64
 (
__bsx
);

75  
	`__bsw≠_c⁄°™t_64
 (
__bsx
);

77 
	}
}

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/long-double.h

	@/usr/include/bits/thread-shared-types.h

19 #i‚de‡
_THREAD_SHARED_TYPES_H


20 
	#_THREAD_SHARED_TYPES_H
 1

	)

77 
	~<bôs/±hªadty≥s-¨ch.h
>

81 #i‡!
__PTHREAD_MUTEX_USE_UNION


82 
	s__±hªad_öã∫Æ_li°


84 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

85 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

86 } 
	t__±hªad_li°_t
;

88 
	s__±hªad_öã∫Æ_¶i°


90 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

91 } 
	t__±hªad_¶i°_t
;

95 #i‡
__PTHREAD_MUTEX_LOCK_ELISION


96 #i‡!
__PTHREAD_MUTEX_USE_UNION


97 
	#__PTHREAD_SPINS_DATA
 \

98 
__•ös
; \

99 
__ñisi⁄


	)

100 
	#__PTHREAD_SPINS
 0, 0

	)

102 
	#__PTHREAD_SPINS_DATA
 \

105 
__e•ös
; \

106 
__ìlisi⁄
; \

107 } 
__ñisi⁄_d©a


	)

108 
	#__PTHREAD_SPINS
 { 0, 0 }

	)

109 
	#__•ös
 
__ñisi⁄_d©a
.
__e•ös


	)

110 
	#__ñisi⁄
 
__ñisi⁄_d©a
.
__ìlisi⁄


	)

113 
	#__PTHREAD_SPINS_DATA
 
__•ös


	)

115 
	#__PTHREAD_SPINS
 0

	)

118 
	s__±hªad_muãx_s


120 
__lock
 
	m__LOCK_ALIGNMENT
;

121 
	m__cou¡
;

122 
	m__ow√r
;

123 #i‡!
__PTHREAD_MUTEX_NUSERS_AFTER_KIND


124 
	m__nu£rs
;

148 
	m__köd
;

149 
	m__PTHREAD_COMPAT_PADDING_MID


150 #i‡
__PTHREAD_MUTEX_NUSERS_AFTER_KIND


151 
	m__nu£rs
;

153 #i‡!
__PTHREAD_MUTEX_USE_UNION


154 
	m__PTHREAD_SPINS_DATA
;

155 
__±hªad_li°_t
 
	m__li°
;

156 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

158 
__exãnsi⁄__
 union

160 
	m__PTHREAD_SPINS_DATA
;

161 
__±hªad_¶i°_t
 
	m__li°
;

163 
	#__PTHREAD_MUTEX_HAVE_PREV
 0

	)

165 
	m__PTHREAD_COMPAT_PADDING_END


171 
	s__±hªad_c⁄d_s


173 
__exãnsi⁄__
 union

175 
__exãnsi⁄__
 
	m__w£q
;

178 
	m__low
;

179 
	m__high
;

180 } 
	m__w£q32
;

182 
__exãnsi⁄__
 union

184 
__exãnsi⁄__
 
	m__g1_°¨t
;

187 
	m__low
;

188 
	m__high
;

189 } 
	m__g1_°¨t32
;

191 
	m__g_ªfs
[2] 
	m__LOCK_ALIGNMENT
;

192 
	m__g_size
[2];

193 
	m__g1_‹ig_size
;

194 
	m__wªfs
;

195 
	m__g_sig«ls
[2];

	@/usr/include/bits/types/__sigset_t.h

1 #i‚de‡
____sig£t_t_deföed


2 
	#____sig£t_t_deföed


	)

4 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

7 
	m__vÆ
[
_SIGSET_NWORDS
];

8 } 
	t__sig£t_t
;

	@/usr/include/bits/uintn-identity.h

19 #i‡!
deföed
 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_UINTN_IDENTITY_H


24 
	#_BITS_UINTN_IDENTITY_H
 1

	)

26 
	~<bôs/ty≥s.h
>

32 
__ölöe
 
__uöt16_t


33 
	$__uöt16_idítôy
 (
__uöt16_t
 
__x
)

35  
__x
;

36 
	}
}

38 
__ölöe
 
__uöt32_t


39 
	$__uöt32_idítôy
 (
__uöt32_t
 
__x
)

41  
__x
;

42 
	}
}

44 
__ölöe
 
__uöt64_t


45 
	$__uöt64_idítôy
 (
__uöt64_t
 
__x
)

47  
__x
;

48 
	}
}

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_chÊags


	)

11 
	#__°ub_Áâach


	)

12 
	#__°ub_fchÊags


	)

13 
	#__°ub_fdëach


	)

14 
	#__°ub_gây


	)

15 
	#__°ub_lchmod


	)

16 
	#__°ub_ªvoke


	)

17 
	#__°ub_£éogö


	)

18 
	#__°ub_sigªtu∫


	)

19 
	#__°ub_s°k


	)

20 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___com∑t_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/linux/limits.h

2 #i‚de‡
_LINUX_LIMITS_H


3 
	#_LINUX_LIMITS_H


	)

5 
	#NR_OPEN
 1024

	)

7 
	#NGROUPS_MAX
 65536

	)

8 
	#ARG_MAX
 131072

	)

9 
	#LINK_MAX
 127

	)

10 
	#MAX_CANON
 255

	)

11 
	#MAX_INPUT
 255

	)

12 
	#NAME_MAX
 255

	)

13 
	#PATH_MAX
 4096

	)

14 
	#PIPE_BUF
 4096

	)

15 
	#XATTR_NAME_MAX
 255

	)

16 
	#XATTR_SIZE_MAX
 65536

	)

17 
	#XATTR_LIST_MAX
 65536

	)

19 
	#RTSIG_MAX
 32

	)

	@/usr/include/bits/pthreadtypes-arch.h

18 #i‚de‡
_BITS_PTHREADTYPES_ARCH_H


19 
	#_BITS_PTHREADTYPES_ARCH_H
 1

	)

21 
	~<bôs/w‹dsize.h
>

23 #ifde‡
__x86_64__


24 #i‡
__WORDSIZE
 == 64

25 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

29 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

31 
	#__SIZEOF_PTHREAD_MUTEX_T
 32

	)

32 
	#__SIZEOF_PTHREAD_ATTR_T
 32

	)

33 
	#__SIZEOF_PTHREAD_MUTEX_T
 32

	)

34 
	#__SIZEOF_PTHREAD_RWLOCK_T
 44

	)

35 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

38 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

39 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

40 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

45 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

46 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

47 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

48 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

51 
	#__PTHREAD_COMPAT_PADDING_MID


	)

52 
	#__PTHREAD_COMPAT_PADDING_END


	)

53 
	#__PTHREAD_MUTEX_LOCK_ELISION
 1

	)

54 #ifde‡
__x86_64__


55 
	#__PTHREAD_MUTEX_NUSERS_AFTER_KIND
 0

	)

56 
	#__PTHREAD_MUTEX_USE_UNION
 0

	)

58 
	#__PTHREAD_MUTEX_NUSERS_AFTER_KIND
 1

	)

59 
	#__PTHREAD_MUTEX_USE_UNION
 1

	)

62 
	#__LOCK_ALIGNMENT


	)

63 
	#__ONCE_ALIGNMENT


	)

65 
	s__±hªad_rwlock_¨ch_t


67 
	m__ªadîs
;

68 
	m__wrôîs
;

69 
	m__wΩha£_fuãx
;

70 
	m__wrôîs_fuãx
;

71 
	m__∑d3
;

72 
	m__∑d4
;

73 #ifde‡
__x86_64__


74 
	m__cur_wrôî
;

75 
	m__sh¨ed
;

76 sig√d 
	m__rwñisi⁄
;

77 #ifde‡ 
__ILP32__


78 
	m__∑d1
[3];

79 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0 }

	)

81 
	m__∑d1
[7];

82 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0, 0, 0, 0, 0 }

	)

84 
	m__∑d2
;

87 
	m__Êags
;

88 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

92 
	m__Êags
;

93 
	m__sh¨ed
;

94 sig√d 
	m__rwñisi⁄
;

95 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0

	)

96 
	m__∑d2
;

97 
	m__cur_wrôî
;

101 #i‚de‡
__x86_64__


103 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@
1
.
1
/usr/include
144
3830
butterfly.c
common.c
common.h
common_timing.h
testing_zgeadd.c
testing_zgebrd_ge2gb.c
testing_zgelqf.c
testing_zgelqf_hqr.c
testing_zgelqf_systolic.c
testing_zgemm.c
testing_zgemm_dtd.c
testing_zgeqrf.c
testing_zgeqrf_dtd.c
testing_zgeqrf_dtd_untied.c
testing_zgeqrf_hqr.c
testing_zgeqrf_rd.c
testing_zgeqrf_systolic.c
testing_zgesv_incpiv.c
testing_zgesvd.c
testing_zgetrf_1d.c
testing_zgetrf_incpiv.c
testing_zgetrf_incpiv_dtd.c
testing_zgetrf_nopiv.c
testing_zgetrf_ptgpanel.c
testing_zgetrf_qrf.c
testing_zhbrdt.c
testing_zhebut.c
testing_zheev.c
testing_zhemm.c
testing_zher2k.c
testing_zherk.c
testing_zlange.c
testing_zlanm2.c
testing_zpivgen.c
testing_zpoinv.c
testing_zposv.c
testing_zpotrf.c
testing_zpotrf_dtd.c
testing_zpotrf_dtd_untied.c
testing_zprint.c
testing_zsymm.c
testing_zsyr2k.c
testing_zsyrk.c
testing_ztrmm.c
testing_ztrsm.c
testing_ztrtri.c
testing_zunmlq.c
testing_zunmlq_hqr.c
testing_zunmlq_systolic.c
testing_zunmqr.c
testing_zunmqr_hqr.c
testing_zunmqr_systolic.c
/usr/include/getopt.h
/usr/include/limits.h
/usr/include/math.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/bits/confname.h
/usr/include/bits/environments.h
/usr/include/bits/floatn.h
/usr/include/bits/flt-eval-method.h
/usr/include/bits/fp-fast.h
/usr/include/bits/fp-logb.h
/usr/include/bits/getopt_core.h
/usr/include/bits/getopt_ext.h
/usr/include/bits/getopt_posix.h
/usr/include/bits/iscanonical.h
/usr/include/bits/libc-header-start.h
/usr/include/bits/math-finite.h
/usr/include/bits/math-vector.h
/usr/include/bits/mathcalls-helper-functions.h
/usr/include/bits/mathcalls-narrow.h
/usr/include/bits/mathcalls.h
/usr/include/bits/mathinline.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/stdint-intn.h
/usr/include/bits/stdint-uintn.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-bsearch.h
/usr/include/bits/stdlib-float.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string_fortified.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/types.h
/usr/include/bits/types/FILE.h
/usr/include/bits/types/__FILE.h
/usr/include/bits/types/__fpos64_t.h
/usr/include/bits/types/__fpos_t.h
/usr/include/bits/types/cookie_io_functions_t.h
/usr/include/bits/types/locale_t.h
/usr/include/bits/types/struct_FILE.h
/usr/include/bits/types/struct_timeval.h
/usr/include/bits/types/time_t.h
/usr/include/bits/unistd.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/features.h
/usr/include/strings.h
/usr/include/sys/select.h
/usr/include/sys/types.h
/usr/include/bits/floatn-common.h
/usr/include/bits/libm-simd-decl-stubs.h
/usr/include/bits/local_lim.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/strings_fortified.h
/usr/include/bits/types/__locale_t.h
/usr/include/bits/types/__mbstate_t.h
/usr/include/bits/types/clock_t.h
/usr/include/bits/types/clockid_t.h
/usr/include/bits/types/sigset_t.h
/usr/include/bits/types/struct_timespec.h
/usr/include/bits/types/timer_t.h
/usr/include/bits/typesizes.h
/usr/include/bits/uio_lim.h
/usr/include/endian.h
/usr/include/gnu/stubs.h
/usr/include/stdc-predef.h
/usr/include/sys/cdefs.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/long-double.h
/usr/include/bits/thread-shared-types.h
/usr/include/bits/types/__sigset_t.h
/usr/include/bits/uintn-identity.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
/usr/include/linux/limits.h
/usr/include/bits/pthreadtypes-arch.h
